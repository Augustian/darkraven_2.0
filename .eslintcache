[{"D:\\Desktop\\darkraven_kino\\src\\index.js":"1","D:\\Desktop\\darkraven_kino\\src\\App.js":"2","D:\\Desktop\\darkraven_kino\\src\\reportWebVitals.js":"3","D:\\Desktop\\darkraven_kino\\src\\components\\Posts.js":"4","D:\\Desktop\\darkraven_kino\\src\\components\\Films.js":"5","D:\\Desktop\\darkraven_kino\\src\\components\\Left_Bar.js":"6","D:\\Desktop\\darkraven_kino\\src\\components\\Top.js":"7","D:\\Desktop\\darkraven_kino\\src\\components\\Searth.js":"8","D:\\Desktop\\darkraven_kino\\src\\components\\Head.js":"9","D:\\Desktop\\darkraven_kino\\src\\components\\Login.js":"10","D:\\Desktop\\darkraven_kino\\src\\components\\Profile.js":"11","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\Header.js":"12","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\HeaderMobile.js":"13","D:\\Desktop\\darkraven_kino\\src\\components\\BD.js":"14","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\EditPage.js":"15","D:\\Desktop\\darkraven_kino\\src\\components\\Actors.js":"16","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\EditActors.js":"17","D:\\Desktop\\darkraven_kino\\src\\components\\VideoPlayer.js":"18","D:\\Desktop\\darkraven_kino\\src\\components\\ViewActors.js":"19","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\ActorSearth.js":"20","D:\\Desktop\\darkraven_kino\\src\\components\\Watched.js":"21","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\index.js":"22","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\App.js":"23","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\reportWebVitals.js":"24","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Left_Bar.js":"25","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Films.js":"26","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Posts.js":"27","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\BD.js":"28","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\VideoPlayer.js":"29","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Searth.js":"30","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Top.js":"31","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Head.js":"32","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Actors.js":"33","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\ViewActors.js":"34","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Watched.js":"35","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\ActorSearth.js":"36","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\EditActors.js":"37","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\EditPage.js":"38","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\HeaderMobile.js":"39","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\Header.js":"40","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Profile.js":"41","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Login.js":"42","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Player.js":"43"},{"size":500,"mtime":499162500000,"results":"44","hashOfConfig":"45"},{"size":6595,"mtime":1610137748434,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":499162500000,"results":"47","hashOfConfig":"45"},{"size":1943,"mtime":1610138275353,"results":"48","hashOfConfig":"45"},{"size":4656,"mtime":1609955932631,"results":"49","hashOfConfig":"45"},{"size":861,"mtime":1609798222612,"results":"50","hashOfConfig":"45"},{"size":3847,"mtime":1610233802871,"results":"51","hashOfConfig":"45"},{"size":3745,"mtime":1609878396776,"results":"52","hashOfConfig":"45"},{"size":3339,"mtime":1610029937975,"results":"53","hashOfConfig":"45"},{"size":6771,"mtime":1609795610520,"results":"54","hashOfConfig":"45"},{"size":1676,"mtime":1609939100371,"results":"55","hashOfConfig":"45"},{"size":4105,"mtime":1609875010668,"results":"56","hashOfConfig":"45"},{"size":5199,"mtime":1609875069299,"results":"57","hashOfConfig":"45"},{"size":5121,"mtime":1610028896327,"results":"58","hashOfConfig":"45"},{"size":10484,"mtime":1609874488100,"results":"59","hashOfConfig":"45"},{"size":4425,"mtime":1610028849743,"results":"60","hashOfConfig":"45"},{"size":4012,"mtime":1609874471322,"results":"61","hashOfConfig":"45"},{"size":12439,"mtime":1610030327832,"results":"62","hashOfConfig":"45"},{"size":3112,"mtime":1609878159108,"results":"63","hashOfConfig":"45"},{"size":4399,"mtime":1609935173929,"results":"64","hashOfConfig":"45"},{"size":4590,"mtime":1609955947928,"results":"65","hashOfConfig":"45"},{"size":517,"mtime":1642619485626,"results":"66","hashOfConfig":"67"},{"size":6800,"mtime":1642622234570,"results":"68","hashOfConfig":"67"},{"size":375,"mtime":1642619485627,"results":"69","hashOfConfig":"67"},{"size":940,"mtime":1642621919953,"results":"70","hashOfConfig":"67"},{"size":4755,"mtime":1642619485600,"results":"71","hashOfConfig":"67"},{"size":2006,"mtime":1642619485606,"results":"72","hashOfConfig":"67"},{"size":5240,"mtime":1642619485598,"results":"73","hashOfConfig":"67"},{"size":12749,"mtime":1642623064882,"results":"74","hashOfConfig":"67"},{"size":3831,"mtime":1642622229209,"results":"75","hashOfConfig":"67"},{"size":3943,"mtime":1642619485611,"results":"76","hashOfConfig":"67"},{"size":3343,"mtime":1642620570652,"results":"77","hashOfConfig":"67"},{"size":4534,"mtime":1642619485596,"results":"78","hashOfConfig":"67"},{"size":3200,"mtime":1642619485613,"results":"79","hashOfConfig":"67"},{"size":4700,"mtime":1642619485615,"results":"80","hashOfConfig":"67"},{"size":4526,"mtime":1642619485616,"results":"81","hashOfConfig":"67"},{"size":4140,"mtime":1642619485618,"results":"82","hashOfConfig":"67"},{"size":10710,"mtime":1642619485619,"results":"83","hashOfConfig":"67"},{"size":5303,"mtime":1642619485622,"results":"84","hashOfConfig":"67"},{"size":4190,"mtime":1642619485620,"results":"85","hashOfConfig":"67"},{"size":1723,"mtime":1642619485608,"results":"86","hashOfConfig":"67"},{"size":6965,"mtime":1642619485605,"results":"87","hashOfConfig":"67"},{"size":558,"mtime":1642623053037,"results":"88","hashOfConfig":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"1ggxurt",{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"91"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"91"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"91"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"91"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"91"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"91"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"91"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"91"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"91"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"91"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"91"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},"1ggwpcr",{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"153"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"153"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"153"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"153"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"153"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"153"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"153"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"153"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"153"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"153"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"153"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"153"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"153"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"153"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"153"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"153"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"153"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"153"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Desktop\\darkraven_kino\\src\\index.js",[],["216","217"],"D:\\Desktop\\darkraven_kino\\src\\App.js",["218","219","220"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.css';\nimport Posts from './components/Posts'\nimport Left_Bar from './components/Left_Bar';\nimport Films from './components/Films';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport VideoPlayer from './components/VideoPlayer';\nimport Top from './components/Top';\nimport Searth from './components/Searth'\nimport Head from './components/Head';\nimport { Toast } from 'react-bootstrap';\nimport BD from './components/BD';\nimport Actors from \"./components/Actors\";\nimport EditPage from './components/subcomponents/EditPage';\nimport EditActors from './components/subcomponents/EditActors';\nimport ViewActors from './components/ViewActors';\nimport ActorSearth from './components/subcomponents/ActorSearth';\nimport Watched from './components/Watched';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      show: false,\n      message: '',\n      Posts: [],\n      VideoContent: [],\n      Recomend: [],\n      PostValue: 0,\n      VideoValuePage: 0,\n      pageSize: 5,\n      search: \"\",\n      Type: 0,\n    };\n\n    this.SetSave = this.SetSave.bind(this);\n    this.RenderPost = this.RenderPost.bind(this);\n    this.Search = this.Search.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  onMessage(mess) {\n    this.setState({ show: true, message: mess });\n  }\n\n  componentDidMount() {\n    \n    this.GetRecomendData();\n  }\n\n  GetRecomendData() {\n    fetch('http://site.alwaysdata.net/recomend.php', {\n      method: 'POST',\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ Recomend: respons.posts });\n      })\n  }\n\n  SetSave(title, idvideo, ico) {\n    var form = new FormData();\n    form.append('title', title);\n    form.append('idvideo', idvideo);\n    form.append('ico', ico);\n    form.append('table', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/save.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ show: true, message: respons.message });\n      })\n  }\n\n  RenderPost(type, Page, pageSize) {\n    var form = new FormData();\n    form.append('type', type);\n    form.append('page', Page);\n    this.setState({ pageSize: pageSize });\n    form.append('pagesize', pageSize);\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch(\"http://site.alwaysdata.net/datavideo.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ VideoContent: respons, VideoValuePage: respons.length });\n        //console.log(\"Video: \", this.state.VideoContent);\n      })\n\n    this.setState({ Type: type });\n  }\n\n  Search(Page, pageSize, result) {\n    this.setState({ pageSize: pageSize, search: result});\n    var form = new FormData();\n    form.append('page', Page);\n    form.append('pagesize', pageSize);\n    form.append('result', result);\n\n    fetch(\"http://site.alwaysdata.net/searth.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ VideoContent: respons, VideoValuePage: respons.length });\n        console.log(\"Searth: \", this.state.VideoContent);\n      })\n  }\n\n  render() {\n    let searth = this.state.search != '' ? <Redirect to={\"/searth\"} /> : null;\n\n    return (\n      <Router>\n        <div className={\"main-conteiner\"}>\n          <Head onMessage={this.onMessage} Search={this.Search} Type={this.state.Type} pageSize={this.state.pageSize} onMessage={this.onMessage} />\n          <div className=\"option\"></div>\n          <Left_Bar data={this.state.Recomend} />\n          {searth}\n\n          <Switch>\n            <Route exact path=\"/\" render={() =><Posts />}/>\n            <Route exact path=\"/top\" render={() => <Top />}/>\n            <Route exact path=\"/films\" render={() =><Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"3\" RenP={this.RenderPost} message={this.onMessage} />}/>\n            <Route exact path=\"/serials\" render={() =><Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"4\" RenP={this.RenderPost} message={this.onMessage} />}/>\n            <Route exact path=\"/doramy\" render={() =><Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"5\" RenP={this.RenderPost} message={this.onMessage} />}/>\n            <Route exact path=\"/anime\" render={() => <Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"6\" RenP={this.RenderPost} message={this.onMessage} />}/>\n            <Route path=\"/video_player/:id\" render={(e) => <VideoPlayer meta={e} message={this.onMessage} SetSave={this.SetSave} />} />\n            <Route path=\"/searth\" render={() => <Searth message={this.onMessage} search={this.state.search} Value={this.state.VideoValuePage} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"7\" />}/>\n            <Route exact path=\"/edit-database\" render={() => <BD message={this.onMessage} />}/>\n            <Route exact path=\"/edit-actors\" render={() => <Actors message={this.onMessage} />} />\n            <Route path=\"/edaeditor/:id\" render={(e) => <EditPage meta={e} message={this.onMessage}/>} />\n            <Route path=\"/edaactor/:id\" render={(e) => <EditActors meta={e} message={this.onMessage}/>} />\n            <Route path=\"/actors\" render={() => <ViewActors/>} />\n            <Route path=\"/actor/:id\" render={(e) => <ActorSearth meta={e}/>} />\n            <Route path=\"/watched\" render={() => <Watched message={this.onMessage}/>} />\n            <Route render={() => <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>Такой страницы нема)</h1>} />\n          </Switch>\n\n          <div className={\"message\"}>\n            <Toast onClose={() => this.setState({ show: false })} show={this.state.show} delay={3000} autohide>\n              <Toast.Header>\n                <strong className=\"mr-auto\">Уведомление!</strong>\n              </Toast.Header>\n              <Toast.Body>{this.state.message}</Toast.Body>\n            </Toast>\n          </div>\n        </div>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;","D:\\Desktop\\darkraven_kino\\src\\reportWebVitals.js",[],"D:\\Desktop\\darkraven_kino\\src\\components\\Posts.js",["221"],"import React from 'react';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Posts extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            pageSize: 5,\n            page: 1,\n            Posts: null,\n            PostValue: 0,\n        };\n        this.GetData = this.GetData.bind(this);\n    }\n\n    componentDidMount() {\n        this.GetData(0);\n    }\n\n    GetData(list) {\n        var form = new FormData();\n        form.append('list', list);\n        fetch('http://site.alwaysdata.net/posts.php', {\n            method: 'POST',\n            body: form,\n        }).then(res => res.json())\n            .then(respons => {\n                this.setState({ Posts: respons.posts, PostValue: respons.postsvalue });\n            })\n    }\n\n    render() {\n        const data = this.state.Posts;\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        return (\n            <div className=\"central\">\n                {data.map((post, key) =>\n                    <div key={key} className=\"post-slot\">\n                        <h1>{post.title}</h1>\n                        {post.photo1 &&\n                            <img src={post.photo1} width=\"40%\" />\n                        }\n                        <div dangerouslySetInnerHTML={{__html: post.discription}}/>\n                    </div>\n                )}\n                <Pagination\n                    className=\"pagination\"\n                    count={Math.ceil(this.props.Value / 5)}\n                    page={this.state.page}\n                    siblingCount={3}\n                    boundaryCount={2}\n                    onChange={(event, page) => {\n                        this.props.Func(this.props.type, page - 1, this.state.pageSize);\n                        window.scrollTo(0, 0);\n                        this.setState({ page: page });\n                    }} />\n            </div>\n        );\n    }\n}\n\nexport default Posts;","D:\\Desktop\\darkraven_kino\\src\\components\\Films.js",["222","223"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Favorite, Visibility } from '@material-ui/icons';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Films extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            pageSize: 5,\n            page: 1,\n        };\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.RenP(this.props.type, 0, this.props.pageSize)\n    }\n\n    onShowSizeChange(current, pagesize) {\n        this.setState({ pageSize: pagesize });\n    }\n\n    addWatched(id) {\n        var form = new FormData();\n        form.append('id', id);\n        form.append('token', localStorage.getItem(\"token\"));\n        fetch(\"http://site.alwaysdata.net/addwatch.php\", {\n            method: 'POST',\n            body: form,\n        });\n\n        this.props.Func(this.props.type, this.state.page - 1, this.state.pageSize);\n    }\n\n    render() {\n        const data = this.props.ContentVideo;\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        return (\n            <div className=\"central\">\n                {data.map((post, key) => {\n                    if (post.title != null) {\n                        return (\n                            <div key={key} className=\"post-slot\">\n                                <Button className=\"ForeverVideo\" onClick={() => {\n                                    if (localStorage.getItem(\"name\")) {\n                                        this.props.SetSave(post.title, post.id_video, post.poster != null ? post.poster : 'https://st.kp.yandex.net/images/no-poster.gif');\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                                }}>\n                                    <Favorite />\n                                </Button>\n                                <Button className=\"ForeverVideo\" style={{ right: \"60px\" }} onClick={() => {\n                                    if (localStorage.getItem(\"name\")) {\n                                        this.setState({ viewed: !this.state.viewed });\n                                        this.addWatched(post.id_video);\n                                        this.props.message('Вы пометили видео запись просмотренной.');\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                                }}>\n                                    <Visibility />\n                                </Button>\n                                <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\n                                <img src={post.poster} height=\"200px\" />\n                                {post.year != null ?\n                                    <div className=\"info_panel\">\n                                        <p>Год: {post.year}</p>\n                                        <p>Страна: {post.countries}</p>\n                                        <p>Жанры: {post.genres}</p>\n                                        <p>Продолжительность: {post.duration} мин.</p>\n                                        <br />\n                                        <p>{post.discription != null && post.discription}</p>\n                                        <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                                        <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                                        <p className=\"quality\">{post.quality}</p>\n                                    </div>\n                                    :\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>}\n                            </div>\n                        )\n                    }\n                })}\n\n                <Pagination\n                    className=\"pagination\"\n                    count={Math.ceil(this.props.Value / 5)}\n                    page={this.state.page}\n                    siblingCount={3}\n                    boundaryCount={2}\n                    onChange={(event, page) => {\n                        this.props.Func(this.props.type, page - 1, this.state.pageSize);\n                        window.scrollTo(0, 0);\n                        this.setState({ page: page });\n                    }} />\n            </div>\n        );\n    }\n}\n\nexport default Films;","D:\\Desktop\\darkraven_kino\\src\\components\\Left_Bar.js",["224","225"],"import React from 'react';\n\nclass Left_Bar extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    render() {\n        return (\n            <div className=\"left-bar\">\n                <div className=\"recommend\">\n                    <h3>Рекомендуемые</h3>\n                    <div>\n                        {this.props.data.map((recomend, key) =>\n                            <div className=\"slot-recommend\" key={key}>\n                                <a href={\"/video_player/\" + recomend.idvideo}>\n                                    <img src={recomend.photo} />\n                                    <p>{recomend.title}</p>\n                                </a>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Left_Bar;","D:\\Desktop\\darkraven_kino\\src\\components\\Top.js",["226","227","228","229","230","231"],"import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport { Table } from 'react-bootstrap';\n\nclass Top extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            TopElements: [],\n        };\n    }\n    componentDidMount() {\n        this.GetTop();\n    }\n\n    GetTop() {\n        fetch('https://kodikapi.com/list?token=9f97924b4aae53e816f330c113b08294&with_material_data=true&translation_type=voice&year=2020&sort=kinopoisk_rating&limit=50', {\n            method: 'POST',\n        }).then(res => res.json())\n            .then(respons => {\n                respons.results.map(result => {\n                    this.setState(state => {\n                        return {\n                            TopElements: [...state.TopElements, {\n                                poster: result.material_data ?\n                                    <img src={result.material_data.poster_url} height=\"100px\" /> :\n                                    <img src={\"https://st.kp.yandex.net/images/no-poster.gif\"} height=\"100px\" />,\n                                title: <Link to={\"/video_player/\" + result.id}>{result.title}</Link>,\n                                link: result.link,\n                                year: result.year,\n                                quality: result.quality,\n                                genres: result.material_data ?\n                                    result.material_data.genres : null,\n                                kinopoisk_rating: result.material_data ?\n                                    result.material_data.kinopoisk_rating :\n                                    <p>Без оценки</p>\n                            }],\n                        }\n                    })\n                })\n                console.log(\"Top: \", this.state.TopElements);\n                console.log(\"Full: \", respons);\n            })\n    }\n\n    render() {\n\n        return (\n            <div className=\"central\">\n\n                <Table striped bordered hover variant=\"dark\" responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Постер</th>\n                            <th>Название</th>\n                            <th>Год</th>\n                            <th>Качество</th>\n                            <th>Жанры</th>\n                            <th>Рейтинг</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.TopElements.map((post, key) =>\n                            <tr key={key}>\n                                <td>{key + 1}</td>\n                                <td>{post.poster}</td>\n                                <td>{post.title}</td>\n                                <td>{post.year}</td>\n                                <td>{post.quality}</td>\n                                <td>{post.genres.map((genres, key) => {\n                                    if (genres != null) {\n                                        return (\n                                            <div key={key} className=\"Tag\">\n                                                {genres}\n                                            </div>);\n                                    } else {\n                                        return (<p key={key}>Без распределений по жанрам</p>);\n                                    }\n                                })}\n                                </td>\n                                <td>{post.kinopoisk_rating}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Top;","D:\\Desktop\\darkraven_kino\\src\\components\\Searth.js",["232","233","234"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Films extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            pageSize: 5,\n            page: 1,\n        };\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n    }\n\n    onShowSizeChange(current, pagesize) {\n        this.setState({ pageSize: pagesize });\n    }\n\n    render() {\n        const data = this.props.ContentVideo;\n        if (!data) {\n            return <div className=\"central\">\n                <h2 style={{ color: \"white\" }}>Поиск по сайту: нет результатов!</h2>\n            </div>\n        }\n        return (\n            <div className=\"central\">\n                <h2 style={{ color: \"white\" }}>Поиск по сайту:</h2>\n                {data.map((post, key) => {\n                    if (post.title != null) {\n                        return (\n                            <div key={key} className=\"post-slot\">\n                                <Button className=\"ForeverVideo\" onClick={() => {\n                                    if (localStorage.getItem(\"name\")) {\n                                        this.props.SetSave(post.title, post.id_video, post.poster != null ? post.poster : 'https://st.kp.yandex.net/images/no-poster.gif');\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                                }}>\n                                    <FavoriteIcon />\n                                </Button>\n\n                                <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\n                                {post.poster != null ? <img src={post.poster} height=\"200px\" /> : <img src={\"https://st.kp.yandex.net/images/no-poster.gif\"} height=\"200px\" />}\n                                {post.year != null ?\n                                    <div className=\"info_panel\">\n                                        <p>Год: {post.year}</p>\n                                        <p>Страна: {post.countries}</p>\n                                        <p>Жанры: {post.genres}</p>\n                                        <p>Продолжительность: {post.duration} мин.</p>\n                                        <br />\n                                        <p>{post.discription != null && post.discription}</p>\n                                        <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                                        <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                                        <p className=\"quality\">{post.quality}</p>\n                                    </div>\n                                    :\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>}\n                            </div>\n                        )\n                    }\n                })}\n\n                <Pagination\n                    className=\"pagination\"\n                    count={Math.ceil(this.props.Value / 5)}\n                    page={this.state.page}\n                    siblingCount={3}\n                    boundaryCount={2}\n                    onChange={(event, page) => {\n                        this.props.sear(page - 1, this.state.pageSize, this.props.search);\n                        window.scrollTo(0, 0);\n                        this.setState({ page: page });\n                    }} />\n\n            </div>\n        );\n    }\n}\n\nexport default Films;","D:\\Desktop\\darkraven_kino\\src\\components\\Head.js",["235"],"import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport Header from './subcomponents/Header';\r\nimport HeaderMobile from './subcomponents/HeaderMobile';\r\nimport Login from './Login';\r\nimport Profile from './Profile';\r\n\r\nclass Head extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            BookMarks: [],\r\n            SliderPost: [],\r\n        }\r\n        this.GetSave = this.GetSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetSliderData();\r\n    }\r\n\r\n    GetSave() {\r\n        var form = new FormData();\r\n        form.append('table', localStorage.getItem(\"token\"));\r\n        fetch('http://site.alwaysdata.net/write.php', {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ BookMarks: respons.marks });\r\n            })\r\n    }\r\n\r\n    RemoveSaveBookMark(id) {\r\n        var form = new FormData();\r\n        form.append('id', id);\r\n        form.append('table', localStorage.getItem(\"token\"));\r\n        fetch('http://site.alwaysdata.net/remove.php', {\r\n            method: 'POST',\r\n            body: form,\r\n        })\r\n    }\r\n\r\n    GetSliderData() {\r\n        fetch('http://site.alwaysdata.net/headslider.php', {\r\n            method: 'POST',\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ SliderPost: respons.posts });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h3>Dark <span style={{ backgroundColor: \"#ffd700\", color: \"#262a2d\", padding: \"0 5px 3px 5px\", borderRadius: \"5px\" }}>Raven</span></h3>\r\n                    {localStorage.getItem(\"token\") != null ? <Profile /> : <Login message={this.props.onMessage} />}\r\n                </div>\r\n\r\n                <Header searth={this.props.Search} type={this.props.Type} pageSize={this.props.pageSize} BookMarks={this.state.BookMarks} RemoveSaveBookMark={this.RemoveSaveBookMark} message={this.props.onMessage} getsave={this.GetSave} />\r\n                <HeaderMobile searth={this.props.Search} type={this.props.Type} pageSize={this.props.pageSize} BookMarks={this.state.BookMarks} RemoveSaveBookMark={this.RemoveSaveBookMark} message={this.props.onMessage} getsave={this.GetSave} />\r\n\r\n                <Carousel style={{ height: \"400px\" }}>\r\n                    {this.state.SliderPost.map((items, key) =>\r\n                        <Carousel.Item key={key}>\r\n                            <div class=\"item\">\r\n                                <a href={\"/video_player/\" + items.idvideo}>\r\n                                    <div className=\"carusel_item\">\r\n                                        <div className=\"carusel_background\" style={{ backgroundImage: \"url(\" + items.photo + \")\" }}></div>\r\n                                        <div className={\"carusel_info\"}><div><h2>{items.title}</h2><p>{items.discr}</p></div><img src={items.photo} style={{ width: \"170px\" }} /></div>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        </Carousel.Item>\r\n                    )}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Head;","D:\\Desktop\\darkraven_kino\\src\\components\\Login.js",["236","237"],"import React from 'react';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\n\nclass Login extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      show: false,\n      showreg: false,\n    };\n  }\n\n  onLogin = (values) => {\n    var form = new FormData();\n    form.append('login', values.login);\n    form.append('password', values.password);\n    fetch('http://site.alwaysdata.net/login.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        if (respons.token != null) {\n          localStorage.setItem(\"token\", respons.token);\n          localStorage.setItem(\"name\", respons.name);\n          localStorage.setItem(\"icon\", respons.icon);\n          localStorage.setItem(\"style\", respons.style);\n          this.props.message('Успех!');\n          window.location.reload();\n        } else {\n          this.props.message('Не правильный логин или пароль!');\n        }\n      })\n  };\n\n  onRegister = (values) => {\n    var form = new FormData();\n    form.append('login', values.login);\n    form.append('password', values.password);\n    form.append('name', values.name);\n    fetch('http://site.alwaysdata.net/register.php', {\n      method: 'POST',\n      body: form,\n    })\n    this.props.message('Успех!');\n    this.setState({ showreg: false });\n  };\n\n  showModal = () => { this.setState({ show: true, showreg: false }); };\n  showModalreg = () => { this.setState({ showreg: true, show: false}); };\n\n  handleClose = () => this.setState({ show: false });\n  handleShow = () => this.setState({ show: true });\n\n  handleCloseReg = () => this.setState({ showreg: false });\n  handleShowReg = () => this.setState({ showreg: true });\n\n  render() {\n    return (\n      <div style={{ position: \"static\" }}>\n        <button className=\"reg\" onClick={this.showModalreg}>Регистрация</button>\n        <Button type=\"primary\" className=\"auth\" onClick={this.showModal}><ExitToAppIcon style={{ marginRight: \"5px\", fontSize: \"15px\", marginTop: \"-5px\" }} /><span>Войти</span></Button>\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Авторизация</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Formik\n              onSubmit={this.onLogin}\n              initialValues={{\n                login: '',\n                password: '',\n              }}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n                <Form Validate onSubmit={handleSubmit} >\n                  <Form.Row>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Логин</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"login\"\n                        value={values.login}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Пароль</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                  </Form.Row>\n                  <Button type=\"submit\">Войти</Button>\n                </Form>\n              )}\n            </Formik>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <p style={{ textAlign: \"center\" }}>Если у вас все еще нет аккаунта, то вы можете его зарегестрировать нажав <a className=\"link-redirect\" onClick={this.showModalreg}>сюда!</a></p>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showreg} onHide={this.handleCloseReg}>\n          <Modal.Header closeButton>\n            <Modal.Title>Регистрация</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Formik\n              onSubmit={this.onRegister}\n              initialValues={{\n                login: '',\n                password: '',\n                name: '',\n              }}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n                <Form Validate onSubmit={handleSubmit} >\n                  <Form.Row>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Логин</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"login\"\n                        value={values.login}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Пароль</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Имя</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Button type=\"submit\">Зарегистрироваться</Button>\n                </Form>\n              )}\n            </Formik>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <p style={{ textAlign: \"center\" }}>Если у вас уже есть аккаунт, то вы можете войти нажав <a className=\"link-redirect\" onClick={this.showModal}>сюда!</a></p>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Login","D:\\Desktop\\darkraven_kino\\src\\components\\Profile.js",["238","239"],"import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\n\nclass Profile extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isModerator: 0,\n    }\n  }\n  CheckModerator() {\n    var form = new FormData();\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/checkmoderator.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        console.log(respons);\n        if (respons != null)\n          this.setState({ isModerator: respons });\n      })\n  }\n\n  render() {\n    return (\n      <Dropdown className=\"profile\">\n        <Dropdown.Toggle variant=\"none\" id=\"dropdown-basic\" onMouseDown={() => this.CheckModerator()}><img src={localStorage.getItem(\"icon\")} width={\"25px\"} height={\"25px\"} style={{ marginRight: \"10px\", borderRadius: \"10px\", objectFit: \"cover\" }} />{localStorage.getItem(\"name\")}</Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <small style={{ color: \"grey\" }}>Управление аккаунтом</small>\n          {this.state.isModerator == 1 &&\n            <div>\n              <Dropdown.Item href=\"/edit-database\">Управление базой</Dropdown.Item>\n              <Dropdown.Item href=\"/edit-actors\">Управление актерами</Dropdown.Item>\n              <Dropdown.Divider />\n            </div>}\n          <Dropdown.Item href=\"/watched\">Просмотренные</Dropdown.Item>\n          <Dropdown.Divider />\n          <Dropdown.Item href=\"/\" onClick={() => { localStorage.clear() }}>Выход</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\nexport default Profile;\n","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\Header.js",["240","241","242"],"import React from 'react';\nimport { Navbar, NavDropdown, Form, Nav, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\n\nclass Header extends React.Component {\n\n    constructor() {\n        super();\n    }\n    serath = (e) => {\n        this.props.searth(0, this.props.pageSize, e.value);\n    }\n\n    render() {\n        return (\n            <Navbar bg=\"none\" className={\"nav_bar pc-view\"} expand=\"md\" variant=\"none\">\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto\">\n                        <Nav.Link href=\"/\">Главная</Nav.Link>\n                        <NavDropdown onClick={() => this.props.getsave()} title=\"Избранное\" id=\"basic-nav-dropdown\" style={{ backgroundColor: \"#0c1013\", maxHeight: \"200px\" }}>\n                            {this.props.BookMarks.map((mark, key) =>\n                                <NavDropdown.Item key={\"index=\" + key}>\n                                    <Link to={\"/video_player/\" + mark[2]} className=\"mark-slot\">\n                                        <h1>{mark[1]}</h1>\n                                        <img src={mark[3]} height=\"70px\" />\n                                        {mark[4] != 0 && <h2>Отсановились на {mark[4]} серии</h2>}\n                                        <Button\n                                            variant=\"danger\"\n                                            style={{\n                                                position: \"absolute\",\n                                                bottom: \"0px\",\n                                                right: \"0px\",\n                                                padding: \"0 3px\"\n                                            }}\n                                            onClick={() => {\n                                                this.props.RemoveSaveBookMark(mark[0]);\n                                                this.props.message(\"Успешное удаление: '\" + mark[1] + \"'\");\n                                            }}>Удалить</Button>\n                                    </Link>\n                                </NavDropdown.Item>\n                            )}\n\n                        </NavDropdown>\n                        <Nav.Link href=\"/top\">Рекомендации</Nav.Link>\n                        <Nav.Link href=\"/actors\">Актеры</Nav.Link>\n                        <Nav.Link href=\"/films\">Фильмы</Nav.Link>\n                        <Nav.Link href=\"/serials\">Сериалы</Nav.Link>\n                        <Nav.Link href=\"/doramy\">Дорамы</Nav.Link>\n                        <Nav.Link href=\"/anime\">Аниме</Nav.Link>\n                    </Nav>\n\n                    <Formik\n                        onSubmit={this.serath}\n                        initialValues={{\n                            value: '',\n                        }}\n                    >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            handleBlur,\n                            values,\n                            touched,\n                            isValid,\n                            errors,\n                        }) => (\n                            <Form inline onSubmit={handleSubmit}>\n                                <Form.Control\n                                    type=\"text\"\n                                    name=\"value\"\n                                    value={values.value}\n                                    onChange={handleChange}\n                                    placeholder=\"Введите название...\"\n                                    className=\"mr-sm-2\" />\n                                <Button type=\"submit\">Поиск</Button>\n                            </Form>\n                        )}\n                    </Formik>\n                </Navbar.Collapse>\n            </Navbar>\n        );\n    }\n}\nexport default Header;","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\HeaderMobile.js",["243","244","245","246","247"],"import React from 'react';\nimport { Card, Accordion, Form, Modal, Button, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nclass HeaderMobile extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            show: false,\n        };\n    }\n\n    serath = (e) => {\n        this.props.searth(0, this.props.pageSize, e.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Accordion defaultActiveKey=\"0\" className={\"nav_bar mobile-view\"}>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\"><MenuIcon style={{ color: \"#FFD700\" }} /></Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <a href=\"/\">Главная</a>\n                                <a onClick={() => { this.props.getsave(); this.setState({ show: true }); }}>Избранное</a>\n                                <a href=\"/top\">Рекомендации</a>\n                                <a href=\"/actors\">Актеры</a>\n                                <a href=\"/films\">Фильмы</a>\n                                <a href=\"/serials\">Сериалы</a>\n                                <a href=\"/doramy\">Дорамы</a>\n                                <a href=\"/anime\">Аниме</a>\n\n                                <Formik\n                                    onSubmit={this.serath}\n                                    initialValues={{\n                                        value: '',\n                                    }}\n                                >\n                                    {({\n                                        handleSubmit,\n                                        handleChange,\n                                        handleBlur,\n                                        values,\n                                        touched,\n                                        isValid,\n                                        errors,\n                                    }) => (\n                                        <Form onSubmit={handleSubmit}>\n                                            <Form.Control\n                                                type=\"text\"\n                                                name=\"value\"\n                                                value={values.value}\n                                                onChange={handleChange}\n                                                placeholder=\"Введите название...\"\n                                                className=\"mr-sm-2\" />\n                                            <Button type=\"submit\" style={{ width: \"100%\" }}>Поиск</Button>\n                                        </Form>\n                                    )}\n                                </Formik>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n                <Modal\n                    show={this.state.show}\n                    onHide={() => this.setState({ show: false })}\n                    dialogClassName=\"modal-90w\"\n                    aria-labelledby=\"example-custom-modal-styling-title\"\n                >\n                    <Modal.Header closeButton style={{ backgroundColor: \"#171a1f\", color: \"#FFD700\" }}>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">Избранное</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{ backgroundColor: \"#171a1f\", color: \"#FFD700\" }}>\n                        {this.props.BookMarks.map((mark, key) =>\n                            <div className=\"book-mark\" key={\"index=\" + key}>\n                                <a href={\"/video_player/\" + mark[2]} className=\"mark-slot\">\n                                    <h1>{mark[1]}</h1>\n                                    <img src={mark[3]} height=\"70px\" />\n                                    {mark[4] != 0 && <h2>Отсановились на {mark[4]} серии</h2>}\n                                    <Button\n                                        variant=\"danger\"\n                                        style={{\n                                            position: \"absolute\",\n                                            bottom: \"0px\",\n                                            right: \"0px\",\n                                            padding: \"0 3px\"\n                                        }}\n                                        onClick={() => {\n                                            this.props.RemoveSaveBookMark(mark[0]);\n                                            this.props.message(\"Успешное удаление: '\" + mark[1] + \"'\");\n                                        }}>Удалить</Button>\n                                </a>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default HeaderMobile;","D:\\Desktop\\darkraven_kino\\src\\components\\BD.js",["248","249","250","251"],"import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass BD extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            referrer: null,\n            Content: [],\n            ValuePage: null,\n            pageSize: 5,\n            page: 1,\n            type: 0,\n        };\n    }\n\n    componentDidMount() {\n        this.RenderDB(0, 0, this.state.pageSize);\n    }\n\n    DeleteFilm(name, id) {\n        if (window.confirm(\"Вы действительно желаете удалить видеозапись, \" + name + \"?\")) {\n            var form = new FormData();\n            form.append('id', id);\n            form.append('token', localStorage.getItem(\"token\"));\n            fetch(\"http://site.alwaysdata.net/deleteeditor.php\", {\n                method: 'POST',\n                body: form,\n            });\n            this.props.message(\"Успешное удаление: '\" + name + \"'\");\n            this.RenderDB(this.state.type, this.state.page, this.state.pageSize);\n        }\n    }\n\n    RenderDB(type, Page, pageSize) {\n        var form = new FormData();\n        form.append('type', type);\n        form.append('page', Page);\n        form.append('pagesize', pageSize);\n\n        fetch(\"http://site.alwaysdata.net/dbdatavideo.php\", {\n            method: 'POST',\n            body: form,\n        }).then(res => res.json())\n            .then(respons => {\n                this.setState({ Content: respons.video, ValuePage: respons.length, pageSize: pageSize });\n                //console.log(respons);\n            })\n    }\n\n    render() {\n        const data = this.state.Content;\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        const { referrer } = this.state;\n        if (referrer) return <Redirect to={referrer} />;\n        return (\n            <Router>\n                <div className=\"central\">\n                    {this.state.Content.map((post, key) => {\n                        if (post.title != null) {\n                            return (\n                                <div key={key} className=\"post-slot\">\n                                    <Button className=\"ForeverVideo\" onClick={() => { this.setState({ referrer: \"/edaeditor/\" + post.id_video }) }}>\n                                        <Link to={\"/edaeditor/\" + post.id_video}>\n                                            <EditIcon style={{ color: \"white\" }} />\n                                        </Link>\n                                    </Button>\n                                    <Button variant=\"danger\" className=\"ForeverVideo\" style={{ marginRight: \"60px\" }} onClick={() => {this.DeleteFilm(post.title, post.id_video);}}>\n                                        <DeleteIcon />\n                                    </Button>\n                                    <a className=\"post-slot-button\">{post.title}</a>\n                                    <img src={post.poster} height=\"200px\" />\n                                    {post.year != null ?\n                                        <div className=\"info_panel\">\n                                            <p>Год: {post.year}</p>\n                                            <p>Страна: {post.countries}</p>\n                                            <p>Жанры: {post.genres}</p>\n                                            <p>Продолжительность: {post.duration} мин.</p>\n                                            <br />\n                                            <p>{post.discription != null && post.discription}</p>\n                                            <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                                            <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                                            <p className=\"quality\">{post.quality}</p>\n                                        </div>\n                                        :\n                                        <p style={{ color: \"white\" }}>Нет информации!</p>\n                                    }\n                                </div>\n                            )\n                        }\n                    })}\n\n                    <Pagination\n                        className=\"pagination\"\n                        count={Math.ceil(this.state.ValuePage / 5)}\n                        page={this.state.page}\n                        siblingCount={3}\n                        boundaryCount={2}\n                        onChange={(event, page) => {\n                            this.RenderDB(this.state.type, page - 1, this.state.pageSize);\n                            window.scrollTo(0, 0);\n                            this.setState({ page: page });\n                        }} />\n                </div>\n            </Router >\n        );\n    }\n}\n\nexport default BD;","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\EditPage.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"import React from 'react';\nimport \"../../styles/EditPage.css\";\nimport { Card, Accordion, Button } from 'react-bootstrap';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass EditPage extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      referrer: null,\n      Info: null,\n      message: null,\n      countrieslist: [],\n      genreslist: [],\n    };\n  }\n\n  Init() {\n    try {\n      let data = this.state.Info;\n\n      this.title.value = data.title;\n      this.title_orig.value = data.title_orig;\n      this.poster.value = data.poster;\n      this.year.value = data.year;\n      this.setState({ countrieslist: data.countries.split(\",\") });\n      this.setState({ genreslist: data.genres.split(\",\") });\n      this.duration.value = data.duration;\n      this.description.value = data.discription;\n      this.kinopoisk_rating.value = data.kinopoisk_rating;\n      this.imdb_rating.value = data.imdb_rating;\n      this.quality.value = data.quality;\n      this.actors.value = data.actors;\n      this.directors.value = data.directors;\n      this.producers.value = data.producers;\n      this.writers.value = data.writers;\n      this.composers.value = data.composers;\n      this.editors.value = data.editors;\n      this.designers.value = data.designers;\n      this.operators.value = data.operators;\n    } catch {\n      this.setState({ referrer: \"/\" });\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\n      this.GetData(this.props.meta.match.params.id);\n    }\n  }\n\n  GetData(id) {\n    var form = new FormData();\n    form.append('id', id);\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch(\"http://site.alwaysdata.net/editorview.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        if (respons != null) {\n          this.setState({ Info: respons });\n        } else {\n          this.setState({ referrer: \"/\" });\n        }\n        //console.log(respons);\n        this.Init();\n      })\n  }\n\n  saveInfo(id) {\n    console.log(this.state);\n    var form = new FormData();\n    form.append('id', id);\n\n    form.append('title', this.title.value);\n    form.append('title_orig', this.title_orig.value);\n    form.append('image', this.poster.value);\n    form.append('year', this.year.value);\n    form.append('countries', this.state.countrieslist);\n    form.append('genres', this.state.genreslist);\n    form.append('duration', this.duration.value);\n    form.append('description', this.description.value);\n    form.append('kinopoisk_rating', this.kinopoisk_rating.value);\n    form.append('imdb_rating', this.imdb_rating.value);\n    form.append('quality', this.quality.value);\n    form.append('actors', this.actors.value);\n    form.append('directors', this.directors.value);\n    form.append('producers', this.producers.value);\n    form.append('writers', this.writers.value);\n    form.append('composers', this.composers.value);\n    form.append('editors', this.editors.value);\n    form.append('designers', this.designers.value);\n    form.append('operators', this.operators.value);\n\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch(\"http://site.alwaysdata.net/saveeditor.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        if (respons != null) {\n          this.setState({ message: respons.message });\n          this.props.message(respons.message);\n        } else {\n          this.setState({ referrer: \"/\" });\n        }\n      })\n  }\n\n  render() {\n    const { referrer } = this.state;\n    if (referrer) return <Redirect to={referrer} />;\n\n    let data = this.state.Info;\n\n    if (data == null) {\n      this.GetData(this.props.meta.match.params.id);\n      return <div>Загрузка данных....</div>\n    }\n\n    return (\n      <div className={\"central videoview\"}>\n        <p className=\"post-slot-button post-slot-buttonview editor-title\"><input placeholder={data.title} ref={el => this.title = el} /></p>\n        <p className=\"original-title editor-title\"><input placeholder={data.title_orig} ref={el => this.title_orig = el} /></p>\n        <Button className=\"ForeverVideo\" style={{ top: \"-32px\" }} onClick={() => this.saveInfo(data.id_video)}><SaveIcon /></Button>\n        <img style={{ float: \"left\", padding: \"3px\" }} src={data.poster} height=\"200px\" width=\"auto\" ref={el => { this.image = el; }} />\n        <input className={\"editor-poster\"} placeholder={data.poster} onChange={(e) => { e.target.value != \"\" ? this.image.src = e.target.value : this.image.src = data.poster; console.log(this.image); }} ref={el => this.poster = el} />\n        <div className=\"info-videoview\">\n          <p>Год: <input className={\"editor-input\"} placeholder={data.year} ref={el => this.year = el} /></p>\n          <p>Страна: <input className={\"editor-input\"} placeholder={data.countries != \"\" ? data.countries : \"\"} ref={el => this.countries = el} />\n            <button className={\"add-item\"} onClick={() => {\n              this.setState({ countrieslist: [...this.state.countrieslist, this.countries.value] });\n              this.countries.value = null;\n            }\n            }>+</button>\n          </p>\n          <div className=\"data-list\">\n            {this.state.countrieslist.map((countrie, key) => {\n              return (\n                <div className=\"Tag\" key={key}>\n                  {countrie}\n                  <button className={\"delete-item\"} onClick={() =>\n                    this.setState({ countrieslist: this.state.countrieslist.filter((_, i) => i !== key) })\n                  }>\n                    <CloseIcon style={{ fontSize: \"12px\" }} />\n                  </button>\n                </div>\n              );\n            }\n            )}\n          </div>\n          <p>Жанры: <input className={\"editor-input\"} placeholder={data.genres != \"\" ? data.genres : \"\"} ref={el => this.genres = el} />\n            <button className={\"add-item\"} onClick={() => {\n              this.setState({ genreslist: [...this.state.genreslist, this.genres.value] });\n              this.genres.value = null;\n            }\n            }>+</button>\n            <div className=\"data-list\">\n              {this.state.genreslist.map((genres, key) => {\n                return (\n                  <div className=\"Tag\" key={key}>\n                    {genres}\n                    <button className={\"delete-item\"} onClick={() =>\n                      this.setState({ genreslist: this.state.genreslist.filter((_, i) => i !== key) })\n                    }>\n                      <CloseIcon style={{ fontSize: \"12px\" }} />\n                    </button>\n                  </div>\n                );\n              }\n              )}\n            </div>\n          </p>\n          <p>Продолжительность: <input className={\"editor-input\"} placeholder={data.duration} ref={el => this.duration = el} /> мин.</p>\n          <br />\n          <p>Описание: <textarea className={\"editor-area\"} placeholder={data.description != \"\" && data.description} ref={el => this.description = el} /></p>\n          <p className={\"rating-info\"} style={{ top: 0 }}>КиноПоиск: <input className={\"editor-input\"} placeholder={data.kinopoisk_rating} style={{ width: \"200px\" }} ref={el => this.kinopoisk_rating = el} /></p>\n          <p className={\"rating-info\"} style={{ top: \"30px\" }}>Imdb: <input className={\"editor-input\"} placeholder={data.imdb_rating} style={{ width: \"200px\" }} ref={el => this.imdb_rating = el} /></p>\n          <p className={\"rating-info\"} style={{ top: \"60px\", color: \"green\" }}>Качество: <input className={\"editor-input\"} placeholder={data.quality} style={{ width: \"200px\" }} ref={el => this.quality = el} /></p>\n        </div>\n        <hr></hr>\n        <iframe src={data.link + \"?hide_selectors=true\"} width=\"100%\" height=\"350\" frameborder=\"0\" allowfullscreen allow=\"autoplay *; fullscreen *\"></iframe>\n        <Accordion>\n          {/*seasons != null ? seasons.map((seasons, key) => {\n            return (\n              <Card key={key} style={{ borderColor: \"#474b4e\" }}>\n                <Card.Header style={{ backgroundColor: \"#262a2d\" }}>\n                  <Accordion.Toggle as={Button} variant=\"link\" style={{ width: \"100%\" }} eventKey={seasons}>\n                    Сезон {seasons}\n                  </Accordion.Toggle>\n                </Card.Header>\n\n                <Accordion.Collapse eventKey={seasons}>\n                  <Card.Body className=\"episodes-list\">\n                    {episodes != null ? episodes.map((episode, keys) => <button className={this.state.seriesnum == (keys + 1) ? \"series-button series-active\" : \"series-button\"} onClick={() => { this.SaveSeries((keys + 1), data.id, episode); }}>{keys + 1}</button>) : \"\"}\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            );\n          }) : \"\"*/}\n        </Accordion>\n\n        <div className={\"dop-info\"}>\n          <p>Актеры: <textarea className={\"editor-area\"} placeholder={data.actors != \"\" ? data.actors : \"\"} ref={el => this.actors = el} /></p>\n          <p>Режиссеры: <textarea className={\"editor-area\"} placeholder={data.directors != \"\" ? data.directors : \"\"} ref={el => this.directors = el} /></p>\n          <p>Продюссеры: <textarea className={\"editor-area\"} placeholder={data.producers != \"\" ? data.producers : \"\"} ref={el => this.producers = el} /></p>\n          <p>Сценаристы: <textarea className={\"editor-area\"} placeholder={data.writers != \"\" ? data.writers : \"\"} ref={el => this.writers = el} /></p>\n          <p>Композиторы: <textarea className={\"editor-area\"} placeholder={data.composers != \"\" ? data.composers : \"\"} ref={el => this.composers = el} /></p>\n          <p>Монтажеры: <textarea className={\"editor-area\"} placeholder={data.editors != \"\" ? data.editors : \"\"} ref={el => this.editors = el} /></p>\n          <p>Художники: <textarea className={\"editor-area\"} placeholder={data.designers != \"\" ? data.designers : \"\"} ref={el => this.designers = el} /></p>\n          <p>Операторы: <textarea className={\"editor-area\"} placeholder={data.operators != \"\" ? data.operators : \"\"} ref={el => this.operators = el} /></p>\n        </div>\n      </div >\n    );\n  };\n}\n\nexport default EditPage;","D:\\Desktop\\darkraven_kino\\src\\components\\Actors.js",["269","270","271","272"],"import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Actors extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            referrer: null,\n            Content: [],\n            ValuePage: null,\n            pageSize: 5,\n            page: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.RenderDB(0, this.state.pageSize);\n        window.scrollTo(0, 0);\n    }\n\n    DeleteFilm(name, id) {\n        if (window.confirm(\"Вы действительно желаете удалить запись о актере, \" + name + \"?\")) {\n            var form = new FormData();\n            form.append('id', id);\n            form.append('token', localStorage.getItem(\"token\"));\n            fetch(\"http://site.alwaysdata.net/deleteactor.php\", {\n                method: 'POST',\n                body: form,\n            });\n            this.props.message(\"Успешное удаление: '\" + name + \"'\");\n            this.RenderDB(this.state.page, this.state.pageSize);\n        }\n    }\n\n    RenderDB(Page, pageSize) {\n        var form = new FormData();\n        form.append('page', Page);\n        form.append('pagesize', pageSize);\n\n        fetch(\"http://site.alwaysdata.net/dbactors.php\", {\n            method: 'POST',\n            body: form,\n        }).then(res => res.json())\n            .then(respons => {\n                this.setState({ Content: respons.actors, ValuePage: respons.length, pageSize: pageSize });\n                //console.log(respons);\n            })\n    }\n\n    render() {\n        const data = this.state.Content;\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        const { referrer } = this.state;\n        if (referrer) return <Redirect to={referrer} />;\n        return (\n            <Router>\n                <div className=\"central\">\n                    <Button style={{ width: \"100%\", margin: \"5px 0\" }} onClick={() => this.setState({ referrer: \"/edaactor/new\" })}>Добавить</Button>\n                    {this.state.Content.map((post, key) => {\n                        if (post.Name != null)\n                            return <div key={key} className=\"post-slot\">\n                                <Button className=\"ForeverVideo\" onClick={() => { this.setState({ referrer: \"/edaactor/\" + post.id }) }}>\n                                    <Link to={\"/edaactor/\" + post.id}>\n                                        <EditIcon style={{ color: \"white\" }} />\n                                    </Link>\n                                </Button>\n                                <Button variant=\"danger\" className=\"ForeverVideo\" style={{ marginRight: \"60px\" }} onClick={() => {this.DeleteFilm(post.Name, post.id);}}>\n                                    <DeleteIcon />\n                                </Button>\n                                <a className=\"post-slot-button\">{post.Name}</a>\n                                <img src={post.Image} height=\"200px\" />\n                                {post.DateofBirth != null ?\n                                    <div className=\"info_panel\">\n                                        <p>Дата рождения: {post.DateofBirth}</p>\n                                        <p>Рост: {post.Growth} м</p>\n                                    </div>\n                                    :\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>\n                                }\n                            </div>\n                    })}\n\n                    <Pagination\n                        className=\"pagination\"\n                        count={Math.ceil(this.state.ValuePage / 5)}\n                        page={this.state.page}\n                        siblingCount={3}\n                        boundaryCount={2}\n                        onChange={(event, page) => {\n                            this.RenderDB(page - 1, this.state.pageSize);\n                            window.scrollTo(0, 0);\n                            this.setState({ page: page });\n                        }} />\n                </div>\n            </Router >\n        );\n    }\n}\n\nexport default Actors;","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\EditActors.js",["273","274","275","276","277","278","279","280","281"],"import React from 'react';\nimport \"../../styles/EditPage.css\";\nimport { Card, Accordion, Button } from 'react-bootstrap';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CloseIcon from '@material-ui/icons/Close';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect\n} from \"react-router-dom\";\n\nclass EditActors extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      referrer: null,\n      Info: null,\n      message: null,\n      countrieslist: [],\n      genreslist: [],\n    };\n  }\n\n  Init() {\n    try {\n      let data = this.state.Info;\n\n      this.title.value = data.Name;\n      this.DateofBirth.value = data.DateofBirth;\n      this.Growth.value = data.Growth;\n      this.poster.value = data.Image;\n    } catch {\n      this.setState({ referrer: \"/\" });\n    }\n  }\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({\n      Info: {\n        Name: \"Имя\",\n        DateofBirth: \"Дата рождения\",\n        Growth: \"Рост\",\n        Image: \"https://st.kp.yandex.net/images/no-poster.gif\"\n      }\n    });\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\n      this.GetData(this.props.meta.match.params.id);\n      window.scrollTo(0, 0);\n    }\n  }\n\n  GetData(id) {\n    var form = new FormData();\n    form.append('id', id);\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch(\"http://site.alwaysdata.net/actorview.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        if (respons != null) {\n          this.setState({ Info: respons });\n        } else {\n          this.setState({ referrer: \"/\" });\n        }\n        //console.log(respons);\n        this.Init();\n      })\n  }\n\n  saveInfo(id) {\n    //console.log(this.state);\n    var form = new FormData();\n    form.append('type', this.props.meta.match.params.id == \"new\" ? 1 : 0);\n    form.append('id', id);\n    form.append('Name', this.title.value);\n    form.append('DateofBirth', this.DateofBirth.value);\n    form.append('Growth', this.Growth.value);\n    form.append('Image', this.poster.value);\n\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch(\"http://site.alwaysdata.net/createactor.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        if (respons != null) {\n          this.setState({ message: respons.message });\n          this.props.message(respons.message);\n        } else {\n          this.setState({ referrer: \"/\" });\n        }\n        //console.log(respons.message);\n      })\n  }\n\n  render() {\n    const { referrer } = this.state;\n    if (referrer) return <Redirect to={referrer} />;\n\n    let data = this.state.Info;\n\n    if (data == null) {\n      if (this.props.meta.match.params.id != \"new\")\n        this.GetData(this.props.meta.match.params.id);\n\n      return <div>Загрузка данных....</div>\n    }\n\n    return (\n      <div className={\"central videoview\"}>\n        <p className=\"post-slot-button post-slot-buttonview editor-title\"><input placeholder={data.Name} ref={el => this.title = el} /></p>\n        <Button className=\"ForeverVideo\" style={{ top: \"-32px\" }} onClick={() => this.saveInfo(this.props.meta.match.params.id)}><SaveIcon /></Button>\n        <img style={{ float: \"left\", padding: \"3px\" }} src={data.Image} height=\"200px\" width=\"auto\" ref={el => { this.image = el; }} />\n        <input className={\"editor-poster\"} placeholder={data.Image} onChange={(e) => e.target.value != \"\" ? this.image.src = e.target.value : this.image.src = data.Image} ref={el => this.poster = el} />\n        <div className=\"info-videoview\">\n          <p>Дата рождения: <input className={\"editor-input\"} placeholder={data.DateofBirth} ref={el => this.DateofBirth = el} /></p>\n          <p>Рост: <input className={\"editor-input\"} placeholder={data.Growth} ref={el => this.Growth = el} /> м</p>\n        </div>\n      </div >\n    );\n  };\n}\n\nexport default EditActors;","D:\\Desktop\\darkraven_kino\\src\\components\\VideoPlayer.js",["282","283","284","285","286","287","288","289","290","291","292","293","294"],"import React from 'react';\nimport { Card, Accordion, Button, FormControl, InputGroup, Popover, Overlay } from 'react-bootstrap';\nimport {Favorite, Send, InsertEmoticon, Visibility, VisibilityOff} from '@material-ui/icons';\nimport \"../styles/VideoPlayerStyle.css\";\nimport \"../styles/stylecomment.css\";\n\nclass VideoPlayer extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      emoji: [],\n      show: false,\n      actors: [],\n      data: null,\n      seriesnum: null,\n      valueseries: null,\n      episodes: [],\n      seasons: [],\n      selectedButton: null,\n      comments: [],\n      viewed: false,\n    };\n\n    this.target = React.createRef();\n    this.input = React.createRef();\n  }\n\n  componentDidMount(){\n    this.Watched(this.props.meta.match.params.id, 0);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\n      this.GetData(this.props.meta.match.params.id);\n      this.Watched(this.props.meta.match.params.id, 0);\n    }\n  }\n\n  GetEmojiList() {\n    fetch('http://site.alwaysdata.net/emoji.php', {\n      method: 'POST',\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ emoji: respons });\n      });\n  }\n\n  RenderActors() {\n    let data = this.state.data;\n    if (data.material_data != null)\n      if (data.material_data.actors != null)\n        return (data.material_data.actors.map((list, index) => {\n          let actor = this.state.actors[index];\n          if (actor != null) {\n            return (\n              <div className=\"slot-actor\">\n                <img src={actor.image} />\n                <p>{actor.name}</p>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"slot-actor\">\n                <img src={\"https://kdm.biz.ua/image/catalog/no%20foto.png\"} height=\"100\" />\n                <p>{list}</p>\n              </div>\n            );\n          }\n        }));\n  }\n\n  SaveSeries(series, idvideo, link) {\n\n    this.setState({ valueseries: link, seriesnum: series });\n    var form = new FormData();\n    form.append('series', series);\n    form.append('idvideo', idvideo);\n    form.append('table', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/resave.php', {\n      method: 'POST',\n      body: form,\n    })\n  }\n\n  getActors(actors) {\n    var form = new FormData();\n    form.append('actors', actors);\n    fetch('http://site.alwaysdata.net/getdataactors.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ actors: respons });\n      });\n  }\n\n  Watched(id, replace) {\n    var form = new FormData();\n    form.append('id', id);\n    form.append('replace', replace);\n    form.append('token', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/switchwatch.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ viewed: respons.status });\n      });\n  }\n\n  GetData(list) {\n    fetch('https://kodikapi.com/search?token=9f97924b4aae53e816f330c113b08294&with_material_data=true&with_episodes=true&id=' + list)\n      .then(res => res.json())\n      .then(respons => {\n        this.setState({ data: respons.results[0] });\n\n        this.GetEmojiList();\n        let data = this.state.data;\n        if (data.material_data != null)\n          this.getActors(data.material_data.actors);\n\n        var episodes = [];\n        if (data.seasons != null) {\n          var seasons = Object.keys(data.seasons);\n          for (let i = 0; i < seasons.length; i++) {\n            episodes.push(Object.values(data.seasons[seasons[i]].episodes));\n          }\n        }\n        this.setState({\n          valueseries: episodes.length > 0 ?\n            episodes[0][0] :\n            data.link,\n          episodes: episodes,\n          seasons: seasons,\n          seriesnum: episodes.length > 0 ? 1 : null,\n        });\n\n        console.log(episodes);\n      });\n\n\n    var form = new FormData();\n    form.append('id', this.props.meta.match.params.id);\n    fetch('http://site.alwaysdata.net/getcomments.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ comments: respons });\n      });\n  }\n\n  PastEmoji(emoji) {\n    var selObj = window.getSelection();\n    if (selObj.rangeCount > 0) {\n      var selRange = selObj.getRangeAt(0);\n      selRange.deleteContents();\n      document.execCommand('insertText', false, emoji);\n    }\n  }\n\n  DateRegist(local) {\n    let lastvisit = new Date(Date.parse(local));\n    let totaldate = new Date(Date.now());\n    if (lastvisit.toLocaleDateString() === totaldate.toLocaleDateString()) {\n      if (lastvisit.getHours() == totaldate.getHours()) {\n        if (lastvisit.getMinutes() == totaldate.getMinutes()) {\n          return \"Только что!\";\n        }\n        return (totaldate.getMinutes() - lastvisit.getMinutes()) + \" минут назад\";\n      } else {\n        return (totaldate.getHours() - lastvisit.getHours()) + \" часов назад\";\n      }\n    } else {\n      if (lastvisit.getDay() == totaldate.getDay() - 1) {\n        return \"Вчера\";\n      } else {\n        return lastvisit.toLocaleDateString();\n      }\n    }\n  }\n\n  SendComment() {\n    if (localStorage.getItem(\"token\") != null) {\n      if (this.input.current.value.length > 0 && this.input.current.value !== \"\" && this.input.current.value.trim()) {\n        let newcomment = {\n          Name: localStorage.getItem(\"name\"),\n          Comment: this.input.current.value,\n          Data: new Date(Date.now()).toUTCString(),\n          Avatar: localStorage.getItem(\"icon\"),\n          style: localStorage.getItem(\"style\"),\n        }\n        this.input.current.value = null;\n        this.setState({ comments: [newcomment, ...this.state.comments] });\n        var form = new FormData();\n        form.append('id', this.props.meta.match.params.id);\n        form.append('comments', JSON.stringify([newcomment, ...this.state.comments]));\n        fetch('http://site.alwaysdata.net/comments.php', {\n          method: 'POST',\n          body: form,\n        });\n\n      } else {\n        this.props.message('Комментарий не должен быть пустым!');\n      }\n    } else {\n      this.props.message('Эта функция доступна только авторизованным лицам!');\n    }\n  }\n\n  render() {\n    let data = this.state.data;\n    let episodes = this.state.episodes;\n    let seasons = this.state.seasons;\n\n    if (data == null) {\n      this.GetData(this.props.meta.match.params.id);\n      return <div>Загрузка данных....</div>\n    }\n    return (\n      <div className={\"central videoview\"}>\n        <p className=\"post-slot-button post-slot-buttonview\">{data.title}</p>\n        <p className=\"original-title\">{data.title_orig}</p>\n        <Button className=\"ForeverVideo\" onClick={() => {\n          if (localStorage.getItem(\"name\")) {\n            this.props.SetSave(data.title, data.id, data.material_data != null ? data.material_data.poster_url : 'https://st.kp.yandex.net/images/no-poster.gif');\n          } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n        }}>\n          <Favorite />\n        </Button>\n        <Button className=\"ForeverVideo\" style={{right: \"60px\"}} onClick={() => {\n          if (localStorage.getItem(\"name\")) {\n            this.Watched(data.id, 1);\n            this.state.viewed == true ? this.props.message('Вы пометили видео запись не просмотренной.') : this.props.message('Вы пометили видео запись просмотренной.');\n          } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n        }}>\n          {this.state.viewed == true ? <VisibilityOff /> : <Visibility />}\n        </Button>\n        {data.material_data != null\n          ?\n          <img style={{ float: \"left\", padding: \"3px\" }} src={data.material_data.poster_url} height=\"200px\" />\n          :\n          <img style={{ float: \"left\", padding: \"3px\" }} src={\"https://st.kp.yandex.net/images/no-poster.gif\"} height=\"200px\" />\n        }\n        {data.material_data != null &&\n          <div className=\"info-videoview\">\n            <p>Год: {data.year}</p>\n            <p>Страна: {data.material_data.countries != null && data.material_data.countries.map((list) => <p style={{ display: \"initial\" }}>{list} </p>)}</p>\n            <p>Жанры: {data.material_data.genres != null && data.material_data.genres.map((list) => <p style={{ display: \"initial\" }}>{list} </p>)}</p>\n            <p>Продолжительность: {data.material_data.duration} мин.</p>\n            <br />\n            <p>{data.material_data.description != null && data.material_data.description}</p>\n            <p className={\"rating-info\"} style={{ top: 0 }}>КиноПоиск: {data.material_data.kinopoisk_rating}</p>\n            <p className={\"rating-info\"} style={{ top: \"15px\" }}>Imdb: {data.material_data.imdb_rating}</p>\n            <p className={\"rating-info\"} style={{ top: \"30px\", color: \"green\" }}>{data.quality}</p>\n          </div>\n        }\n        <hr></hr>\n\n        <div>\n          <p style={{ color: \"white\", margin: \"0\" }}>Актеры:</p>\n          <div className=\"actor-view\">\n            {this.RenderActors()}\n          </div>\n        </div>\n\n        <hr></hr>\n        { this.state.seriesnum != null && <h2 className=\"series\">Серия {this.state.seriesnum}</h2>}\n        <iframe src={this.state.valueseries} width=\"100%\" height=\"350\" frameborder=\"0\" allowfullscreen allow=\"autoplay *; fullscreen *\"></iframe>\n\n        <Accordion>\n          {seasons != null ? seasons.map((seasons, key) => {\n            return (\n              <Card key={key} style={{ borderColor: \"#474b4e\" }}>\n                <Card.Header style={{ backgroundColor: \"#262a2d\" }}>\n                  <Accordion.Toggle as={Button} variant=\"link\" style={{ width: \"100%\" }} eventKey={seasons}>\n                    Сезон {seasons}\n                  </Accordion.Toggle>\n                </Card.Header>\n\n                <Accordion.Collapse eventKey={seasons}>\n                  <Card.Body className=\"episodes-list\">\n                    {episodes[key] != null ? episodes[key].map((episode, keys) => <button className={this.state.seriesnum == (keys + 1) ? \"series-button series-active\" : \"series-button\"} onClick={() => { this.SaveSeries((keys + 1), data.id, episode); }}>{keys + 1}</button>) : \"\"}\n                  </Card.Body>\n                </Accordion.Collapse>\n              </Card>\n            );\n          }) : \"\"}\n        </Accordion>\n\n        <div className=\"comments\">\n          <Overlay target={this.target.current} show={this.state.show} placement=\"top-end\">\n            <Popover id=\"popover-basic\">\n              <Popover.Title as=\"h3\">Смайлики</Popover.Title>\n              <Popover.Content>\n                {this.state.emoji.map((emoji, key) =>\n                  <button onClick={() => this.PastEmoji(emoji)} key={key}>{emoji}</button>\n                )}\n              </Popover.Content>\n            </Popover>\n          </Overlay>\n          <InputGroup>\n            <FormControl placeholder=\"Введите комментарий...\" ref={this.input} />\n            <InputGroup.Append>\n              <Button variant=\"secondary\" ref={this.target} onClick={() => this.setState({ show: !this.state.show })}><InsertEmoticon style={{ fontSize: \"20px\" }} /></Button>\n              <Button variant=\"secondary\" onClick={() => this.SendComment()}><Send style={{ fontSize: \"20px\" }} /></Button>\n            </InputGroup.Append>\n          </InputGroup>\n          <div className=\"list-comment\">\n            {this.state.comments.map((comm) =>\n              <div className={(localStorage.getItem(\"name\") == comm.Name ? \"my-comment\" : \"comment\") + \" \" + comm.style}>\n                <img src={comm.Avatar} />\n                <div className=\"content\">\n                  <h1>{comm.Name}</h1>\n                  <p>{comm.Comment}</p>\n                  <small>{this.DateRegist(comm.Data)}</small>\n                  <div className=\"angle\"></div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div >\n    );\n  };\n}\n\nexport default VideoPlayer;","D:\\Desktop\\darkraven_kino\\src\\components\\ViewActors.js",["295","296","297","298","299","300","301"],"import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass ViewActors extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            referrer: null,\n            Content: [],\n            ValuePage: null,\n            pageSize: 5,\n            page: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.RenderDB(0, this.state.pageSize);\n        window.scrollTo(0, 0);\n    }\n\n\n    RenderDB(Page, pageSize) {\n        var form = new FormData();\n        form.append('page', Page);\n        form.append('pagesize', pageSize);\n\n        fetch(\"http://site.alwaysdata.net/dbactors.php\", {\n            method: 'POST',\n            body: form,\n        }).then(res => res.json())\n            .then(respons => {\n                this.setState({ Content: respons.actors, ValuePage: respons.length, pageSize: pageSize });\n                //console.log(respons);\n            })\n    }\n\n    render() {\n        const data = this.state.Content;\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        const { referrer } = this.state;\n        if (referrer) return <Redirect to={referrer} />;\n        return (\n            <Router>\n                <div className=\"central\">\n                    {this.state.Content.map((post, key) => {\n                        if (post.Name != null)\n                            return <div key={key} className=\"post-slot\">\n                                <a className=\"post-slot-button\" href={\"/actor/\" + post.id}>{post.Name}</a>\n                                <img src={post.Image} height=\"200px\" />\n                                {\n                                    post.DateofBirth != null ?\n                                        <div className=\"info_panel\">\n                                            <p>Дата рождения: {post.DateofBirth}</p>\n                                            <p>Рост: {post.Growth} м</p>\n                                        </div>\n                                        :\n                                        <p style={{ color: \"white\" }}>Нет информации!</p>\n                                }\n                            </div>\n                    })}\n\n                    <Pagination\n                        className=\"pagination\"\n                        count={Math.ceil(this.state.ValuePage / 5)}\n                        page={this.state.page}\n                        siblingCount={3}\n                        boundaryCount={2}\n                        onChange={(event, page) => {\n                            this.RenderDB(page - 1, this.state.pageSize);\n                            window.scrollTo(0, 0);\n                            this.setState({ page: page });\n                        }} />\n                </div>\n            </Router >\n        );\n    }\n}\n\nexport default ViewActors;","D:\\Desktop\\darkraven_kino\\src\\components\\subcomponents\\ActorSearth.js",["302","303","304","305","306"],"import React from 'react';\nimport \"../../styles/EditPage.css\";\nimport { Button } from 'react-bootstrap';\nimport {\n  BrowserRouter as Router,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass ActorSearth extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      referrer: null,\n      pageSize: 5,\n      page: 1,\n      Posts: null,\n      PostValue: null,\n      Info: null,\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\n      this.GetData(this.props.meta.match.params.id, 0, this.state.pageSize);\n      window.scrollTo(0, 0);\n    }\n  }\n\n  GetData(id, Page, pageSize) {\n    var form = new FormData();\n    form.append('id', id);\n    form.append('page', Page);\n    form.append('pagesize', pageSize);\n    fetch(\"http://site.alwaysdata.net/searthactor.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ Posts: respons.video, PostValue: respons.length, Info: respons.info });\n        console.log(respons);\n      })\n  }\n\n\n  render() {\n    const { referrer } = this.state;\n    if (referrer) return <Redirect to={referrer} />;\n\n    let data = this.state.Info;\n    let post = this.state.Posts;\n\n    if (data == null || post == null) {\n      this.GetData(this.props.meta.match.params.id, 0, this.state.pageSize);\n      return <div>Загрузка данных....</div>\n    }\n\n    return (\n      <div className={\"central videoview\"}>\n        <p className=\"post-slot-button post-slot-buttonview\">{data.Name}</p>\n        <img style={{ float: \"left\", padding: \"3px\" }} src={data.Image} height=\"200px\" width=\"auto\" />\n        <div className=\"info-videoview\" style={{ minHeight: \"200px\" }}>\n          <p>Дата рождения: {data.Date}</p>\n          <p>Рост: {data.Growth} м</p>\n        </div>\n\n        <h4 style={{ color: \"white\" }}>Найдено записей: {this.state.PostValue}</h4>\n        <div style={{ padding: \"15px\" }}>\n          {post.map((post, key) => {\n            if (post.title != null) {\n              return (\n                <div key={key} className=\"post-slot\">\n\n                  <Button className=\"ForeverVideo\" onClick={() => {\n                    if (localStorage.getItem(\"name\")) {\n                      this.props.SetSave(post.title, post.id_video, post.poster != null ? post.poster : 'https://st.kp.yandex.net/images/no-poster.gif');\n                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                  }}>\n                    <FavoriteIcon />\n                  </Button>\n\n                  <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\n                  <img src={post.poster} height=\"200px\" />\n                  {post.year != null ?\n                    <div className=\"info_panel\">\n                      <p>Год: {post.year}</p>\n                      <p>Страна: {post.countries}</p>\n                      <p>Жанры: {post.genres}</p>\n                      <p>Продолжительность: {post.duration} мин.</p>\n                      <br />\n                      <p>{post.discription != null && post.discription}</p>\n                      <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                      <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                      <p className=\"quality\">{post.quality}</p>\n                    </div>\n                    :\n                    <p style={{ color: \"white\" }}>Нет информации!</p>}\n                </div>\n              )\n            }\n          })}\n\n          <Pagination\n            className=\"pagination\"\n            count={Math.ceil(this.state.PostValue / 5)}\n            page={this.state.page}\n            siblingCount={3}\n            boundaryCount={2}\n            onChange={(event, page) => {\n              this.GetData(this.props.meta.match.params.id, page - 1, this.state.pageSize);\n              window.scrollTo(0, 0);\n              this.setState({ page: page });\n            }} />\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default ActorSearth;","D:\\Desktop\\darkraven_kino\\src\\components\\Watched.js",["307","308","309"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { VisibilityOff } from '@material-ui/icons';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Watched extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            referrer: null,\n            Content: [],\n            ValuePage: null,\n            pageSize: 5,\n            page: 1,\n        };\n    }\n\n    componentDidMount() {\n        this.RenderDB(0, this.state.pageSize);\n        window.scrollTo(0, 0);\n    }\n\n    removeWatch(id) {\n        var form = new FormData();\n        form.append('id', id);\n        form.append('token', localStorage.getItem(\"token\"));\n        fetch(\"http://site.alwaysdata.net/removewatch.php\", {\n            method: 'POST',\n            body: form,\n        });\n        this.RenderDB(this.state.page - 1, this.state.pageSize);\n    }\n\n    RenderDB(Page, pageSize) {\n        var form = new FormData();\n        form.append('page', Page);\n        form.append('pagesize', pageSize);\n        form.append('token', localStorage.getItem(\"token\"));\n        fetch(\"http://site.alwaysdata.net/watched.php\", {\n            method: 'POST',\n            body: form,\n        }).then(res => res.json())\n            .then(respons => {\n                this.setState({ Content: respons.video, ValuePage: respons.length, pageSize: pageSize });\n            })\n    }\n\n    render() {\n        const data = this.state.Content;\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        const { referrer } = this.state;\n        if (referrer) return <Redirect to={referrer} />;\n        return (\n            <Router>\n                <div className=\"central\">\n                    {data.map((post, key) => {\n                        if (post.title != null)\n                            return <div key={key} className=\"post-slot\">\n                                <Button className=\"ForeverVideo\" onClick={() => {\n                                    if (localStorage.getItem(\"name\")) {\n                                        this.props.message('Вы пометили видео запись не просмотренной.');\n                                        this.removeWatch(post.id_video);\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                                }}>\n                                    <VisibilityOff />\n                                </Button>\n                                <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\n                                <img src={post.poster} height=\"200px\" />\n                                {post.year != null ?\n                                    <div className=\"info_panel\">\n                                        <p>Год: {post.year}</p>\n                                        <p>Страна: {post.countries}</p>\n                                        <p>Жанры: {post.genres}</p>\n                                        <p>Продолжительность: {post.duration} мин.</p>\n                                        <br />\n                                        <p>{post.discription != null && post.discription}</p>\n                                        <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                                        <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                                        <p className=\"quality\">{post.quality}</p>\n                                    </div>\n                                    :\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>\n                                }\n                            </div>\n                    })}\n\n                    <Pagination\n                        className=\"pagination\"\n                        count={Math.ceil(this.state.ValuePage / 5)}\n                        page={this.state.page}\n                        siblingCount={3}\n                        boundaryCount={2}\n                        onChange={(event, page) => {\n                            this.RenderDB(page - 1, this.state.pageSize);\n                            window.scrollTo(0, 0);\n                            this.setState({ page: page });\n                        }} />\n                </div>\n            </Router >\n        );\n    }\n}\n\nexport default Watched;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\index.js",[],["310","311"],"C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\App.js",["312","313","314"],"import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './styles/App.css';\r\nimport Posts from './components/Posts'\r\nimport Left_Bar from './components/Left_Bar';\r\nimport Films from './components/Films';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport VideoPlayer from './components/VideoPlayer';\r\nimport Top from './components/Top';\r\nimport Searth from './components/Searth'\r\nimport Head from './components/Head';\r\nimport { Toast } from 'react-bootstrap';\r\nimport BD from './components/BD';\r\nimport Actors from \"./components/Actors\";\r\nimport EditPage from './components/subcomponents/EditPage';\r\nimport EditActors from './components/subcomponents/EditActors';\r\nimport ViewActors from './components/ViewActors';\r\nimport ActorSearth from './components/subcomponents/ActorSearth';\r\nimport Watched from './components/Watched';\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      show: false,\r\n      message: '',\r\n      Posts: [],\r\n      VideoContent: [],\r\n      Recomend: [],\r\n      PostValue: 0,\r\n      VideoValuePage: 0,\r\n      pageSize: 5,\r\n      search: \"\",\r\n      Type: 0,\r\n    };\r\n\r\n    this.SetSave = this.SetSave.bind(this);\r\n    this.RenderPost = this.RenderPost.bind(this);\r\n    this.Search = this.Search.bind(this);\r\n    this.onMessage = this.onMessage.bind(this);\r\n  }\r\n\r\n  onMessage(mess) {\r\n    this.setState({ show: true, message: mess });\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.GetRecomendData();\r\n  }\r\n\r\n  GetRecomendData() {\r\n    fetch('http://site.alwaysdata.net/recomend.php', {\r\n      method: 'POST',\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ Recomend: respons.posts });\r\n      })\r\n  }\r\n\r\n  SetSave(title, idvideo, ico) {\r\n    var form = new FormData();\r\n    form.append('title', title);\r\n    form.append('idvideo', idvideo);\r\n    form.append('ico', ico);\r\n    form.append('table', localStorage.getItem(\"token\"));\r\n    fetch('http://site.alwaysdata.net/save.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ show: true, message: respons.message });\r\n      })\r\n  }\r\n\r\n  RenderPost(type, Page, pageSize) {\r\n    var form = new FormData();\r\n    form.append('type', type);\r\n    form.append('page', Page);\r\n    this.setState({ pageSize: pageSize });\r\n    form.append('pagesize', pageSize);\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    console.log(form);\r\n    fetch(\"http://site.alwaysdata.net/datavideo.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ VideoContent: respons, VideoValuePage: respons.length });\r\n        console.log(\"Video: \", this.state.VideoContent);\r\n      })\r\n\r\n    this.setState({ Type: type });\r\n  }\r\n\r\n  Search(Page, pageSize, result) {\r\n    this.setState({ pageSize: pageSize, search: result});\r\n    var form = new FormData();\r\n    form.append('page', Page);\r\n    form.append('pagesize', pageSize);\r\n    form.append('result', result);\r\n\r\n    fetch(\"http://site.alwaysdata.net/searth.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ VideoContent: respons, VideoValuePage: respons.length });\r\n        console.log(\"Searth: \", this.state.VideoContent);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let searth = this.state.search != '' ? <Redirect to={\"/searth\"} /> : null;\r\n\r\n    return (\r\n      <Router>\r\n        <div className={\"main-conteiner\"}>\r\n          <Head onMessage={this.onMessage} Search={this.Search} Type={this.state.Type} pageSize={this.state.pageSize} onMessage={this.onMessage} />\r\n          <div className=\"option\"></div>\r\n          <Left_Bar data={this.state.Recomend} />\r\n          {searth}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() =><Posts />}/>\r\n            <Route exact path=\"/top\" render={() => <Top />}/>\r\n            <Route exact path=\"/films\" render={() =><Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"3\" RenP={this.RenderPost} message={this.onMessage} />}/>\r\n            <Route exact path=\"/serials\" render={() =><Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"4\" RenP={this.RenderPost} message={this.onMessage} />}/>\r\n            <Route exact path=\"/doramy\" render={() =><Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"5\" RenP={this.RenderPost} message={this.onMessage} />}/>\r\n            <Route exact path=\"/anime\" render={() => <Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"6\" RenP={this.RenderPost} message={this.onMessage} />}/>\r\n            <Route path=\"/video_player/:id\" render={(e) => <VideoPlayer meta={e} message={this.onMessage} SetSave={this.SetSave} />} />\r\n            <Route path=\"/searth\" render={() => <Searth message={this.onMessage} SearchFunc={this.Search} search={this.state.search} Value={this.state.VideoValuePage} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"7\" />}/>\r\n            <Route exact path=\"/edit-database\" render={() => <BD message={this.onMessage} />}/>\r\n            <Route exact path=\"/edit-actors\" render={() => <Actors message={this.onMessage} />} />\r\n            <Route path=\"/edaeditor/:id\" render={(e) => <EditPage meta={e} message={this.onMessage}/>} />\r\n            <Route path=\"/edaactor/:id\" render={(e) => <EditActors meta={e} message={this.onMessage}/>} />\r\n            <Route path=\"/actors\" render={() => <ViewActors/>} />\r\n            <Route path=\"/actor/:id\" render={(e) => <ActorSearth meta={e}/>} />\r\n            <Route path=\"/watched\" render={() => <Watched message={this.onMessage}/>} />\r\n            <Route render={() => <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>Такой страницы нема)</h1>} />\r\n          </Switch>\r\n\r\n          <div className={\"message\"}>\r\n            <Toast onClose={() => this.setState({ show: false })} show={this.state.show} delay={3000} autohide>\r\n              <Toast.Header>\r\n                <strong className=\"mr-auto\">Уведомление!</strong>\r\n              </Toast.Header>\r\n              <Toast.Body>{this.state.message}</Toast.Body>\r\n            </Toast>\r\n          </div>\r\n        </div>\r\n\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\reportWebVitals.js",[],"C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Left_Bar.js",["315","316"],"import React from 'react';\r\n\r\nclass Left_Bar extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"left-bar\">\r\n                <div className=\"recommend\">\r\n                    <h3>Рекомендуемые</h3>\r\n                    <div>\r\n                        {this.props.data.map((recomend, key) =>\r\n                            <div className=\"slot-recommend\" key={key}>\r\n                                <a href={\"/video_player/\" + recomend.idvideo}>\r\n                                    <img src={recomend.photo || \"https://st.kp.yandex.net/images/no-poster.gif\"} />\r\n                                    <p>{recomend.title}</p>\r\n                                </a>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Left_Bar;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Films.js",["317","318"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Favorite, Visibility } from '@material-ui/icons';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass Films extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pageSize: 5,\r\n            page: 1,\r\n        };\r\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.RenP(this.props.type, 0, this.props.pageSize)\r\n    }\r\n\r\n    onShowSizeChange(current, pagesize) {\r\n        this.setState({ pageSize: pagesize });\r\n    }\r\n\r\n    addWatched(id) {\r\n        var form = new FormData();\r\n        form.append('id', id);\r\n        form.append('token', localStorage.getItem(\"token\"));\r\n        fetch(\"http://site.alwaysdata.net/addwatch.php\", {\r\n            method: 'POST',\r\n            body: form,\r\n        });\r\n\r\n        this.props.Func(this.props.type, this.state.page - 1, this.state.pageSize);\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.ContentVideo;\r\n        if (!data) { return <div>Загрузка данных....</div> }\r\n\r\n        return (\r\n            <div className=\"central\">\r\n                {data.map((post, key) => {\r\n                    if (post.title != null) {\r\n                        return (\r\n                            <div key={key} className=\"post-slot\">\r\n                                <Button className=\"ForeverVideo\" onClick={() => {\r\n                                    if (localStorage.getItem(\"name\")) {\r\n                                        this.props.SetSave(post.title, post.id_video, post.poster != null ? post.poster : 'https://st.kp.yandex.net/images/no-poster.gif');\r\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n                                }}>\r\n                                    <Favorite />\r\n                                </Button>\r\n                                <Button className=\"ForeverVideo\" style={{ right: \"60px\" }} onClick={() => {\r\n                                    if (localStorage.getItem(\"name\")) {\r\n                                        this.setState({ viewed: !this.state.viewed });\r\n                                        this.addWatched(post.id_video);\r\n                                        this.props.message('Вы пометили видео запись просмотренной.');\r\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n                                }}>\r\n                                    <Visibility />\r\n                                </Button>\r\n                                <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\r\n                                <img src={post.poster} height=\"200px\" />\r\n                                {post.year != null ?\r\n                                    <div className=\"info_panel\">\r\n                                        <p>Год: {post.year}</p>\r\n                                        <p>Страна: {post.countries}</p>\r\n                                        <p>Жанры: {post.genres}</p>\r\n                                        <p>Продолжительность: {post.duration} мин.</p>\r\n                                        <br />\r\n                                        <p>{post.discription != null && post.discription}</p>\r\n                                        <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\r\n                                        <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\r\n                                        <p className=\"quality\">{post.quality}</p>\r\n                                    </div>\r\n                                    :\r\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>}\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n\r\n                <Pagination\r\n                    className=\"pagination\"\r\n                    count={Math.ceil(this.props.Value / 5)}\r\n                    page={this.state.page}\r\n                    siblingCount={3}\r\n                    boundaryCount={2}\r\n                    onChange={(event, page) => {\r\n                        this.props.Func(this.props.type, page - 1, this.state.pageSize);\r\n                        window.scrollTo(0, 0);\r\n                        this.setState({ page: page });\r\n                    }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Films;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Posts.js",["319"],"import React from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pageSize: 5,\r\n            page: 1,\r\n            Posts: null,\r\n            PostValue: 0,\r\n        };\r\n        this.GetData = this.GetData.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetData(0);\r\n    }\r\n\r\n    GetData(list) {\r\n        var form = new FormData();\r\n        form.append('list', list);\r\n        fetch('http://site.alwaysdata.net/posts.php', {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ Posts: respons.posts, PostValue: respons.postsvalue });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.Posts;\r\n        if (!data) { return <div>Загрузка данных....</div> }\r\n\r\n        return (\r\n            <div className=\"central\">\r\n                {data.map((post, key) =>\r\n                    <div key={key} className=\"post-slot\">\r\n                        <h1>{post.title}</h1>\r\n                        {post.photo1 &&\r\n                            <img src={post.photo1} width=\"40%\" />\r\n                        }\r\n                        <div dangerouslySetInnerHTML={{__html: post.discription}}/>\r\n                    </div>\r\n                )}\r\n                <Pagination\r\n                    className=\"pagination\"\r\n                    count={Math.ceil(this.props.Value / 5)}\r\n                    page={this.state.page}\r\n                    siblingCount={3}\r\n                    boundaryCount={2}\r\n                    onChange={(event, page) => {\r\n                        this.props.Func(this.props.type, page - 1, this.state.pageSize);\r\n                        window.scrollTo(0, 0);\r\n                        this.setState({ page: page });\r\n                    }} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\BD.js",["320","321","322","323"],"import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass BD extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            referrer: null,\r\n            Content: [],\r\n            ValuePage: null,\r\n            pageSize: 5,\r\n            page: 1,\r\n            type: 0,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.RenderDB(0, 0, this.state.pageSize);\r\n    }\r\n\r\n    DeleteFilm(name, id) {\r\n        if (window.confirm(\"Вы действительно желаете удалить видеозапись, \" + name + \"?\")) {\r\n            var form = new FormData();\r\n            form.append('id', id);\r\n            form.append('token', localStorage.getItem(\"token\"));\r\n            fetch(\"http://site.alwaysdata.net/deleteeditor.php\", {\r\n                method: 'POST',\r\n                body: form,\r\n            });\r\n            this.props.message(\"Успешное удаление: '\" + name + \"'\");\r\n            this.RenderDB(this.state.type, this.state.page, this.state.pageSize);\r\n        }\r\n    }\r\n\r\n    RenderDB(type, Page, pageSize) {\r\n        var form = new FormData();\r\n        form.append('type', type);\r\n        form.append('page', Page);\r\n        form.append('pagesize', pageSize);\r\n\r\n        fetch(\"http://site.alwaysdata.net/dbdatavideo.php\", {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ Content: respons.video, ValuePage: respons.length, pageSize: pageSize });\r\n                //console.log(respons);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.Content;\r\n        if (!data) { return <div>Загрузка данных....</div> }\r\n\r\n        const { referrer } = this.state;\r\n        if (referrer) return <Redirect to={referrer} />;\r\n        return (\r\n            <Router>\r\n                <div className=\"central\">\r\n                    {this.state.Content.map((post, key) => {\r\n                        if (post.title != null) {\r\n                            return (\r\n                                <div key={key} className=\"post-slot\">\r\n                                    <Button className=\"ForeverVideo\" onClick={() => { this.setState({ referrer: \"/edaeditor/\" + post.id_video }) }}>\r\n                                        <Link to={\"/edaeditor/\" + post.id_video}>\r\n                                            <EditIcon style={{ color: \"white\" }} />\r\n                                        </Link>\r\n                                    </Button>\r\n                                    <Button variant=\"danger\" className=\"ForeverVideo\" style={{ marginRight: \"60px\" }} onClick={() => {this.DeleteFilm(post.title, post.id_video);}}>\r\n                                        <DeleteIcon />\r\n                                    </Button>\r\n                                    <a className=\"post-slot-button\">{post.title}</a>\r\n                                    <img src={post.poster} height=\"200px\" />\r\n                                    {post.year != null ?\r\n                                        <div className=\"info_panel\">\r\n                                            <p>Год: {post.year}</p>\r\n                                            <p>Страна: {post.countries}</p>\r\n                                            <p>Жанры: {post.genres}</p>\r\n                                            <p>Продолжительность: {post.duration} мин.</p>\r\n                                            <br />\r\n                                            <p>{post.discription != null && post.discription}</p>\r\n                                            <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\r\n                                            <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\r\n                                            <p className=\"quality\">{post.quality}</p>\r\n                                        </div>\r\n                                        :\r\n                                        <p style={{ color: \"white\" }}>Нет информации!</p>\r\n                                    }\r\n                                </div>\r\n                            )\r\n                        }\r\n                    })}\r\n\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        count={Math.ceil(this.state.ValuePage / 5)}\r\n                        page={this.state.page}\r\n                        siblingCount={3}\r\n                        boundaryCount={2}\r\n                        onChange={(event, page) => {\r\n                            this.RenderDB(this.state.type, page - 1, this.state.pageSize);\r\n                            window.scrollTo(0, 0);\r\n                            this.setState({ page: page });\r\n                        }} />\r\n                </div>\r\n            </Router >\r\n        );\r\n    }\r\n}\r\n\r\nexport default BD;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\VideoPlayer.js",["324","325","326","327","328","329","330","331","332","333","334","335","336"],"import React from 'react';\r\nimport { Card, Accordion, Button, FormControl, InputGroup, Popover, Overlay } from 'react-bootstrap';\r\nimport {Favorite, Send, InsertEmoticon, Visibility, VisibilityOff} from '@material-ui/icons';\r\nimport \"../styles/VideoPlayerStyle.css\";\r\nimport \"../styles/stylecomment.css\";\r\n\r\nclass VideoPlayer extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      emoji: [],\r\n      show: false,\r\n      actors: [],\r\n      data: null,\r\n      seriesnum: null,\r\n      valueseries: null,\r\n      episodes: [],\r\n      seasons: [],\r\n      selectedButton: null,\r\n      comments: [],\r\n      viewed: false,\r\n    };\r\n\r\n    this.target = React.createRef();\r\n    this.input = React.createRef();\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.Watched(this.props.meta.match.params.id, 0);\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\r\n      this.GetData(this.props.meta.match.params.id);\r\n      this.Watched(this.props.meta.match.params.id, 0);\r\n    }\r\n  }\r\n  GetEmojiList() {\r\n    fetch('http://site.alwaysdata.net/emoji.php', {\r\n      method: 'POST',\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ emoji: respons });\r\n      });\r\n  }\r\n  RenderActors() {\r\n    let data = this.state.data;\r\n    if (data.material_data != null)\r\n      if (data.material_data.actors != null)\r\n        return (data.material_data.actors.map((list, index) => {\r\n          let actor = this.state.actors[index];\r\n          if (actor != null) {\r\n            return (\r\n              <div className=\"slot-actor\">\r\n                <img src={actor.image} />\r\n                <p>{actor.name}</p>\r\n              </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"slot-actor\">\r\n                <img src={\"https://kdm.biz.ua/image/catalog/no%20foto.png\"} height=\"100\" />\r\n                <p>{list}</p>\r\n              </div>\r\n            );\r\n          }\r\n        }));\r\n  }\r\n  SaveSeries(series, idvideo, link) {\r\n\r\n    this.setState({ valueseries: link, seriesnum: series });\r\n    var form = new FormData();\r\n    form.append('series', series);\r\n    form.append('idvideo', idvideo);\r\n    form.append('table', localStorage.getItem(\"token\"));\r\n    fetch('http://site.alwaysdata.net/resave.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    })\r\n  }\r\n  getActors(actors) {\r\n    var form = new FormData();\r\n    form.append('actors', actors);\r\n    fetch('http://site.alwaysdata.net/getdataactors.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ actors: respons });\r\n      });\r\n  }\r\n  Watched(id, replace) {\r\n    var form = new FormData();\r\n    form.append('id', id);\r\n    form.append('replace', replace);\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    fetch('http://site.alwaysdata.net/switchwatch.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ viewed: respons.status });\r\n      });\r\n  }\r\n  GetData(list) {\r\n    fetch('https://kodikapi.com/search?token=9f97924b4aae53e816f330c113b08294&with_material_data=true&with_episodes=true&id=' + list)\r\n      .then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ data: respons.results[0] });\r\n\r\n        this.GetEmojiList();\r\n        let data = this.state.data;\r\n        if (data.material_data != null)\r\n          this.getActors(data.material_data.actors);\r\n\r\n        var episodes = [];\r\n        if (data.seasons != null) {\r\n          var seasons = Object.keys(data.seasons);\r\n          for (let i = 0; i < seasons.length; i++) {\r\n            episodes.push(Object.values(data.seasons[seasons[i]].episodes));\r\n          }\r\n        }\r\n        this.setState({\r\n          valueseries: episodes.length > 0 ?\r\n            episodes[0][0] :\r\n            data.link,\r\n          episodes: episodes,\r\n          seasons: seasons,\r\n          seriesnum: episodes.length > 0 ? 1 : null,\r\n        });\r\n\r\n        console.log(episodes);\r\n      });\r\n\r\n\r\n    var form = new FormData();\r\n    form.append('id', this.props.meta.match.params.id);\r\n    fetch('http://site.alwaysdata.net/getcomments.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ comments: respons });\r\n      });\r\n  }\r\n  PastEmoji(emoji) {\r\n    var selObj = window.getSelection();\r\n    if (selObj.rangeCount > 0) {\r\n      var selRange = selObj.getRangeAt(0);\r\n      selRange.deleteContents();\r\n      document.execCommand('insertText', false, emoji);\r\n    }\r\n  }\r\n  DateRegist(local) {\r\n    let lastvisit = new Date(Date.parse(local));\r\n    let totaldate = new Date(Date.now());\r\n    if (lastvisit.toLocaleDateString() === totaldate.toLocaleDateString()) {\r\n      if (lastvisit.getHours() == totaldate.getHours()) {\r\n        if (lastvisit.getMinutes() == totaldate.getMinutes()) {\r\n          return \"Только что!\";\r\n        }\r\n        return (totaldate.getMinutes() - lastvisit.getMinutes()) + \" минут назад\";\r\n      } else {\r\n        return (totaldate.getHours() - lastvisit.getHours()) + \" часов назад\";\r\n      }\r\n    } else {\r\n      if (lastvisit.getDay() == totaldate.getDay() - 1) {\r\n        return \"Вчера\";\r\n      } else {\r\n        return lastvisit.toLocaleDateString();\r\n      }\r\n    }\r\n  }\r\n  SendComment() {\r\n    if (localStorage.getItem(\"token\") != null) {\r\n      if (this.input.current.value.length > 0 && this.input.current.value !== \"\" && this.input.current.value.trim()) {\r\n        let newcomment = {\r\n          Name: localStorage.getItem(\"name\"),\r\n          Comment: this.input.current.value,\r\n          Data: new Date(Date.now()).toUTCString(),\r\n          Avatar: localStorage.getItem(\"icon\"),\r\n          style: localStorage.getItem(\"style\"),\r\n        }\r\n        this.input.current.value = null;\r\n        this.setState({ comments: [newcomment, ...this.state.comments] });\r\n        var form = new FormData();\r\n        form.append('id', this.props.meta.match.params.id);\r\n        form.append('comments', JSON.stringify([newcomment, ...this.state.comments]));\r\n        fetch('http://site.alwaysdata.net/comments.php', {\r\n          method: 'POST',\r\n          body: form,\r\n        });\r\n\r\n      } else {\r\n        this.props.message('Комментарий не должен быть пустым!');\r\n      }\r\n    } else {\r\n      this.props.message('Эта функция доступна только авторизованным лицам!');\r\n    }\r\n  }\r\n  render() {\r\n    let data = this.state.data;\r\n    let episodes = this.state.episodes;\r\n    let seasons = this.state.seasons;\r\n\r\n    if (data == null) {\r\n      this.GetData(this.props.meta.match.params.id);\r\n      return <div>Загрузка данных....</div>\r\n    }\r\n\r\n    return (\r\n      <div className={\"central videoview\"}>\r\n        <p className=\"post-slot-button post-slot-buttonview\">{data.title}</p>\r\n        <p className=\"original-title\">{data.title_orig}</p>\r\n        <Button className=\"ForeverVideo\" onClick={() => {\r\n          if (localStorage.getItem(\"name\")) {\r\n            this.props.SetSave(data.title, data.id, data.material_data != null ? data.material_data.poster_url : 'https://st.kp.yandex.net/images/no-poster.gif');\r\n          } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n        }}>\r\n          <Favorite />\r\n        </Button>\r\n        <Button className=\"ForeverVideo\" style={{right: \"60px\"}} onClick={() => {\r\n          if (localStorage.getItem(\"name\")) {\r\n            this.Watched(data.id, 1);\r\n            this.state.viewed == true ? this.props.message('Вы пометили видео запись не просмотренной.') : this.props.message('Вы пометили видео запись просмотренной.');\r\n          } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n        }}>\r\n          {this.state.viewed == true ? <VisibilityOff /> : <Visibility />}\r\n        </Button>\r\n        {data.material_data != null\r\n          ?\r\n          <img style={{ float: \"left\", padding: \"3px\" }} src={data.material_data.poster_url} height=\"200px\" />\r\n          :\r\n          <img style={{ float: \"left\", padding: \"3px\" }} src={\"https://st.kp.yandex.net/images/no-poster.gif\"} height=\"200px\" />\r\n        }\r\n        {data.material_data != null &&\r\n          <div className=\"info-videoview\">\r\n            <p>Год: {data.year}</p>\r\n            <p>Страна: {data.material_data.countries != null && data.material_data.countries.map((list) => <p style={{ display: \"initial\" }}>{list} </p>)}</p>\r\n            <p>Жанры: {data.material_data.genres != null && data.material_data.genres.map((list) => <p style={{ display: \"initial\" }}>{list} </p>)}</p>\r\n            <p>Продолжительность: {data.material_data.duration} мин.</p>\r\n            <br />\r\n            <p>{data.material_data.description != null && data.material_data.description}</p>\r\n            <p className={\"rating-info\"} style={{ top: 0 }}>КиноПоиск: {data.material_data.kinopoisk_rating}</p>\r\n            <p className={\"rating-info\"} style={{ top: \"15px\" }}>Imdb: {data.material_data.imdb_rating}</p>\r\n            <p className={\"rating-info\"} style={{ top: \"30px\", color: \"green\" }}>{data.quality}</p>\r\n          </div>\r\n        }\r\n        <hr></hr>\r\n\r\n        <div>\r\n          <p style={{ color: \"white\", margin: \"0\" }}>Актеры:</p>\r\n          <div className=\"actor-view\">\r\n            {this.RenderActors()}\r\n          </div>\r\n        </div>\r\n\r\n        <hr></hr>\r\n        { this.state.seriesnum != null && <h2 className=\"series\">Серия {this.state.seriesnum}</h2>}\r\n        <iframe src={this.state.valueseries} width=\"100%\" height=\"350\" frameborder=\"0\" allowfullscreen allow=\"autoplay *; fullscreen *\"></iframe>\r\n\r\n        <Accordion>\r\n          {seasons != null ? seasons.map((seasons, key) => {\r\n            return (\r\n              <Card key={key} style={{ borderColor: \"#474b4e\" }}>\r\n                <Card.Header style={{ backgroundColor: \"#262a2d\" }}>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" style={{ width: \"100%\" }} eventKey={seasons}>\r\n                    Сезон {seasons}\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n\r\n                <Accordion.Collapse eventKey={seasons}>\r\n                  <Card.Body className=\"episodes-list\">\r\n                    {episodes[key] != null ? episodes[key].map((episode, keys) => <button className={this.state.seriesnum == (keys + 1) ? \"series-button series-active\" : \"series-button\"} onClick={() => { this.SaveSeries((keys + 1), data.id, episode); }}>{keys + 1}</button>) : \"\"}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n          }) : \"\"}\r\n        </Accordion>\r\n\r\n        <div className=\"comments\">\r\n          <Overlay target={this.target.current} show={this.state.show} placement=\"top-end\">\r\n            <Popover id=\"popover-basic\">\r\n              <Popover.Title as=\"h3\">Смайлики</Popover.Title>\r\n              <Popover.Content>\r\n                {this.state.emoji.map((emoji, key) =>\r\n                  <button onClick={() => this.PastEmoji(emoji)} key={key}>{emoji}</button>\r\n                )}\r\n              </Popover.Content>\r\n            </Popover>\r\n          </Overlay>\r\n          <InputGroup>\r\n            <FormControl placeholder=\"Введите комментарий...\" ref={this.input} />\r\n            <InputGroup.Append>\r\n              <Button variant=\"secondary\" ref={this.target} onClick={() => this.setState({ show: !this.state.show })}><InsertEmoticon style={{ fontSize: \"20px\" }} /></Button>\r\n              <Button variant=\"secondary\" onClick={() => this.SendComment()}><Send style={{ fontSize: \"20px\" }} /></Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n          <div className=\"list-comment\">\r\n            {this.state.comments.map((comm) =>\r\n              <div className={(localStorage.getItem(\"name\") == comm.Name ? \"my-comment\" : \"comment\") + \" \" + comm.style}>\r\n                <img src={comm.Avatar} />\r\n                <div className=\"content\">\r\n                  <h1>{comm.Name}</h1>\r\n                  <p>{comm.Comment}</p>\r\n                  <small>{this.DateRegist(comm.Data)}</small>\r\n                  <div className=\"angle\"></div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div >\r\n    );\r\n  };\r\n}\r\n\r\nexport default VideoPlayer;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Searth.js",["337","338","339"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass Films extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            pageSize: 5,\r\n            page: 1,\r\n        };\r\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\r\n    }\r\n\r\n    onShowSizeChange(current, pagesize) {\r\n        this.setState({ pageSize: pagesize });\r\n    }\r\n\r\n    render() {\r\n        const data = this.props.ContentVideo;\r\n        if (!data) {\r\n            return <div className=\"central\">\r\n                <h2 style={{ color: \"white\" }}>Поиск по сайту: нет результатов!</h2>\r\n            </div>\r\n        }\r\n        return (\r\n            <div className=\"central\">\r\n                <h2 style={{ color: \"white\" }}>Поиск по сайту:</h2>\r\n                {data.map((post, key) => {\r\n                    if (post.title != null) {\r\n                        return (\r\n                            <div key={key} className=\"post-slot\">\r\n                                <Button className=\"ForeverVideo\" onClick={() => {\r\n                                    if (localStorage.getItem(\"name\")) {\r\n                                        this.props.SetSave(post.title, post.id_video, post.poster != null ? post.poster : 'https://st.kp.yandex.net/images/no-poster.gif');\r\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n                                }}>\r\n                                    <FavoriteIcon />\r\n                                </Button>\r\n\r\n                                <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\r\n                                {post.poster != null ? <img src={post.poster} height=\"200px\" /> : <img src={\"https://st.kp.yandex.net/images/no-poster.gif\"} height=\"200px\" />}\r\n                                {post.year != null ?\r\n                                    <div className=\"info_panel\">\r\n                                        <p>Год: {post.year}</p>\r\n                                        <p>Страна: {post.countries}</p>\r\n                                        <p>Жанры: {post.genres}</p>\r\n                                        <p>Продолжительность: {post.duration} мин.</p>\r\n                                        <br />\r\n                                        <p>{post.discription != null && post.discription}</p>\r\n                                        <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\r\n                                        <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\r\n                                        <p className=\"quality\">{post.quality}</p>\r\n                                    </div>\r\n                                    :\r\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>}\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n\r\n                <Pagination\r\n                    className=\"pagination\"\r\n                    count={Math.ceil(this.props.Value / 5)}\r\n                    page={this.state.page}\r\n                    siblingCount={3}\r\n                    boundaryCount={2}\r\n                    onChange={(event, page) => {\r\n                        this.props.SearchFunc(page - 1, this.state.pageSize, this.props.search);\r\n                        window.scrollTo(0, 0);\r\n                        this.setState({ page: page });\r\n                    }} />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Films;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Top.js",["340","341","342","343","344","345"],"import React, { useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass Top extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            TopElements: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        this.GetTop();\r\n    }\r\n\r\n    GetTop() {\r\n        fetch('https://kodikapi.com/list?token=9f97924b4aae53e816f330c113b08294&with_material_data=true&translation_type=voice&year=2020&sort=kinopoisk_rating&limit=50', {\r\n            method: 'POST',\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                respons.results.map(result => {\r\n                    this.setState(state => {\r\n                        return {\r\n                            TopElements: [...state.TopElements, {\r\n                                poster: result.material_data ?\r\n                                    <img src={result.material_data.poster_url} height=\"100px\" /> :\r\n                                    <img src={\"https://st.kp.yandex.net/images/no-poster.gif\"} height=\"100px\" />,\r\n                                title: <Link to={\"/video_player/\" + result.id}>{result.title}</Link>,\r\n                                link: result.link,\r\n                                year: result.year,\r\n                                quality: result.quality,\r\n                                genres: result.material_data ?\r\n                                    result.material_data.genres : null,\r\n                                kinopoisk_rating: result.material_data ?\r\n                                    result.material_data.kinopoisk_rating :\r\n                                    <p>Без оценки</p>\r\n                            }],\r\n                        }\r\n                    })\r\n                })\r\n                console.log(\"Top: \", this.state.TopElements);\r\n                console.log(\"Full: \", respons);\r\n            })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"central\">\r\n\r\n                <Table striped bordered hover variant=\"dark\" responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Постер</th>\r\n                            <th>Название</th>\r\n                            <th>Год</th>\r\n                            <th>Качество</th>\r\n                            <th>Жанры</th>\r\n                            <th>Рейтинг</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.TopElements.map((post, key) =>\r\n                            <tr key={key}>\r\n                                <td>{key + 1}</td>\r\n                                <td>{post.poster}</td>\r\n                                <td>{post.title}</td>\r\n                                <td>{post.year}</td>\r\n                                <td>{post.quality}</td>\r\n                                <td>{post.genres.map((genres, key) => {\r\n                                    if (genres != null) {\r\n                                        return (\r\n                                            <div key={key} className=\"Tag\">\r\n                                                {genres}\r\n                                            </div>);\r\n                                    } else {\r\n                                        return (<p key={key}>Без распределений по жанрам</p>);\r\n                                    }\r\n                                })}\r\n                                </td>\r\n                                <td>{post.kinopoisk_rating}</td>\r\n                            </tr>\r\n                        )}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Top;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Head.js",["346"],"import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport Header from './subcomponents/Header';\r\nimport HeaderMobile from './subcomponents/HeaderMobile';\r\nimport Login from './Login';\r\nimport Profile from './Profile';\r\n\r\nclass Head extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            BookMarks: [],\r\n            SliderPost: [],\r\n        }\r\n        this.GetSave = this.GetSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.GetSliderData();\r\n    }\r\n\r\n    GetSave() {\r\n        var form = new FormData();\r\n        form.append('table', localStorage.getItem(\"token\"));\r\n        fetch('http://site.alwaysdata.net/write.php', {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ BookMarks: respons.marks });\r\n            })\r\n    }\r\n\r\n    RemoveSaveBookMark(id) {\r\n        var form = new FormData();\r\n        form.append('id', id);\r\n        form.append('table', localStorage.getItem(\"token\"));\r\n        fetch('http://site.alwaysdata.net/remove.php', {\r\n            method: 'POST',\r\n            body: form,\r\n        })\r\n    }\r\n\r\n    GetSliderData() {\r\n        fetch('http://site.alwaysdata.net/headslider.php', {\r\n            method: 'POST',\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ SliderPost: respons.posts });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h3>Dark <span style={{ backgroundColor: \"#ffd700\", color: \"#262a2d\", padding: \"0 5px 3px 5px\", borderRadius: \"5px\" }}>Raven</span></h3>\r\n                    {localStorage.getItem(\"token\") != null ? <Profile /> : <Login message={this.props.onMessage} />}\r\n                </div>\r\n\r\n                <Header searth={this.props.Search} type={this.props.Type} pageSize={this.props.pageSize} BookMarks={this.state.BookMarks} RemoveSaveBookMark={this.RemoveSaveBookMark} message={this.props.onMessage} getsave={this.GetSave} />\r\n                <HeaderMobile searth={this.props.Search} type={this.props.Type} pageSize={this.props.pageSize} BookMarks={this.state.BookMarks} RemoveSaveBookMark={this.RemoveSaveBookMark} message={this.props.onMessage} getsave={this.GetSave} />\r\n\r\n                <Carousel style={{ height: \"400px\" }}>\r\n                    {this.state.SliderPost.map((items, key) =>\r\n                        <Carousel.Item key={key}>\r\n                            <div className=\"item\">\r\n                                <a href={\"/video_player/\" + items.idvideo}>\r\n                                    <div className=\"carusel_item\">\r\n                                        <div className=\"carusel_background\" style={{ backgroundImage: \"url(\" + items.photo + \")\" }}></div>\r\n                                        <div className={\"carusel_info\"}><div><h2>{items.title}</h2><p>{items.discr}</p></div><img src={items.photo} style={{ width: \"170px\" }} /></div>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        </Carousel.Item>\r\n                    )}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Head;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Actors.js",["347","348","349","350"],"import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass Actors extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            referrer: null,\r\n            Content: [],\r\n            ValuePage: null,\r\n            pageSize: 5,\r\n            page: 1,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.RenderDB(0, this.state.pageSize);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    DeleteFilm(name, id) {\r\n        if (window.confirm(\"Вы действительно желаете удалить запись о актере, \" + name + \"?\")) {\r\n            var form = new FormData();\r\n            form.append('id', id);\r\n            form.append('token', localStorage.getItem(\"token\"));\r\n            fetch(\"http://site.alwaysdata.net/deleteactor.php\", {\r\n                method: 'POST',\r\n                body: form,\r\n            });\r\n            this.props.message(\"Успешное удаление: '\" + name + \"'\");\r\n            this.RenderDB(this.state.page, this.state.pageSize);\r\n        }\r\n    }\r\n\r\n    RenderDB(Page, pageSize) {\r\n        var form = new FormData();\r\n        form.append('page', Page);\r\n        form.append('pagesize', pageSize);\r\n\r\n        fetch(\"http://site.alwaysdata.net/dbactors.php\", {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ Content: respons.actors, ValuePage: respons.length, pageSize: pageSize });\r\n                //console.log(respons);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.Content;\r\n        if (!data) { return <div>Загрузка данных....</div> }\r\n\r\n        const { referrer } = this.state;\r\n        if (referrer) return <Redirect to={referrer} />;\r\n        return (\r\n            <Router>\r\n                <div className=\"central\">\r\n                    <Button style={{ width: \"100%\", margin: \"5px 0\" }} onClick={() => this.setState({ referrer: \"/edaactor/new\" })}>Добавить</Button>\r\n                    {this.state.Content.map((post, key) => {\r\n                        if (post.Name != null)\r\n                            return <div key={key} className=\"post-slot\">\r\n                                <Button className=\"ForeverVideo\" onClick={() => { this.setState({ referrer: \"/edaactor/\" + post.id }) }}>\r\n                                    <Link to={\"/edaactor/\" + post.id}>\r\n                                        <EditIcon style={{ color: \"white\" }} />\r\n                                    </Link>\r\n                                </Button>\r\n                                <Button variant=\"danger\" className=\"ForeverVideo\" style={{ marginRight: \"60px\" }} onClick={() => {this.DeleteFilm(post.Name, post.id);}}>\r\n                                    <DeleteIcon />\r\n                                </Button>\r\n                                <a className=\"post-slot-button\">{post.Name}</a>\r\n                                <img src={post.Image} height=\"200px\" />\r\n                                {post.DateofBirth != null ?\r\n                                    <div className=\"info_panel\">\r\n                                        <p>Дата рождения: {post.DateofBirth}</p>\r\n                                        <p>Рост: {post.Growth} м</p>\r\n                                    </div>\r\n                                    :\r\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>\r\n                                }\r\n                            </div>\r\n                    })}\r\n\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        count={Math.ceil(this.state.ValuePage / 5)}\r\n                        page={this.state.page}\r\n                        siblingCount={3}\r\n                        boundaryCount={2}\r\n                        onChange={(event, page) => {\r\n                            this.RenderDB(page - 1, this.state.pageSize);\r\n                            window.scrollTo(0, 0);\r\n                            this.setState({ page: page });\r\n                        }} />\r\n                </div>\r\n            </Router >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Actors;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\ViewActors.js",["351","352","353","354","355","356","357"],"import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass ViewActors extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            referrer: null,\r\n            Content: [],\r\n            ValuePage: null,\r\n            pageSize: 5,\r\n            page: 1,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.RenderDB(0, this.state.pageSize);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n\r\n    RenderDB(Page, pageSize) {\r\n        var form = new FormData();\r\n        form.append('page', Page);\r\n        form.append('pagesize', pageSize);\r\n\r\n        fetch(\"http://site.alwaysdata.net/dbactors.php\", {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ Content: respons.actors, ValuePage: respons.length, pageSize: pageSize });\r\n                //console.log(respons);\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.Content;\r\n        if (!data) { return <div>Загрузка данных....</div> }\r\n\r\n        const { referrer } = this.state;\r\n        if (referrer) return <Redirect to={referrer} />;\r\n        return (\r\n            <Router>\r\n                <div className=\"central\">\r\n                    {this.state.Content.map((post, key) => {\r\n                        if (post.Name != null)\r\n                            return <div key={key} className=\"post-slot\">\r\n                                <a className=\"post-slot-button\" href={\"/actor/\" + post.id}>{post.Name}</a>\r\n                                <img src={post.Image} height=\"200px\" />\r\n                                {\r\n                                    post.DateofBirth != null ?\r\n                                        <div className=\"info_panel\">\r\n                                            <p>Дата рождения: {post.DateofBirth}</p>\r\n                                            <p>Рост: {post.Growth} м</p>\r\n                                        </div>\r\n                                        :\r\n                                        <p style={{ color: \"white\" }}>Нет информации!</p>\r\n                                }\r\n                            </div>\r\n                    })}\r\n\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        count={Math.ceil(this.state.ValuePage / 5)}\r\n                        page={this.state.page}\r\n                        siblingCount={3}\r\n                        boundaryCount={2}\r\n                        onChange={(event, page) => {\r\n                            this.RenderDB(page - 1, this.state.pageSize);\r\n                            window.scrollTo(0, 0);\r\n                            this.setState({ page: page });\r\n                        }} />\r\n                </div>\r\n            </Router >\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewActors;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Watched.js",["358","359","360"],"import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { VisibilityOff } from '@material-ui/icons';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass Watched extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            referrer: null,\r\n            Content: [],\r\n            ValuePage: null,\r\n            pageSize: 5,\r\n            page: 1,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.RenderDB(0, this.state.pageSize);\r\n        window.scrollTo(0, 0);\r\n    }\r\n\r\n    removeWatch(id) {\r\n        var form = new FormData();\r\n        form.append('id', id);\r\n        form.append('token', localStorage.getItem(\"token\"));\r\n        fetch(\"http://site.alwaysdata.net/removewatch.php\", {\r\n            method: 'POST',\r\n            body: form,\r\n        });\r\n        this.RenderDB(this.state.page - 1, this.state.pageSize);\r\n    }\r\n\r\n    RenderDB(Page, pageSize) {\r\n        var form = new FormData();\r\n        form.append('page', Page);\r\n        form.append('pagesize', pageSize);\r\n        form.append('token', localStorage.getItem(\"token\"));\r\n        fetch(\"http://site.alwaysdata.net/watched.php\", {\r\n            method: 'POST',\r\n            body: form,\r\n        }).then(res => res.json())\r\n            .then(respons => {\r\n                this.setState({ Content: respons.video, ValuePage: respons.length, pageSize: pageSize });\r\n            })\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.Content;\r\n        if (!data) { return <div>Загрузка данных....</div> }\r\n\r\n        const { referrer } = this.state;\r\n        if (referrer) return <Redirect to={referrer} />;\r\n        return (\r\n            <Router>\r\n                <div className=\"central\">\r\n                    {data.map((post, key) => {\r\n                        if (post.title != null)\r\n                            return <div key={key} className=\"post-slot\">\r\n                                <Button className=\"ForeverVideo\" onClick={() => {\r\n                                    if (localStorage.getItem(\"name\")) {\r\n                                        this.props.message('Вы пометили видео запись не просмотренной.');\r\n                                        this.removeWatch(post.id_video);\r\n                                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n                                }}>\r\n                                    <VisibilityOff />\r\n                                </Button>\r\n                                <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\r\n                                <img src={post.poster} height=\"200px\" />\r\n                                {post.year != null ?\r\n                                    <div className=\"info_panel\">\r\n                                        <p>Год: {post.year}</p>\r\n                                        <p>Страна: {post.countries}</p>\r\n                                        <p>Жанры: {post.genres}</p>\r\n                                        <p>Продолжительность: {post.duration} мин.</p>\r\n                                        <br />\r\n                                        <p>{post.discription != null && post.discription}</p>\r\n                                        <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\r\n                                        <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\r\n                                        <p className=\"quality\">{post.quality}</p>\r\n                                    </div>\r\n                                    :\r\n                                    <p style={{ color: \"white\" }}>Нет информации!</p>\r\n                                }\r\n                            </div>\r\n                    })}\r\n\r\n                    <Pagination\r\n                        className=\"pagination\"\r\n                        count={Math.ceil(this.state.ValuePage / 5)}\r\n                        page={this.state.page}\r\n                        siblingCount={3}\r\n                        boundaryCount={2}\r\n                        onChange={(event, page) => {\r\n                            this.RenderDB(page - 1, this.state.pageSize);\r\n                            window.scrollTo(0, 0);\r\n                            this.setState({ page: page });\r\n                        }} />\r\n                </div>\r\n            </Router >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Watched;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\ActorSearth.js",["361","362","363","364","365"],"import React from 'react';\r\nimport \"../../styles/EditPage.css\";\r\nimport { Button } from 'react-bootstrap';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nclass ActorSearth extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      referrer: null,\r\n      pageSize: 5,\r\n      page: 1,\r\n      Posts: null,\r\n      PostValue: null,\r\n      Info: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\r\n      this.GetData(this.props.meta.match.params.id, 0, this.state.pageSize);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  GetData(id, Page, pageSize) {\r\n    var form = new FormData();\r\n    form.append('id', id);\r\n    form.append('page', Page);\r\n    form.append('pagesize', pageSize);\r\n    fetch(\"http://site.alwaysdata.net/searthactor.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        this.setState({ Posts: respons.video, PostValue: respons.length, Info: respons.info });\r\n        console.log(respons);\r\n      })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { referrer } = this.state;\r\n    if (referrer) return <Redirect to={referrer} />;\r\n\r\n    let data = this.state.Info;\r\n    let post = this.state.Posts;\r\n\r\n    if (data == null || post == null) {\r\n      this.GetData(this.props.meta.match.params.id, 0, this.state.pageSize);\r\n      return <div>Загрузка данных....</div>\r\n    }\r\n\r\n    return (\r\n      <div className={\"central videoview\"}>\r\n        <p className=\"post-slot-button post-slot-buttonview\">{data.Name}</p>\r\n        <img style={{ float: \"left\", padding: \"3px\" }} src={data.Image} height=\"200px\" width=\"auto\" />\r\n        <div className=\"info-videoview\" style={{ minHeight: \"200px\" }}>\r\n          <p>Дата рождения: {data.Date}</p>\r\n          <p>Рост: {data.Growth} м</p>\r\n        </div>\r\n\r\n        <h4 style={{ color: \"white\" }}>Найдено записей: {this.state.PostValue}</h4>\r\n        <div style={{ padding: \"15px\" }}>\r\n          {post.map((post, key) => {\r\n            if (post.title != null) {\r\n              return (\r\n                <div key={key} className=\"post-slot\">\r\n\r\n                  <Button className=\"ForeverVideo\" onClick={() => {\r\n                    if (localStorage.getItem(\"name\")) {\r\n                      this.props.SetSave(post.title, post.id_video, post.poster != null ? post.poster : 'https://st.kp.yandex.net/images/no-poster.gif');\r\n                    } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\r\n                  }}>\r\n                    <FavoriteIcon />\r\n                  </Button>\r\n\r\n                  <a className=\"post-slot-button\" href={\"/video_player/\" + post.id_video}>{post.title}</a>\r\n                  <img src={post.poster} height=\"200px\" />\r\n                  {post.year != null ?\r\n                    <div className=\"info_panel\">\r\n                      <p>Год: {post.year}</p>\r\n                      <p>Страна: {post.countries}</p>\r\n                      <p>Жанры: {post.genres}</p>\r\n                      <p>Продолжительность: {post.duration} мин.</p>\r\n                      <br />\r\n                      <p>{post.discription != null && post.discription}</p>\r\n                      <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\r\n                      <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\r\n                      <p className=\"quality\">{post.quality}</p>\r\n                    </div>\r\n                    :\r\n                    <p style={{ color: \"white\" }}>Нет информации!</p>}\r\n                </div>\r\n              )\r\n            }\r\n          })}\r\n\r\n          <Pagination\r\n            className=\"pagination\"\r\n            count={Math.ceil(this.state.PostValue / 5)}\r\n            page={this.state.page}\r\n            siblingCount={3}\r\n            boundaryCount={2}\r\n            onChange={(event, page) => {\r\n              this.GetData(this.props.meta.match.params.id, page - 1, this.state.pageSize);\r\n              window.scrollTo(0, 0);\r\n              this.setState({ page: page });\r\n            }} />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default ActorSearth;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\EditActors.js",["366","367","368","369","370","371","372","373","374"],"import React from 'react';\r\nimport \"../../styles/EditPage.css\";\r\nimport { Card, Accordion, Button } from 'react-bootstrap';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass EditActors extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      referrer: null,\r\n      Info: null,\r\n      message: null,\r\n      countrieslist: [],\r\n      genreslist: [],\r\n    };\r\n  }\r\n\r\n  Init() {\r\n    try {\r\n      let data = this.state.Info;\r\n\r\n      this.title.value = data.Name;\r\n      this.DateofBirth.value = data.DateofBirth;\r\n      this.Growth.value = data.Growth;\r\n      this.poster.value = data.Image;\r\n    } catch {\r\n      this.setState({ referrer: \"/\" });\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.setState({\r\n      Info: {\r\n        Name: \"Имя\",\r\n        DateofBirth: \"Дата рождения\",\r\n        Growth: \"Рост\",\r\n        Image: \"https://st.kp.yandex.net/images/no-poster.gif\"\r\n      }\r\n    });\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\r\n      this.GetData(this.props.meta.match.params.id);\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }\r\n\r\n  GetData(id) {\r\n    var form = new FormData();\r\n    form.append('id', id);\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    fetch(\"http://site.alwaysdata.net/actorview.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        if (respons != null) {\r\n          this.setState({ Info: respons });\r\n        } else {\r\n          this.setState({ referrer: \"/\" });\r\n        }\r\n        //console.log(respons);\r\n        this.Init();\r\n      })\r\n  }\r\n\r\n  saveInfo(id) {\r\n    //console.log(this.state);\r\n    var form = new FormData();\r\n    form.append('type', this.props.meta.match.params.id == \"new\" ? 1 : 0);\r\n    form.append('id', id);\r\n    form.append('Name', this.title.value);\r\n    form.append('DateofBirth', this.DateofBirth.value);\r\n    form.append('Growth', this.Growth.value);\r\n    form.append('Image', this.poster.value);\r\n\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    fetch(\"http://site.alwaysdata.net/createactor.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        if (respons != null) {\r\n          this.setState({ message: respons.message });\r\n          this.props.message(respons.message);\r\n        } else {\r\n          this.setState({ referrer: \"/\" });\r\n        }\r\n        //console.log(respons.message);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { referrer } = this.state;\r\n    if (referrer) return <Redirect to={referrer} />;\r\n\r\n    let data = this.state.Info;\r\n\r\n    if (data == null) {\r\n      if (this.props.meta.match.params.id != \"new\")\r\n        this.GetData(this.props.meta.match.params.id);\r\n\r\n      return <div>Загрузка данных....</div>\r\n    }\r\n\r\n    return (\r\n      <div className={\"central videoview\"}>\r\n        <p className=\"post-slot-button post-slot-buttonview editor-title\"><input placeholder={data.Name} ref={el => this.title = el} /></p>\r\n        <Button className=\"ForeverVideo\" style={{ top: \"-32px\" }} onClick={() => this.saveInfo(this.props.meta.match.params.id)}><SaveIcon /></Button>\r\n        <img style={{ float: \"left\", padding: \"3px\" }} src={data.Image} height=\"200px\" width=\"auto\" ref={el => { this.image = el; }} />\r\n        <input className={\"editor-poster\"} placeholder={data.Image} onChange={(e) => e.target.value != \"\" ? this.image.src = e.target.value : this.image.src = data.Image} ref={el => this.poster = el} />\r\n        <div className=\"info-videoview\">\r\n          <p>Дата рождения: <input className={\"editor-input\"} placeholder={data.DateofBirth} ref={el => this.DateofBirth = el} /></p>\r\n          <p>Рост: <input className={\"editor-input\"} placeholder={data.Growth} ref={el => this.Growth = el} /> м</p>\r\n        </div>\r\n      </div >\r\n    );\r\n  };\r\n}\r\n\r\nexport default EditActors;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\EditPage.js",["375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391"],"import React from 'react';\r\nimport \"../../styles/EditPage.css\";\r\nimport { Card, Accordion, Button } from 'react-bootstrap';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass EditPage extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      referrer: null,\r\n      Info: null,\r\n      message: null,\r\n      countrieslist: [],\r\n      genreslist: [],\r\n    };\r\n  }\r\n\r\n  Init() {\r\n    try {\r\n      let data = this.state.Info;\r\n\r\n      this.title.value = data.title;\r\n      this.title_orig.value = data.title_orig;\r\n      this.poster.value = data.poster;\r\n      this.year.value = data.year;\r\n      this.setState({ countrieslist: data.countries.split(\",\") });\r\n      this.setState({ genreslist: data.genres.split(\",\") });\r\n      this.duration.value = data.duration;\r\n      this.description.value = data.discription;\r\n      this.kinopoisk_rating.value = data.kinopoisk_rating;\r\n      this.imdb_rating.value = data.imdb_rating;\r\n      this.quality.value = data.quality;\r\n      this.actors.value = data.actors;\r\n      this.directors.value = data.directors;\r\n      this.producers.value = data.producers;\r\n      this.writers.value = data.writers;\r\n      this.composers.value = data.composers;\r\n      this.editors.value = data.editors;\r\n      this.designers.value = data.designers;\r\n      this.operators.value = data.operators;\r\n    } catch {\r\n      this.setState({ referrer: \"/\" });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.meta.match.params.id !== this.props.meta.match.params.id) {\r\n      this.GetData(this.props.meta.match.params.id);\r\n    }\r\n  }\r\n\r\n  GetData(id) {\r\n    var form = new FormData();\r\n    form.append('id', id);\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    fetch(\"http://site.alwaysdata.net/editorview.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        if (respons != null) {\r\n          this.setState({ Info: respons });\r\n        } else {\r\n          this.setState({ referrer: \"/\" });\r\n        }\r\n        //console.log(respons);\r\n        this.Init();\r\n      })\r\n  }\r\n\r\n  saveInfo(id) {\r\n    console.log(this.state);\r\n    var form = new FormData();\r\n    form.append('id', id);\r\n\r\n    form.append('title', this.title.value);\r\n    form.append('title_orig', this.title_orig.value);\r\n    form.append('image', this.poster.value);\r\n    form.append('year', this.year.value);\r\n    form.append('countries', this.state.countrieslist);\r\n    form.append('genres', this.state.genreslist);\r\n    form.append('duration', this.duration.value);\r\n    form.append('description', this.description.value);\r\n    form.append('kinopoisk_rating', this.kinopoisk_rating.value);\r\n    form.append('imdb_rating', this.imdb_rating.value);\r\n    form.append('quality', this.quality.value);\r\n    form.append('actors', this.actors.value);\r\n    form.append('directors', this.directors.value);\r\n    form.append('producers', this.producers.value);\r\n    form.append('writers', this.writers.value);\r\n    form.append('composers', this.composers.value);\r\n    form.append('editors', this.editors.value);\r\n    form.append('designers', this.designers.value);\r\n    form.append('operators', this.operators.value);\r\n\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    fetch(\"http://site.alwaysdata.net/saveeditor.php\", {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        if (respons != null) {\r\n          this.setState({ message: respons.message });\r\n          this.props.message(respons.message);\r\n        } else {\r\n          this.setState({ referrer: \"/\" });\r\n        }\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { referrer } = this.state;\r\n    if (referrer) return <Redirect to={referrer} />;\r\n\r\n    let data = this.state.Info;\r\n\r\n    if (data == null) {\r\n      this.GetData(this.props.meta.match.params.id);\r\n      return <div>Загрузка данных....</div>\r\n    }\r\n\r\n    return (\r\n      <div className={\"central videoview\"}>\r\n        <p className=\"post-slot-button post-slot-buttonview editor-title\"><input placeholder={data.title} ref={el => this.title = el} /></p>\r\n        <p className=\"original-title editor-title\"><input placeholder={data.title_orig} ref={el => this.title_orig = el} /></p>\r\n        <Button className=\"ForeverVideo\" style={{ top: \"-32px\" }} onClick={() => this.saveInfo(data.id_video)}><SaveIcon /></Button>\r\n        <img style={{ float: \"left\", padding: \"3px\" }} src={data.poster} height=\"200px\" width=\"auto\" ref={el => { this.image = el; }} />\r\n        <input className={\"editor-poster\"} placeholder={data.poster} onChange={(e) => { e.target.value != \"\" ? this.image.src = e.target.value : this.image.src = data.poster; console.log(this.image); }} ref={el => this.poster = el} />\r\n        <div className=\"info-videoview\">\r\n          <p>Год: <input className={\"editor-input\"} placeholder={data.year} ref={el => this.year = el} /></p>\r\n          <p>Страна: <input className={\"editor-input\"} placeholder={data.countries != \"\" ? data.countries : \"\"} ref={el => this.countries = el} />\r\n            <button className={\"add-item\"} onClick={() => {\r\n              this.setState({ countrieslist: [...this.state.countrieslist, this.countries.value] });\r\n              this.countries.value = null;\r\n            }\r\n            }>+</button>\r\n          </p>\r\n          <div className=\"data-list\">\r\n            {this.state.countrieslist.map((countrie, key) => {\r\n              return (\r\n                <div className=\"Tag\" key={key}>\r\n                  {countrie}\r\n                  <button className={\"delete-item\"} onClick={() =>\r\n                    this.setState({ countrieslist: this.state.countrieslist.filter((_, i) => i !== key) })\r\n                  }>\r\n                    <CloseIcon style={{ fontSize: \"12px\" }} />\r\n                  </button>\r\n                </div>\r\n              );\r\n            }\r\n            )}\r\n          </div>\r\n          <p>Жанры: <input className={\"editor-input\"} placeholder={data.genres != \"\" ? data.genres : \"\"} ref={el => this.genres = el} />\r\n            <button className={\"add-item\"} onClick={() => {\r\n              this.setState({ genreslist: [...this.state.genreslist, this.genres.value] });\r\n              this.genres.value = null;\r\n            }\r\n            }>+</button>\r\n            <div className=\"data-list\">\r\n              {this.state.genreslist.map((genres, key) => {\r\n                return (\r\n                  <div className=\"Tag\" key={key}>\r\n                    {genres}\r\n                    <button className={\"delete-item\"} onClick={() =>\r\n                      this.setState({ genreslist: this.state.genreslist.filter((_, i) => i !== key) })\r\n                    }>\r\n                      <CloseIcon style={{ fontSize: \"12px\" }} />\r\n                    </button>\r\n                  </div>\r\n                );\r\n              }\r\n              )}\r\n            </div>\r\n          </p>\r\n          <p>Продолжительность: <input className={\"editor-input\"} placeholder={data.duration} ref={el => this.duration = el} /> мин.</p>\r\n          <br />\r\n          <p>Описание: <textarea className={\"editor-area\"} placeholder={data.description != \"\" && data.description} ref={el => this.description = el} /></p>\r\n          <p className={\"rating-info\"} style={{ top: 0 }}>КиноПоиск: <input className={\"editor-input\"} placeholder={data.kinopoisk_rating} style={{ width: \"200px\" }} ref={el => this.kinopoisk_rating = el} /></p>\r\n          <p className={\"rating-info\"} style={{ top: \"30px\" }}>Imdb: <input className={\"editor-input\"} placeholder={data.imdb_rating} style={{ width: \"200px\" }} ref={el => this.imdb_rating = el} /></p>\r\n          <p className={\"rating-info\"} style={{ top: \"60px\", color: \"green\" }}>Качество: <input className={\"editor-input\"} placeholder={data.quality} style={{ width: \"200px\" }} ref={el => this.quality = el} /></p>\r\n        </div>\r\n        <hr></hr>\r\n        <iframe src={data.link + \"?hide_selectors=true\"} width=\"100%\" height=\"350\" frameborder=\"0\" allowfullscreen allow=\"autoplay *; fullscreen *\"></iframe>\r\n        <Accordion>\r\n          {/*seasons != null ? seasons.map((seasons, key) => {\r\n            return (\r\n              <Card key={key} style={{ borderColor: \"#474b4e\" }}>\r\n                <Card.Header style={{ backgroundColor: \"#262a2d\" }}>\r\n                  <Accordion.Toggle as={Button} variant=\"link\" style={{ width: \"100%\" }} eventKey={seasons}>\r\n                    Сезон {seasons}\r\n                  </Accordion.Toggle>\r\n                </Card.Header>\r\n\r\n                <Accordion.Collapse eventKey={seasons}>\r\n                  <Card.Body className=\"episodes-list\">\r\n                    {episodes != null ? episodes.map((episode, keys) => <button className={this.state.seriesnum == (keys + 1) ? \"series-button series-active\" : \"series-button\"} onClick={() => { this.SaveSeries((keys + 1), data.id, episode); }}>{keys + 1}</button>) : \"\"}\r\n                  </Card.Body>\r\n                </Accordion.Collapse>\r\n              </Card>\r\n            );\r\n          }) : \"\"*/}\r\n        </Accordion>\r\n\r\n        <div className={\"dop-info\"}>\r\n          <p>Актеры: <textarea className={\"editor-area\"} placeholder={data.actors != \"\" ? data.actors : \"\"} ref={el => this.actors = el} /></p>\r\n          <p>Режиссеры: <textarea className={\"editor-area\"} placeholder={data.directors != \"\" ? data.directors : \"\"} ref={el => this.directors = el} /></p>\r\n          <p>Продюссеры: <textarea className={\"editor-area\"} placeholder={data.producers != \"\" ? data.producers : \"\"} ref={el => this.producers = el} /></p>\r\n          <p>Сценаристы: <textarea className={\"editor-area\"} placeholder={data.writers != \"\" ? data.writers : \"\"} ref={el => this.writers = el} /></p>\r\n          <p>Композиторы: <textarea className={\"editor-area\"} placeholder={data.composers != \"\" ? data.composers : \"\"} ref={el => this.composers = el} /></p>\r\n          <p>Монтажеры: <textarea className={\"editor-area\"} placeholder={data.editors != \"\" ? data.editors : \"\"} ref={el => this.editors = el} /></p>\r\n          <p>Художники: <textarea className={\"editor-area\"} placeholder={data.designers != \"\" ? data.designers : \"\"} ref={el => this.designers = el} /></p>\r\n          <p>Операторы: <textarea className={\"editor-area\"} placeholder={data.operators != \"\" ? data.operators : \"\"} ref={el => this.operators = el} /></p>\r\n        </div>\r\n      </div >\r\n    );\r\n  };\r\n}\r\n\r\nexport default EditPage;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\HeaderMobile.js",["392","393","394","395","396"],"import React from 'react';\r\nimport { Card, Accordion, Form, Modal, Button, Dropdown } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nclass HeaderMobile extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            show: false,\r\n        };\r\n    }\r\n\r\n    serath = (e) => {\r\n        this.props.searth(0, this.props.pageSize, e.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Accordion defaultActiveKey=\"0\" className={\"nav_bar mobile-view\"}>\r\n                    <Card>\r\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\"><MenuIcon style={{ color: \"#FFD700\" }} /></Accordion.Toggle>\r\n                        <Accordion.Collapse eventKey=\"1\">\r\n                            <Card.Body>\r\n                                <a href=\"/\">Главная</a>\r\n                                <a onClick={() => { this.props.getsave(); this.setState({ show: true }); }}>Избранное</a>\r\n                                <a href=\"/top\">Рекомендации</a>\r\n                                <a href=\"/actors\">Актеры</a>\r\n                                <a href=\"/films\">Фильмы</a>\r\n                                <a href=\"/serials\">Сериалы</a>\r\n                                <a href=\"/doramy\">Дорамы</a>\r\n                                <a href=\"/anime\">Аниме</a>\r\n\r\n                                <Formik\r\n                                    onSubmit={this.serath}\r\n                                    initialValues={{\r\n                                        value: '',\r\n                                    }}\r\n                                >\r\n                                    {({\r\n                                        handleSubmit,\r\n                                        handleChange,\r\n                                        handleBlur,\r\n                                        values,\r\n                                        touched,\r\n                                        isValid,\r\n                                        errors,\r\n                                    }) => (\r\n                                        <Form onSubmit={handleSubmit}>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                name=\"value\"\r\n                                                value={values.value}\r\n                                                onChange={handleChange}\r\n                                                placeholder=\"Введите название...\"\r\n                                                className=\"mr-sm-2\" />\r\n                                            <Button type=\"submit\" style={{ width: \"100%\" }}>Поиск</Button>\r\n                                        </Form>\r\n                                    )}\r\n                                </Formik>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>\r\n                <Modal\r\n                    show={this.state.show}\r\n                    onHide={() => this.setState({ show: false })}\r\n                    dialogClassName=\"modal-90w\"\r\n                    aria-labelledby=\"example-custom-modal-styling-title\"\r\n                >\r\n                    <Modal.Header closeButton style={{ backgroundColor: \"#171a1f\", color: \"#FFD700\" }}>\r\n                        <Modal.Title id=\"example-custom-modal-styling-title\">Избранное</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body style={{ backgroundColor: \"#171a1f\", color: \"#FFD700\" }}>\r\n                        {this.props.BookMarks.map((mark, key) =>\r\n                            <div className=\"book-mark\" key={\"index=\" + key}>\r\n                                <a href={\"/video_player/\" + mark[2]} className=\"mark-slot\">\r\n                                    <h1>{mark[1]}</h1>\r\n                                    <img src={mark[3]} height=\"70px\" />\r\n                                    {mark[4] != 0 && <h2>Отсановились на {mark[4]} серии</h2>}\r\n                                    <Button\r\n                                        variant=\"danger\"\r\n                                        style={{\r\n                                            position: \"absolute\",\r\n                                            bottom: \"0px\",\r\n                                            right: \"0px\",\r\n                                            padding: \"0 3px\"\r\n                                        }}\r\n                                        onClick={() => {\r\n                                            this.props.RemoveSaveBookMark(mark[0]);\r\n                                            this.props.message(\"Успешное удаление: '\" + mark[1] + \"'\");\r\n                                        }}>Удалить</Button>\r\n                                </a>\r\n                            </div>\r\n                        )}\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default HeaderMobile;",["397","398"],"C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\subcomponents\\Header.js",["399","400","401"],"import React from 'react';\r\nimport { Navbar, NavDropdown, Form, Nav, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\n\r\nclass Header extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n    serath = (e) => {\r\n        this.props.searth(0, this.props.pageSize, e.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Navbar bg=\"none\" className={\"nav_bar pc-view\"} expand=\"md\" variant=\"none\">\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/\">Главная</Nav.Link>\r\n                        <NavDropdown onClick={() => this.props.getsave()} title=\"Избранное\" id=\"basic-nav-dropdown\" style={{ backgroundColor: \"#0c1013\", maxHeight: \"200px\" }}>\r\n                            {this.props.BookMarks.map((mark, key) =>\r\n                                <NavDropdown.Item key={\"index=\" + key}>\r\n                                    <Link to={\"/video_player/\" + mark[2]} className=\"mark-slot\">\r\n                                        <h1>{mark[1]}</h1>\r\n                                        <img src={mark[3]} height=\"70px\" />\r\n                                        {mark[4] != 0 && <h2>Отсановились на {mark[4]} серии</h2>}\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            style={{\r\n                                                position: \"absolute\",\r\n                                                bottom: \"0px\",\r\n                                                right: \"0px\",\r\n                                                padding: \"0 3px\"\r\n                                            }}\r\n                                            onClick={() => {\r\n                                                this.props.RemoveSaveBookMark(mark[0]);\r\n                                                this.props.message(\"Успешное удаление: '\" + mark[1] + \"'\");\r\n                                            }}>Удалить</Button>\r\n                                    </Link>\r\n                                </NavDropdown.Item>\r\n                            )}\r\n\r\n                        </NavDropdown>\r\n                        <Nav.Link href=\"/top\">Рекомендации</Nav.Link>\r\n                        <Nav.Link href=\"/actors\">Актеры</Nav.Link>\r\n                        <Nav.Link href=\"/films\">Фильмы</Nav.Link>\r\n                        <Nav.Link href=\"/serials\">Сериалы</Nav.Link>\r\n                        <Nav.Link href=\"/doramy\">Дорамы</Nav.Link>\r\n                        <Nav.Link href=\"/anime\">Аниме</Nav.Link>\r\n                    </Nav>\r\n\r\n                    <Formik\r\n                        onSubmit={this.serath}\r\n                        initialValues={{\r\n                            value: '',\r\n                        }}\r\n                    >\r\n                        {({\r\n                            handleSubmit,\r\n                            handleChange,\r\n                            handleBlur,\r\n                            values,\r\n                            touched,\r\n                            isValid,\r\n                            errors,\r\n                        }) => (\r\n                            <Form inline onSubmit={handleSubmit}>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    name=\"value\"\r\n                                    value={values.value}\r\n                                    onChange={handleChange}\r\n                                    placeholder=\"Введите название...\"\r\n                                    className=\"mr-sm-2\" />\r\n                                <Button type=\"submit\">Поиск</Button>\r\n                            </Form>\r\n                        )}\r\n                    </Formik>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\nexport default Header;","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Profile.js",["402","403"],"import React from 'react';\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nclass Profile extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isModerator: 0,\r\n    }\r\n  }\r\n  CheckModerator() {\r\n    var form = new FormData();\r\n    form.append('token', localStorage.getItem(\"token\"));\r\n    fetch('http://site.alwaysdata.net/checkmoderator.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        console.log(respons);\r\n        if (respons != null)\r\n          this.setState({ isModerator: respons });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropdown className=\"profile\">\r\n        <Dropdown.Toggle variant=\"none\" id=\"dropdown-basic\" onMouseDown={() => this.CheckModerator()}><img src={localStorage.getItem(\"icon\")} width={\"25px\"} height={\"25px\"} style={{ marginRight: \"10px\", borderRadius: \"10px\", objectFit: \"cover\" }} />{localStorage.getItem(\"name\")}</Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          <small style={{ color: \"grey\" }}>Управление аккаунтом</small>\r\n          {this.state.isModerator == 1 &&\r\n            <div>\r\n              <Dropdown.Item href=\"/edit-database\">Управление базой</Dropdown.Item>\r\n              <Dropdown.Item href=\"/edit-actors\">Управление актерами</Dropdown.Item>\r\n              <Dropdown.Divider />\r\n            </div>}\r\n          <Dropdown.Item href=\"/watched\">Просмотренные</Dropdown.Item>\r\n          <Dropdown.Divider />\r\n          <Dropdown.Item href=\"/\" onClick={() => { localStorage.clear() }}>Выход</Dropdown.Item>\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n  }\r\n}\r\nexport default Profile;\r\n","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Login.js",["404","405"],"import React from 'react';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      loading: false,\r\n      show: false,\r\n      showreg: false,\r\n    };\r\n  }\r\n\r\n  onLogin = (values) => {\r\n    var form = new FormData();\r\n    form.append('login', values.login);\r\n    form.append('password', values.password);\r\n    fetch('http://site.alwaysdata.net/login.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    }).then(res => res.json())\r\n      .then(respons => {\r\n        if (respons.token != null) {\r\n          localStorage.setItem(\"token\", respons.token);\r\n          localStorage.setItem(\"name\", respons.name);\r\n          localStorage.setItem(\"icon\", respons.icon);\r\n          localStorage.setItem(\"style\", respons.style);\r\n          this.props.message('Успех!');\r\n          window.location.reload();\r\n        } else {\r\n          this.props.message('Не правильный логин или пароль!');\r\n        }\r\n      })\r\n  };\r\n\r\n  onRegister = (values) => {\r\n    var form = new FormData();\r\n    form.append('login', values.login);\r\n    form.append('password', values.password);\r\n    form.append('name', values.name);\r\n    fetch('http://site.alwaysdata.net/register.php', {\r\n      method: 'POST',\r\n      body: form,\r\n    })\r\n    this.props.message('Успех!');\r\n    this.setState({ showreg: false });\r\n  };\r\n\r\n  showModal = () => { this.setState({ show: true, showreg: false }); };\r\n  showModalreg = () => { this.setState({ showreg: true, show: false}); };\r\n\r\n  handleClose = () => this.setState({ show: false });\r\n  handleShow = () => this.setState({ show: true });\r\n\r\n  handleCloseReg = () => this.setState({ showreg: false });\r\n  handleShowReg = () => this.setState({ showreg: true });\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: \"static\" }}>\r\n        <button className=\"reg\" onClick={this.showModalreg}>Регистрация</button>\r\n        <Button type=\"primary\" className=\"auth\" onClick={this.showModal}><ExitToAppIcon style={{ marginRight: \"5px\", fontSize: \"15px\", marginTop: \"-5px\" }} /><span>Войти</span></Button>\r\n        <Modal show={this.state.show} onHide={this.handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Авторизация</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n            <Formik\r\n              onSubmit={this.onLogin}\r\n              initialValues={{\r\n                login: '',\r\n                password: '',\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                errors,\r\n              }) => (\r\n                <Form Validate onSubmit={handleSubmit} >\r\n                  <Form.Row>\r\n                    <Form.Group className={\"input-slot-style\"}>\r\n                      <Form.Label>Логин</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={values.login}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className={\"input-slot-style\"}>\r\n                      <Form.Label>Пароль</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n                  <Button type=\"submit\">Войти</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p style={{ textAlign: \"center\" }}>Если у вас все еще нет аккаунта, то вы можете его зарегестрировать нажав <a className=\"link-redirect\" onClick={this.showModalreg}>сюда!</a></p>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal show={this.state.showreg} onHide={this.handleCloseReg}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Регистрация</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n            <Formik\r\n              onSubmit={this.onRegister}\r\n              initialValues={{\r\n                login: '',\r\n                password: '',\r\n                name: '',\r\n              }}\r\n            >\r\n              {({\r\n                handleSubmit,\r\n                handleChange,\r\n                handleBlur,\r\n                values,\r\n                touched,\r\n                isValid,\r\n                errors,\r\n              }) => (\r\n                <Form Validate onSubmit={handleSubmit} >\r\n                  <Form.Row>\r\n                    <Form.Group className={\"input-slot-style\"}>\r\n                      <Form.Label>Логин</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={values.login}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className={\"input-slot-style\"}>\r\n                      <Form.Label>Пароль</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={values.password}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className={\"input-slot-style\"}>\r\n                      <Form.Label>Имя</Form.Label>\r\n                      <Form.Control\r\n                        required\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={values.name}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Form.Group>\r\n                  </Form.Row>\r\n\r\n                  <Button type=\"submit\">Зарегистрироваться</Button>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <p style={{ textAlign: \"center\" }}>Если у вас уже есть аккаунт, то вы можете войти нажав <a className=\"link-redirect\" onClick={this.showModal}>сюда!</a></p>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login","C:\\Users\\medve\\Desktop\\darkraven_2.0\\src\\components\\Player.js",[],{"ruleId":"406","replacedBy":"407"},{"ruleId":"408","replacedBy":"409"},{"ruleId":"410","severity":1,"message":"411","line":115,"column":36,"nodeType":"412","messageId":"413","endLine":115,"endColumn":38},{"ruleId":"414","severity":1,"message":"415","line":120,"column":119,"nodeType":"416","endLine":120,"endColumn":145},{"ruleId":"417","severity":1,"message":"418","line":122,"column":11,"nodeType":"419","endLine":122,"endColumn":50},{"ruleId":"420","severity":1,"message":"421","line":43,"column":29,"nodeType":"419","endLine":43,"endColumn":66},{"ruleId":"422","severity":1,"message":"423","line":43,"column":39,"nodeType":"424","messageId":"425","endLine":43,"endColumn":41},{"ruleId":"420","severity":1,"message":"421","line":64,"column":33,"nodeType":"419","endLine":64,"endColumn":73},{"ruleId":"426","severity":1,"message":"427","line":5,"column":5,"nodeType":"428","messageId":"429","endLine":7,"endColumn":6},{"ruleId":"420","severity":1,"message":"421","line":18,"column":37,"nodeType":"419","endLine":18,"endColumn":65},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"430","severity":1,"message":"434","line":3,"column":22,"nodeType":"432","messageId":"433","endLine":3,"endColumn":28},{"ruleId":"430","severity":1,"message":"435","line":5,"column":5,"nodeType":"432","messageId":"433","endLine":5,"endColumn":13},{"ruleId":"422","severity":1,"message":"436","line":26,"column":44,"nodeType":"424","messageId":"437","endLine":26,"endColumn":46},{"ruleId":"420","severity":1,"message":"421","line":31,"column":37,"nodeType":"419","endLine":31,"endColumn":97},{"ruleId":"420","severity":1,"message":"421","line":32,"column":37,"nodeType":"419","endLine":32,"endColumn":113},{"ruleId":"422","severity":1,"message":"423","line":31,"column":39,"nodeType":"424","messageId":"425","endLine":31,"endColumn":41},{"ruleId":"420","severity":1,"message":"421","line":44,"column":56,"nodeType":"419","endLine":44,"endColumn":96},{"ruleId":"420","severity":1,"message":"421","line":44,"column":99,"nodeType":"419","endLine":44,"endColumn":175},{"ruleId":"420","severity":1,"message":"421","line":73,"column":126,"nodeType":"419","endLine":73,"endColumn":178},{"ruleId":"438","severity":1,"message":"439","line":119,"column":121,"nodeType":"419","endLine":119,"endColumn":178},{"ruleId":"438","severity":1,"message":"439","line":187,"column":102,"nodeType":"419","endLine":187,"endColumn":156},{"ruleId":"420","severity":1,"message":"421","line":29,"column":103,"nodeType":"419","endLine":29,"endColumn":250},{"ruleId":"410","severity":1,"message":"440","line":33,"column":35,"nodeType":"412","messageId":"413","endLine":33,"endColumn":37},{"ruleId":"426","severity":1,"message":"427","line":8,"column":5,"nodeType":"428","messageId":"429","endLine":10,"endColumn":6},{"ruleId":"420","severity":1,"message":"421","line":27,"column":41,"nodeType":"419","endLine":27,"endColumn":76},{"ruleId":"410","severity":1,"message":"411","line":28,"column":50,"nodeType":"412","messageId":"413","endLine":28,"endColumn":52},{"ruleId":"430","severity":1,"message":"441","line":2,"column":48,"nodeType":"432","messageId":"433","endLine":2,"endColumn":56},{"ruleId":"430","severity":1,"message":"442","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"438","severity":1,"message":"439","line":29,"column":33,"nodeType":"419","endLine":29,"endColumn":109},{"ruleId":"420","severity":1,"message":"421","line":82,"column":37,"nodeType":"419","endLine":82,"endColumn":72},{"ruleId":"410","severity":1,"message":"411","line":83,"column":46,"nodeType":"412","messageId":"413","endLine":83,"endColumn":48},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"422","severity":1,"message":"423","line":69,"column":57,"nodeType":"424","messageId":"425","endLine":69,"endColumn":59},{"ruleId":"438","severity":1,"message":"439","line":81,"column":37,"nodeType":"419","endLine":81,"endColumn":69},{"ruleId":"420","severity":1,"message":"421","line":82,"column":37,"nodeType":"419","endLine":82,"endColumn":77},{"ruleId":"430","severity":1,"message":"443","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"430","severity":1,"message":"434","line":7,"column":20,"nodeType":"432","messageId":"433","endLine":7,"endColumn":26},{"ruleId":"430","severity":1,"message":"442","line":8,"column":3,"nodeType":"432","messageId":"433","endLine":8,"endColumn":7},{"ruleId":"420","severity":1,"message":"421","line":135,"column":9,"nodeType":"419","endLine":135,"endColumn":137},{"ruleId":"410","severity":1,"message":"411","line":136,"column":104,"nodeType":"412","messageId":"413","endLine":136,"endColumn":106},{"ruleId":"410","severity":1,"message":"411","line":139,"column":84,"nodeType":"412","messageId":"413","endLine":139,"endColumn":86},{"ruleId":"410","severity":1,"message":"411","line":161,"column":80,"nodeType":"412","messageId":"413","endLine":161,"endColumn":82},{"ruleId":"410","severity":1,"message":"411","line":185,"column":90,"nodeType":"412","messageId":"413","endLine":185,"endColumn":92},{"ruleId":"444","severity":1,"message":"445","line":191,"column":9,"nodeType":"419","endLine":191,"endColumn":149},{"ruleId":"410","severity":1,"message":"411","line":213,"column":83,"nodeType":"412","messageId":"413","endLine":213,"endColumn":85},{"ruleId":"410","severity":1,"message":"411","line":214,"column":89,"nodeType":"412","messageId":"413","endLine":214,"endColumn":91},{"ruleId":"410","severity":1,"message":"411","line":215,"column":90,"nodeType":"412","messageId":"413","endLine":215,"endColumn":92},{"ruleId":"410","severity":1,"message":"411","line":216,"column":88,"nodeType":"412","messageId":"413","endLine":216,"endColumn":90},{"ruleId":"410","severity":1,"message":"411","line":217,"column":91,"nodeType":"412","messageId":"413","endLine":217,"endColumn":93},{"ruleId":"410","severity":1,"message":"411","line":218,"column":87,"nodeType":"412","messageId":"413","endLine":218,"endColumn":89},{"ruleId":"410","severity":1,"message":"411","line":219,"column":89,"nodeType":"412","messageId":"413","endLine":219,"endColumn":91},{"ruleId":"410","severity":1,"message":"411","line":220,"column":89,"nodeType":"412","messageId":"413","endLine":220,"endColumn":91},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"422","severity":1,"message":"423","line":69,"column":57,"nodeType":"424","messageId":"425","endLine":69,"endColumn":59},{"ruleId":"438","severity":1,"message":"439","line":80,"column":33,"nodeType":"419","endLine":80,"endColumn":65},{"ruleId":"420","severity":1,"message":"421","line":81,"column":33,"nodeType":"419","endLine":81,"endColumn":72},{"ruleId":"430","severity":1,"message":"443","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"430","severity":1,"message":"446","line":3,"column":16,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"447","line":5,"column":8,"nodeType":"432","messageId":"433","endLine":5,"endColumn":17},{"ruleId":"430","severity":1,"message":"434","line":7,"column":20,"nodeType":"432","messageId":"433","endLine":7,"endColumn":26},{"ruleId":"430","severity":1,"message":"442","line":8,"column":3,"nodeType":"432","messageId":"433","endLine":8,"endColumn":7},{"ruleId":"410","severity":1,"message":"440","line":78,"column":57,"nodeType":"412","messageId":"413","endLine":78,"endColumn":59},{"ruleId":"410","severity":1,"message":"411","line":108,"column":43,"nodeType":"412","messageId":"413","endLine":108,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":118,"column":9,"nodeType":"419","endLine":118,"endColumn":136},{"ruleId":"410","severity":1,"message":"411","line":119,"column":101,"nodeType":"412","messageId":"413","endLine":119,"endColumn":103},{"ruleId":"420","severity":1,"message":"421","line":58,"column":17,"nodeType":"419","endLine":58,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":65,"column":17,"nodeType":"419","endLine":65,"endColumn":92},{"ruleId":"410","severity":1,"message":"440","line":167,"column":32,"nodeType":"412","messageId":"413","endLine":167,"endColumn":34},{"ruleId":"410","severity":1,"message":"440","line":168,"column":36,"nodeType":"412","messageId":"413","endLine":168,"endColumn":38},{"ruleId":"410","severity":1,"message":"440","line":176,"column":30,"nodeType":"412","messageId":"413","endLine":176,"endColumn":32},{"ruleId":"410","severity":1,"message":"440","line":235,"column":31,"nodeType":"412","messageId":"413","endLine":235,"endColumn":33},{"ruleId":"410","severity":1,"message":"440","line":238,"column":30,"nodeType":"412","messageId":"413","endLine":238,"endColumn":32},{"ruleId":"420","severity":1,"message":"421","line":242,"column":11,"nodeType":"419","endLine":242,"endColumn":111},{"ruleId":"420","severity":1,"message":"421","line":244,"column":11,"nodeType":"419","endLine":244,"endColumn":129},{"ruleId":"444","severity":1,"message":"445","line":270,"column":9,"nodeType":"419","endLine":270,"endColumn":137},{"ruleId":"410","severity":1,"message":"440","line":284,"column":123,"nodeType":"412","messageId":"413","endLine":284,"endColumn":125},{"ruleId":"410","severity":1,"message":"440","line":312,"column":61,"nodeType":"412","messageId":"413","endLine":312,"endColumn":63},{"ruleId":"420","severity":1,"message":"421","line":313,"column":17,"nodeType":"419","endLine":313,"endColumn":42},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"430","severity":1,"message":"448","line":2,"column":10,"nodeType":"432","messageId":"433","endLine":2,"endColumn":16},{"ruleId":"430","severity":1,"message":"442","line":5,"column":5,"nodeType":"432","messageId":"433","endLine":5,"endColumn":9},{"ruleId":"430","severity":1,"message":"449","line":8,"column":8,"nodeType":"432","messageId":"433","endLine":8,"endColumn":16},{"ruleId":"430","severity":1,"message":"450","line":9,"column":8,"nodeType":"432","messageId":"433","endLine":9,"endColumn":18},{"ruleId":"422","severity":1,"message":"423","line":55,"column":57,"nodeType":"424","messageId":"425","endLine":55,"endColumn":59},{"ruleId":"420","severity":1,"message":"421","line":59,"column":33,"nodeType":"419","endLine":59,"endColumn":72},{"ruleId":"430","severity":1,"message":"434","line":5,"column":20,"nodeType":"432","messageId":"433","endLine":5,"endColumn":26},{"ruleId":"430","severity":1,"message":"442","line":6,"column":3,"nodeType":"432","messageId":"433","endLine":6,"endColumn":7},{"ruleId":"420","severity":1,"message":"421","line":69,"column":9,"nodeType":"419","endLine":69,"endColumn":103},{"ruleId":"422","severity":1,"message":"423","line":77,"column":33,"nodeType":"424","messageId":"425","endLine":77,"endColumn":35},{"ruleId":"420","severity":1,"message":"421","line":91,"column":19,"nodeType":"419","endLine":91,"endColumn":59},{"ruleId":"430","severity":1,"message":"442","line":6,"column":5,"nodeType":"432","messageId":"433","endLine":6,"endColumn":9},{"ruleId":"422","severity":1,"message":"423","line":63,"column":43,"nodeType":"424","messageId":"425","endLine":63,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":75,"column":33,"nodeType":"419","endLine":75,"endColumn":73},{"ruleId":"406","replacedBy":"451"},{"ruleId":"408","replacedBy":"452"},{"ruleId":"410","severity":1,"message":"411","line":116,"column":36,"nodeType":"412","messageId":"413","endLine":116,"endColumn":38},{"ruleId":"414","severity":1,"message":"415","line":121,"column":119,"nodeType":"416","endLine":121,"endColumn":145},{"ruleId":"417","severity":1,"message":"418","line":123,"column":11,"nodeType":"419","endLine":123,"endColumn":50},{"ruleId":"426","severity":1,"message":"427","line":5,"column":5,"nodeType":"428","messageId":"429","endLine":7,"endColumn":6},{"ruleId":"420","severity":1,"message":"421","line":18,"column":37,"nodeType":"419","endLine":18,"endColumn":116},{"ruleId":"422","severity":1,"message":"423","line":43,"column":39,"nodeType":"424","messageId":"425","endLine":43,"endColumn":41},{"ruleId":"420","severity":1,"message":"421","line":64,"column":33,"nodeType":"419","endLine":64,"endColumn":73},{"ruleId":"420","severity":1,"message":"421","line":43,"column":29,"nodeType":"419","endLine":43,"endColumn":66},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"422","severity":1,"message":"423","line":69,"column":57,"nodeType":"424","messageId":"425","endLine":69,"endColumn":59},{"ruleId":"438","severity":1,"message":"439","line":81,"column":37,"nodeType":"419","endLine":81,"endColumn":69},{"ruleId":"420","severity":1,"message":"421","line":82,"column":37,"nodeType":"419","endLine":82,"endColumn":77},{"ruleId":"420","severity":1,"message":"421","line":56,"column":17,"nodeType":"419","endLine":56,"endColumn":42},{"ruleId":"420","severity":1,"message":"421","line":63,"column":17,"nodeType":"419","endLine":63,"endColumn":92},{"ruleId":"410","severity":1,"message":"440","line":159,"column":32,"nodeType":"412","messageId":"413","endLine":159,"endColumn":34},{"ruleId":"410","severity":1,"message":"440","line":160,"column":36,"nodeType":"412","messageId":"413","endLine":160,"endColumn":38},{"ruleId":"410","severity":1,"message":"440","line":168,"column":30,"nodeType":"412","messageId":"413","endLine":168,"endColumn":32},{"ruleId":"410","severity":1,"message":"440","line":226,"column":31,"nodeType":"412","messageId":"413","endLine":226,"endColumn":33},{"ruleId":"410","severity":1,"message":"440","line":229,"column":30,"nodeType":"412","messageId":"413","endLine":229,"endColumn":32},{"ruleId":"420","severity":1,"message":"421","line":233,"column":11,"nodeType":"419","endLine":233,"endColumn":111},{"ruleId":"420","severity":1,"message":"421","line":235,"column":11,"nodeType":"419","endLine":235,"endColumn":129},{"ruleId":"444","severity":1,"message":"445","line":261,"column":9,"nodeType":"419","endLine":261,"endColumn":137},{"ruleId":"410","severity":1,"message":"440","line":275,"column":123,"nodeType":"412","messageId":"413","endLine":275,"endColumn":125},{"ruleId":"410","severity":1,"message":"440","line":303,"column":61,"nodeType":"412","messageId":"413","endLine":303,"endColumn":63},{"ruleId":"420","severity":1,"message":"421","line":304,"column":17,"nodeType":"419","endLine":304,"endColumn":42},{"ruleId":"422","severity":1,"message":"423","line":31,"column":39,"nodeType":"424","messageId":"425","endLine":31,"endColumn":41},{"ruleId":"420","severity":1,"message":"421","line":44,"column":56,"nodeType":"419","endLine":44,"endColumn":96},{"ruleId":"420","severity":1,"message":"421","line":44,"column":99,"nodeType":"419","endLine":44,"endColumn":175},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"430","severity":1,"message":"434","line":3,"column":22,"nodeType":"432","messageId":"433","endLine":3,"endColumn":28},{"ruleId":"430","severity":1,"message":"435","line":5,"column":5,"nodeType":"432","messageId":"433","endLine":5,"endColumn":13},{"ruleId":"422","severity":1,"message":"436","line":26,"column":44,"nodeType":"424","messageId":"437","endLine":26,"endColumn":46},{"ruleId":"420","severity":1,"message":"421","line":31,"column":37,"nodeType":"419","endLine":31,"endColumn":97},{"ruleId":"420","severity":1,"message":"421","line":32,"column":37,"nodeType":"419","endLine":32,"endColumn":113},{"ruleId":"420","severity":1,"message":"421","line":73,"column":126,"nodeType":"419","endLine":73,"endColumn":178},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"422","severity":1,"message":"423","line":69,"column":57,"nodeType":"424","messageId":"425","endLine":69,"endColumn":59},{"ruleId":"438","severity":1,"message":"439","line":80,"column":33,"nodeType":"419","endLine":80,"endColumn":65},{"ruleId":"420","severity":1,"message":"421","line":81,"column":33,"nodeType":"419","endLine":81,"endColumn":72},{"ruleId":"430","severity":1,"message":"431","line":1,"column":17,"nodeType":"432","messageId":"433","endLine":1,"endColumn":25},{"ruleId":"430","severity":1,"message":"448","line":2,"column":10,"nodeType":"432","messageId":"433","endLine":2,"endColumn":16},{"ruleId":"430","severity":1,"message":"442","line":5,"column":5,"nodeType":"432","messageId":"433","endLine":5,"endColumn":9},{"ruleId":"430","severity":1,"message":"449","line":8,"column":8,"nodeType":"432","messageId":"433","endLine":8,"endColumn":16},{"ruleId":"430","severity":1,"message":"450","line":9,"column":8,"nodeType":"432","messageId":"433","endLine":9,"endColumn":18},{"ruleId":"422","severity":1,"message":"423","line":55,"column":57,"nodeType":"424","messageId":"425","endLine":55,"endColumn":59},{"ruleId":"420","severity":1,"message":"421","line":59,"column":33,"nodeType":"419","endLine":59,"endColumn":72},{"ruleId":"430","severity":1,"message":"442","line":6,"column":5,"nodeType":"432","messageId":"433","endLine":6,"endColumn":9},{"ruleId":"422","severity":1,"message":"423","line":63,"column":43,"nodeType":"424","messageId":"425","endLine":63,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":75,"column":33,"nodeType":"419","endLine":75,"endColumn":73},{"ruleId":"430","severity":1,"message":"434","line":5,"column":20,"nodeType":"432","messageId":"433","endLine":5,"endColumn":26},{"ruleId":"430","severity":1,"message":"442","line":6,"column":3,"nodeType":"432","messageId":"433","endLine":6,"endColumn":7},{"ruleId":"420","severity":1,"message":"421","line":69,"column":9,"nodeType":"419","endLine":69,"endColumn":103},{"ruleId":"422","severity":1,"message":"423","line":77,"column":33,"nodeType":"424","messageId":"425","endLine":77,"endColumn":35},{"ruleId":"420","severity":1,"message":"421","line":91,"column":19,"nodeType":"419","endLine":91,"endColumn":59},{"ruleId":"430","severity":1,"message":"443","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"430","severity":1,"message":"446","line":3,"column":16,"nodeType":"432","messageId":"433","endLine":3,"endColumn":25},{"ruleId":"430","severity":1,"message":"447","line":5,"column":8,"nodeType":"432","messageId":"433","endLine":5,"endColumn":17},{"ruleId":"430","severity":1,"message":"434","line":7,"column":20,"nodeType":"432","messageId":"433","endLine":7,"endColumn":26},{"ruleId":"430","severity":1,"message":"442","line":8,"column":3,"nodeType":"432","messageId":"433","endLine":8,"endColumn":7},{"ruleId":"410","severity":1,"message":"440","line":78,"column":57,"nodeType":"412","messageId":"413","endLine":78,"endColumn":59},{"ruleId":"410","severity":1,"message":"411","line":108,"column":43,"nodeType":"412","messageId":"413","endLine":108,"endColumn":45},{"ruleId":"420","severity":1,"message":"421","line":118,"column":9,"nodeType":"419","endLine":118,"endColumn":136},{"ruleId":"410","severity":1,"message":"411","line":119,"column":101,"nodeType":"412","messageId":"413","endLine":119,"endColumn":103},{"ruleId":"430","severity":1,"message":"443","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"430","severity":1,"message":"434","line":7,"column":20,"nodeType":"432","messageId":"433","endLine":7,"endColumn":26},{"ruleId":"430","severity":1,"message":"442","line":8,"column":3,"nodeType":"432","messageId":"433","endLine":8,"endColumn":7},{"ruleId":"420","severity":1,"message":"421","line":135,"column":9,"nodeType":"419","endLine":135,"endColumn":137},{"ruleId":"410","severity":1,"message":"411","line":136,"column":104,"nodeType":"412","messageId":"413","endLine":136,"endColumn":106},{"ruleId":"410","severity":1,"message":"411","line":139,"column":84,"nodeType":"412","messageId":"413","endLine":139,"endColumn":86},{"ruleId":"410","severity":1,"message":"411","line":161,"column":80,"nodeType":"412","messageId":"413","endLine":161,"endColumn":82},{"ruleId":"410","severity":1,"message":"411","line":185,"column":90,"nodeType":"412","messageId":"413","endLine":185,"endColumn":92},{"ruleId":"444","severity":1,"message":"445","line":191,"column":9,"nodeType":"419","endLine":191,"endColumn":149},{"ruleId":"410","severity":1,"message":"411","line":213,"column":83,"nodeType":"412","messageId":"413","endLine":213,"endColumn":85},{"ruleId":"410","severity":1,"message":"411","line":214,"column":89,"nodeType":"412","messageId":"413","endLine":214,"endColumn":91},{"ruleId":"410","severity":1,"message":"411","line":215,"column":90,"nodeType":"412","messageId":"413","endLine":215,"endColumn":92},{"ruleId":"410","severity":1,"message":"411","line":216,"column":88,"nodeType":"412","messageId":"413","endLine":216,"endColumn":90},{"ruleId":"410","severity":1,"message":"411","line":217,"column":91,"nodeType":"412","messageId":"413","endLine":217,"endColumn":93},{"ruleId":"410","severity":1,"message":"411","line":218,"column":87,"nodeType":"412","messageId":"413","endLine":218,"endColumn":89},{"ruleId":"410","severity":1,"message":"411","line":219,"column":89,"nodeType":"412","messageId":"413","endLine":219,"endColumn":91},{"ruleId":"410","severity":1,"message":"411","line":220,"column":89,"nodeType":"412","messageId":"413","endLine":220,"endColumn":91},{"ruleId":"430","severity":1,"message":"441","line":2,"column":48,"nodeType":"432","messageId":"433","endLine":2,"endColumn":56},{"ruleId":"430","severity":1,"message":"442","line":3,"column":10,"nodeType":"432","messageId":"433","endLine":3,"endColumn":14},{"ruleId":"438","severity":1,"message":"439","line":29,"column":33,"nodeType":"419","endLine":29,"endColumn":109},{"ruleId":"420","severity":1,"message":"421","line":82,"column":37,"nodeType":"419","endLine":82,"endColumn":72},{"ruleId":"410","severity":1,"message":"411","line":83,"column":46,"nodeType":"412","messageId":"413","endLine":83,"endColumn":48},{"ruleId":"406","replacedBy":"453"},{"ruleId":"408","replacedBy":"454"},{"ruleId":"426","severity":1,"message":"427","line":8,"column":5,"nodeType":"428","messageId":"429","endLine":10,"endColumn":6},{"ruleId":"420","severity":1,"message":"421","line":27,"column":41,"nodeType":"419","endLine":27,"endColumn":76},{"ruleId":"410","severity":1,"message":"411","line":28,"column":50,"nodeType":"412","messageId":"413","endLine":28,"endColumn":52},{"ruleId":"420","severity":1,"message":"421","line":29,"column":103,"nodeType":"419","endLine":29,"endColumn":250},{"ruleId":"410","severity":1,"message":"440","line":33,"column":35,"nodeType":"412","messageId":"413","endLine":33,"endColumn":37},{"ruleId":"438","severity":1,"message":"439","line":119,"column":121,"nodeType":"419","endLine":119,"endColumn":178},{"ruleId":"438","severity":1,"message":"439","line":187,"column":102,"nodeType":"419","endLine":187,"endColumn":156},"no-native-reassign",["455"],"no-negated-in-lhs",["456"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react/jsx-pascal-case","Imported JSX component Left_Bar must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Redirect' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '===' and instead saw '=='.","'Dropdown' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Accordion' is defined but never used.","'CloseIcon' is defined but never used.","'Button' is defined but never used.","'EditIcon' is defined but never used.","'DeleteIcon' is defined but never used.",["455"],["456"],["455"],["456"],"no-global-assign","no-unsafe-negation"]