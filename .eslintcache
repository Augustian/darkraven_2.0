[{"C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\index.js":"1","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\App.js":"2","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\reportWebVitals.js":"3","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Posts.js":"4","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Films.js":"5","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\ViderPlayer.js":"6","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Header.js":"7","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Top.js":"8","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Left_Bar.js":"9","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Profile.js":"10","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Login.js":"11","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Searth.js":"12","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Head.js":"13","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\HeaderMobile.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":7049,"mtime":1607950008971,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":744,"mtime":1607771396793,"results":"19","hashOfConfig":"16"},{"size":4299,"mtime":1607942151498,"results":"20","hashOfConfig":"16"},{"size":3873,"mtime":1607957679676,"results":"21","hashOfConfig":"16"},{"size":3626,"mtime":1607956095266,"results":"22","hashOfConfig":"16"},{"size":3836,"mtime":1607957181766,"results":"23","hashOfConfig":"16"},{"size":819,"mtime":1607771233689,"results":"24","hashOfConfig":"16"},{"size":812,"mtime":1607864958257,"results":"25","hashOfConfig":"16"},{"size":8637,"mtime":1607949934450,"results":"26","hashOfConfig":"16"},{"size":4426,"mtime":1607944918362,"results":"27","hashOfConfig":"16"},{"size":2151,"mtime":1607954218687,"results":"28","hashOfConfig":"16"},{"size":6695,"mtime":1607954163809,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1tinolh",{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"32"},"C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\index.js",[],["69","70"],"C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\App.js",["71","72","73"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/App.css';\nimport Posts from './components/Posts'\nimport Left_Bar from './components/Left_Bar';\nimport Films from './components/Films';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\nimport VideoPlayer from './components/ViderPlayer';\nimport Top from './components/Top';\nimport Searth from './components/Searth'\nimport Head from './components/Head';\nimport { Toast } from 'react-bootstrap';\n\nclass App extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      show: false,\n      message: '',\n      BookMarks: [],\n      Posts: [],\n      SliderPost: [],\n      VideoContent: [],\n      Recomend: [],\n      PostValue: 0,\n      VideoValuePage: 0,\n      pageSize: 5,\n      search: \"\",\n      Type: 0,\n    };\n\n    this.GetData = this.GetData.bind(this);\n    this.RenderPost = this.RenderPost.bind(this);\n    this.Search = this.Search.bind(this);\n    this.onMessage = this.onMessage.bind(this);\n  }\n\n  onMessage(mess) {\n    this.setState({ show: true, message: mess });\n  }\n\n  componentDidMount() {\n    this.GetData(0);\n    this.GetSave();\n    this.GetSliderData();\n    this.GetRecomendData();\n  }\n\n  GetData(list) {\n    var form = new FormData();\n    form.append('list', list);\n    fetch('http://site.alwaysdata.net/posts.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ Posts: respons.posts, PostValue: respons.postsvalue });\n      })\n  }\n\n  GetSliderData() {\n    fetch('http://site.alwaysdata.net/headslider.php', {\n      method: 'POST',\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ SliderPost: respons.posts });\n        console.log(\"SliderData: \", respons.posts);\n      })\n  }\n\n  GetRecomendData() {\n    fetch('http://site.alwaysdata.net/recomend.php', {\n      method: 'POST',\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ Recomend: respons.posts });\n      })\n  }\n\n  SetSave(title, idvideo) {\n    var form = new FormData();\n    form.append('title', title);\n    form.append('idvideo', idvideo);\n    form.append('table', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/save.php', {\n      method: 'POST',\n      body: form,\n    })\n  }\n\n  GetSave() {\n    var form = new FormData();\n    form.append('table', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/write.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ BookMarks: respons.marks });\n        console.log(\"Save: \", respons.marks);\n      })\n  }\n\n  RemoveSaveBookMark(id) {\n    var form = new FormData();\n    form.append('id', id);\n    form.append('table', localStorage.getItem(\"token\"));\n    fetch('http://site.alwaysdata.net/remove.php', {\n      method: 'POST',\n      body: form,\n    })\n  }\n\n  RenderPost(type, Page, pageSize) {\n    var form = new FormData();\n    form.append('type', type);\n    form.append('page', Page);\n    this.setState({ pageSize: pageSize });\n    form.append('pagesize', pageSize);\n\n    fetch(\"http://site.alwaysdata.net/datavideo.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ VideoContent: respons, VideoValuePage: respons.length });\n        console.log(\"Video: \", this.state.VideoContent);\n      })\n\n    this.setState({ Type: type });\n  }\n\n  Search(type, Page, pageSize, result) {\n    this.setState({ pageSize: pageSize, search: result, Type: type });\n    var form = new FormData();\n    form.append('type', type);\n    form.append('page', Page);\n    form.append('pagesize', pageSize);\n    form.append('result', result);\n\n    fetch(\"http://site.alwaysdata.net/searth.php\", {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ VideoContent: respons, VideoValuePage: respons.length });\n        console.log(\"Searth: \", this.state.VideoContent);\n      })\n  }\n\n  render() {\n    let searth = this.state.search != '' ? <Redirect to={\"/searth\"} /> : null;\n\n    return (\n      <Router>\n        <div className={\"main-conteiner\"}>\n          <Head onMessage={this.onMessage} SliderPost={this.state.SliderPost} Search={this.Search} Type={this.state.Type} pageSize={this.state.pageSize} BookMarks={this.state.BookMarks} RemoveSaveBookMark={this.RemoveSaveBookMark} onMessage={this.onMessage} />\n          <div className=\"option\"></div>\n          <Left_Bar data={this.state.Recomend} />\n          {searth}\n          <Switch>\n\n            <Route exact path=\"/\">\n              <Posts Content={this.state.Posts} Value={this.state.PostValue} Func={this.GetData} />\n            </Route>\n            <Route exact path=\"/top\">\n              <Top />\n            </Route>\n            <Route exact path=\"/films\">\n              <Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"3\" RenP={this.RenderPost} message={this.onMessage} />\n            </Route>\n            <Route exact path=\"/serials\">\n              <Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"4\" RenP={this.RenderPost} message={this.onMessage} />\n            </Route>\n            <Route exact path=\"/doramy\">\n              <Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"5\" RenP={this.RenderPost} message={this.onMessage} />\n            </Route>\n            <Route exact path=\"/anime\">\n              <Films Value={this.state.VideoValuePage} pageSize={this.state.pageSize} Func={this.RenderPost} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"6\" RenP={this.RenderPost} message={this.onMessage} />\n            </Route>\n\n            <Route exact path=\"/video_player\">\n              <VideoPlayer />\n            </Route>\n\n            <Route path=\"/searth\">\n              <Searth message={this.onMessage} search={this.state.search} Value={this.state.VideoValuePage} sear={this.Search} SetSave={this.SetSave} ContentVideo={this.state.VideoContent.video} type=\"7\" />\n            </Route>\n\n            <Route render={() => <h1 style={{ textAlign: \"center\", color: \"#fff\" }}>Такой страницы нема)</h1>} />\n          </Switch>\n\n          <div className={\"message\"}>\n            <Toast onClose={() => this.setState({ show: false })} show={this.state.show} delay={3000} autohide>\n              <Toast.Header>\n                <strong className=\"mr-auto\">Уведомление!</strong>\n              </Toast.Header>\n              <Toast.Body>{this.state.message}</Toast.Body>\n            </Toast>\n          </div>\n        </div>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\reportWebVitals.js",[],"C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Posts.js",["74"],"import React from 'react';\n\nclass Posts extends React.Component {\n\n      render(){\n        return(\n            <div className=\"central\">\n                {this.props.Content.map((post, key) =>\n                <div key={key} className=\"post-slot\">\n                    <h1>{post.title}</h1>\n                    {post.photo1 &&\n                        <img src={post.photo1} width=\"40%\"/>\n                    }\n                    <p>{post.discription}</p>\n                </div>\n                )}\n            {/* <Pagination className=\"pagination\" defaultCurrent={1} total={this.props.Value} defaultPageSize={5} onChange={page => {this.props.Func(page-1); window.scrollTo( 0, 0);}}/> */}\n          </div>\n        );\n    }\n}\n\nexport default Posts;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Films.js",["75","76","77","78"],"import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Films extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            referrer: null,\n            pageSize: 5,\n            page: 1,\n        };\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.RenP(this.props.type, 0, this.props.pageSize)\n    }\n    onShowSizeChange(current, pagesize) {\n        console.log(current, pagesize);\n        this.setState({ pageSize: pagesize });\n    }\n\n    render() {\n        const data = this.props.ContentVideo;\n        console.log(data);\n        console.log(this.state.pageSize);\n        if (!data) { return <div>Загрузка данных....</div> }\n\n        const { referrer } = this.state;\n        if (referrer) return <Redirect to={referrer} />;\n\n        return (\n            <Router>\n                <div className=\"central\">\n                    {data.map((post, key) => {\n                        if (post.title != null) {\n                            return (\n                                <div key={key} className=\"post-slot\">\n\n                                    <Button className=\"ForeverVideo\" onClick={() => {\n                                        if (localStorage.getItem(\"name\")) {\n                                            this.props.SetSave(post.title, post.id_video);\n                                            this.props.message('Добавлено!');\n                                        } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                                    }}>\n                                        <FavoriteIcon />\n                                    </Button>\n\n                                    {post.poster != null ? <img src={post.poster} height=\"200px\" /> : <img src={require('../images/noposter.png')} height=\"200px\" />}\n                                    <Button className=\"post-slot-button\" variant=\"link\" onClick={() => { this.setState({ referrer: \"/video_player?id=\" + post.id_video }) }}><Link to={\"/video_player?id=\" + post.id_video}>{post.title}</Link></Button>\n                                    {post.year != null ?\n                                        <div className=\"info_panel\">\n                                            <p>Год: {post.year}</p>\n                                            <p>Страна: {post.countries}</p>\n                                            <p>Жанры: {post.genres}</p>\n                                            <p>Продолжительность: {post.duration} мин.</p>\n                                            <br />\n                                            <p>{post.discription != null && post.discription}</p>\n                                            <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                                            <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                                            <p className=\"quality\">{post.quality}</p>\n                                        </div>\n                                        :\n                                        <p style={{ color: \"white\" }}>Нет информации!</p>}\n                                </div>\n                            )\n                        }\n                    })}\n\n                    <Pagination\n                        className=\"pagination\"\n                        count={Math.ceil(this.props.Value / 5)}\n                        page={this.state.page}\n                        siblingCount={3}\n                        boundaryCount={2}\n                        onChange={(event, page) => {\n                            this.props.Func(this.props.type, page - 1, this.state.pageSize);\n                            window.scrollTo(0, 0);\n                            this.setState({ page: page });\n                        }} />\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Films;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\ViderPlayer.js",["79","80","81"],"import React from 'react';\n\nclass VideoPlayer extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      data: null,\n    };\n  }\n\n  GetData(list) {\n    fetch('https://kodikapi.com/search?token=9f97924b4aae53e816f330c113b08294&with_material_data=true&id=' + list, {\n      method: 'POST',\n    }).then(res => res.json())\n      .then(respons => {\n        this.setState({ data: respons.results[0] });\n        console.log(\"Video: \", respons.results[0]);\n      })\n  }\n\n  render() {\n    let params = (new URL(document.location)).searchParams;\n    let data = this.state.data;\n    if (!this.state.data) {\n      this.GetData(params.get(\"id\"));\n      return <div>Загрузка данных....</div>\n    }\n    return (\n      <div className={\"central videoview\"}>\n        <p className=\"post-slot-button post-slot-buttonview\">{data.title}</p>\n        <p className=\"original-title\">{data.title_orig}</p>\n        {data.material_data != null\n          ?\n          <img style={{ float: \"left\", padding: \"3px\" }} src={data.material_data.poster_url} height=\"200px\" />\n          :\n          <img style={{ float: \"left\", padding: \"3px\" }} src={require('../images/noposter.png')} height=\"200px\" />\n        }\n        {data.material_data != null &&\n          <div className=\"info-videoview\">\n            <p>Год: {data.year}</p>\n            <p>Страна: {data.material_data.countries != null && data.material_data.countries.map((list) => <p style={{ display: \"initial\" }}>{list} </p>)}</p>\n            <p>Жанры: {data.material_data.anime_genres == null ? data.material_data.genres.map((list) => <p style={{ display: \"initial\" }}>{list} </p>) : data.material_data.anime_genres.map((list) => <p style={{ display: \"initial\" }}>{list} </p>)}</p>\n            <p>Продолжительность: {data.material_data.duration} мин.</p>\n            <br />\n            <p>{data.material_data.description != null && data.material_data.description}</p>\n            <p className={\"rating-info\"} style={{ top: 0 }}>КиноПоиск: {data.material_data.kinopoisk_rating}</p>\n            <p className={\"rating-info\"} style={{ top: \"15px\" }}>Imdb: {data.material_data.imdb_rating}</p>\n            <p className={\"rating-info\"} style={{ top: \"30px\", color: \"green\" }}>{data.quality}</p>\n          </div>\n        }\n        <br />\n        <iframe src={data.link} width=\"100%\" height=\"350\" frameborder=\"0\" allowfullscreen allow=\"autoplay *; fullscreen *\"></iframe>\n\n        <div className={\"dop-info\"}>\n          <ul>Актеры: {data.material_data.actors != null &&\n            data.material_data.actors.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Режиссеры: {data.material_data.directors != null &&\n            data.material_data.directors.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Продюссеры: {data.material_data.producers != null &&\n            data.material_data.producers.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Сценаристы: {data.material_data.writers != null &&\n            data.material_data.writers.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Композиторы: {data.material_data.composers != null &&\n            data.material_data.composers.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Монтажеры: {data.material_data.editors != null &&\n            data.material_data.editors.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Художники: {data.material_data.designers != null &&\n            data.material_data.designers.map((list) => <li>{list}</li>)}\n          </ul>\n          <ul>Операторы: {data.material_data.operators != null &&\n            data.material_data.operators.map((list) => <li>{list}</li>)}\n          </ul>\n        </div>\n      </div>\n    );\n  };\n}\n\nexport default VideoPlayer;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Header.js",[],"C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Top.js",["82","83","84","85","86","87"],"import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport { Table } from 'react-bootstrap';\n\nclass Top extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            TopElements: [],\n        };\n    }\n    componentDidMount() {\n        this.GetTop();\n    }\n\n    GetTop() {\n        fetch('https://kodikapi.com/list?token=9f97924b4aae53e816f330c113b08294&with_material_data=true&translation_type=voice&year=2020&sort=kinopoisk_rating&limit=50', {\n            method: 'POST',\n        }).then(res => res.json())\n            .then(respons => {\n                respons.results.map(result => {\n                    this.setState(state => {\n                        return {\n                            TopElements: [...state.TopElements, {\n                                poster: result.material_data ?\n                                    <img src={result.material_data.poster_url} height=\"100px\" /> :\n                                    <img src={require('../images/noposter.png')} height=\"100px\" />,\n                                title: <Link to={\"/video_player?id=\" + result.id}>{result.title}</Link>,\n                                link: result.link,\n                                year: result.year,\n                                quality: result.quality,\n                                genres: result.material_data ?\n                                    result.material_data.genres : null,\n                                kinopoisk_rating: result.material_data ?\n                                    result.material_data.kinopoisk_rating :\n                                    <p>Без оценки</p>\n                            }],\n                        }\n                    })\n                })\n                console.log(\"Top: \", this.state.TopElements);\n                console.log(\"Full: \", respons);\n            })\n    }\n\n    render() {\n\n        return (\n            <div className=\"central\">\n\n                <Table striped bordered hover variant=\"dark\" responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Постер</th>\n                            <th>Название</th>\n                            <th>Год</th>\n                            <th>Качество</th>\n                            <th>Жанры</th>\n                            <th>Рейтинг</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.TopElements.map((post, key) =>\n                            <tr key={key}>\n                                <td>{key + 1}</td>\n                                <td>{post.poster}</td>\n                                <td>{post.title}</td>\n                                <td>{post.year}</td>\n                                <td>{post.quality}</td>\n                                <td>{post.genres.map((genres, key) => {\n                                    if (genres != null) {\n                                        return (\n                                            <div key={key} className=\"Tag\">\n                                                {genres}\n                                            </div>);\n                                    } else {\n                                        return (<p key={key}>Без распределений по жанрам</p>);\n                                    }\n                                })}\n                                </td>\n                                <td>{post.kinopoisk_rating}</td>\n                            </tr>\n                        )}\n                    </tbody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default Top;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Left_Bar.js",["88","89","90","91"],"import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect \n  } from \"react-router-dom\";\n\nclass Left_Bar extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    render(){\n        return(\n        <div className=\"left-bar\">\n            <div className=\"recommend\">\n                <h3>Рекомендуемые</h3>\n                <div>\n                    {this.props.data.map((recomend, key) => \n                        <div className=\"slot-recommend\">\n                            <img src={recomend.photo}/>\n                            <p><Link to={\"/video_player?id=\"+recomend.idvideo}>{recomend.title}</Link></p>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\nexport default Left_Bar;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Profile.js",[],"C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Login.js",["92","93"],"import React from 'react';\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { Formik } from 'formik';\n\nclass Login extends React.Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      loading: false,\n      show: false,\n      showreg: false,\n    };\n  }\n\n  onLogin = (values) => {\n    console.log('Success:', values);\n\n    var form = new FormData();\n    form.append('login', values.login);\n    form.append('password', values.password);\n    fetch('http://site.alwaysdata.net/login.php', {\n      method: 'POST',\n      body: form,\n    }).then(res => res.json())\n      .then(respons => {\n        if (respons.token != null) {\n          console.log(respons);\n          localStorage.setItem(\"token\", respons.token);\n          localStorage.setItem(\"name\", respons.name);\n          localStorage.setItem(\"icon\", respons.icon);\n          this.props.message('Успех!');\n          window.location.reload();\n        } else {\n          this.props.message('Не правильный логин или пароль!');\n        }\n      })\n  };\n\n  onRegister = (values) => {\n    console.log('Success:', values);\n\n    var form = new FormData();\n    form.append('login', values.login);\n    form.append('password', values.password);\n    form.append('name', values.name);\n    fetch('http://site.alwaysdata.net/register.php', {\n      method: 'POST',\n      body: form,\n    })\n    this.props.message('Успех!');\n    this.setState({ showreg: false });\n  };\n\n  showModal = () => { this.setState({ show: true, showreg: false }); };\n  showModalreg = () => { this.setState({ showreg: true, show: false}); };\n\n  handleClose = () => this.setState({ show: false });\n  handleShow = () => this.setState({ show: true });\n\n  handleCloseReg = () => this.setState({ showreg: false });\n  handleShowReg = () => this.setState({ showreg: true });\n\n  render() {\n    return (\n      <div style={{ position: \"static\" }}>\n        <button className=\"reg\" onClick={this.showModalreg}>Регистрация</button>\n        <Button type=\"primary\" className=\"auth\" onClick={this.showModal}><ExitToAppIcon style={{ marginRight: \"5px\", fontSize: \"15px\", marginTop: \"-5px\" }} /><span>Войти</span></Button>\n\n        <Modal show={this.state.show} onHide={this.handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Авторизация</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Formik\n              onSubmit={this.onLogin}\n              initialValues={{\n                login: '',\n                password: '',\n              }}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n                <Form Validate onSubmit={handleSubmit} >\n                  <Form.Row>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Логин</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"login\"\n                        value={values.login}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Пароль</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Button type=\"submit\">Войти</Button>\n                </Form>\n              )}\n            </Formik>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <p style={{ textAlign: \"center\" }}>Если у вас все еще нет аккаунта, то вы можете его зарегестрировать нажав <a className=\"link-redirect\" onClick={this.showModalreg}>сюда!</a></p>\n          </Modal.Footer>\n        </Modal>\n\n        <Modal show={this.state.showreg} onHide={this.handleCloseReg}>\n          <Modal.Header closeButton>\n            <Modal.Title>Регистрация</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Formik\n              onSubmit={this.onRegister}\n              initialValues={{\n                login: '',\n                password: '',\n                name: '',\n              }}\n            >\n              {({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                isValid,\n                errors,\n              }) => (\n                <Form Validate onSubmit={handleSubmit} >\n                  <Form.Row>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Логин</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"login\"\n                        value={values.login}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Пароль</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"password\"\n                        name=\"password\"\n                        value={values.password}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                    <Form.Group className={\"input-slot-style\"}>\n                      <Form.Label>Имя</Form.Label>\n                      <Form.Control\n                        required\n                        type=\"text\"\n                        name=\"name\"\n                        value={values.name}\n                        onChange={handleChange}\n                      />\n                    </Form.Group>\n                  </Form.Row>\n\n                  <Button type=\"submit\">Зарегистрироваться</Button>\n                </Form>\n              )}\n            </Formik>\n\n          </Modal.Body>\n          <Modal.Footer>\n            <p style={{ textAlign: \"center\" }}>Если у вас уже есть аккаунт, то вы можете войти нажав <a className=\"link-redirect\" onClick={this.showModal}>сюда!</a></p>\n          </Modal.Footer>\n        </Modal>\n\n        {/*\n\n              <Modal\n                title=\"Регистрация\"\n                visible={this.state.visible2}\n                onOk={this.handleOk}\n                onCancel={this.handleCancel}\n                footer={[]}\n              >\n\n                <Form\n                  {...this.layout}\n                  name=\"Логин\"\n                  initialValues={{\n                    remember: true,\n                  }}\n                  onFinish={this.onRegister}\n                  onFinishFailed={this.onFinishFailed}\n                >\n                  <Form.Item label=\"Логин\" name=\"username\"\n                    rules={[{\n                        required: true,\n                        message: 'Поле обязательное!',\n                      },]}>\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item label=\"Пароль\" name=\"password\"\n                    rules={[{\n                        required: true,\n                        message: 'Поле обязательное!',\n                      },]}>\n                    <Input.Password />\n                  </Form.Item>\n\n                  <Form.Item label=\"Имя\" name=\"name\"\n                    rules={[{\n                        required: true,\n                        message: 'Поле обязательное!',\n                      },]}>\n                    <Input />\n                  </Form.Item>\n\n                  <Form.Item {...this.tailLayout}>\n\n                    <Button htmlType=\"button\" onClick={this.handleCancel}>Назад</Button>\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loading} onClick={this.handleOk}>Отправить</Button>\n\n                  </Form.Item>\n                </Form>\n\n                    </Modal>*/}\n      </div>\n    );\n  }\n}\n\nexport default Login","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Searth.js",["94","95","96"],"import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {\n    BrowserRouter as Router,\n    Link,\n    Redirect\n} from \"react-router-dom\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport Pagination from '@material-ui/lab/Pagination';\n\nclass Films extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            referrer: null,\n            pageSize: 5,\n            page: 1,\n        };\n        this.onShowSizeChange = this.onShowSizeChange.bind(this);\n    }\n\n    onShowSizeChange(current, pagesize) {\n        console.log(current, pagesize);\n        this.setState({ pageSize: pagesize });\n    }\n\n    render() {\n        const data = this.props.ContentVideo;\n        //console.log(data);\n        //console.log(this.state.pageSize);\n        if (!data) {\n            return <div className=\"central\">\n                <h2 style={{ color: \"white\" }}>Поиск по сайту: нет результатов!</h2>\n            </div>\n        }\n\n        const { referrer } = this.state;\n        if (referrer) return <Redirect to={referrer} />;\n\n        return (\n            <Router>\n                <div className=\"central\">\n                    <h2 style={{ color: \"white\" }}>Поиск по сайту:</h2>\n                    {data.map((post, key) => {\n                        if (post.title != null) {\n                            return (\n                                <div key={key} className=\"post-slot\">\n                                    <Button className=\"ForeverVideo\" onClick={() => {\n                                        if (localStorage.getItem(\"name\")) {\n                                            this.props.SetSave(post.title, post.id_video);\n                                            this.props.message('Добавлено!');\n                                        } else { this.props.message('Эта функция доступна только авторизованным лицам!'); }\n                                    }}>\n                                        <FavoriteIcon />\n                                    </Button>\n\n                                    {post.poster != null ? <img src={post.poster} height=\"200px\" /> : <img src={require('../images/noposter.png')} height=\"200px\" />}\n                                    <Button className=\"post-slot-button\" variant=\"link\" onClick={() => { this.setState({ referrer: \"/video_player?id=\" + post.id_video }) }}><Link to={\"/video_player?id=\" + post.id_video}>{post.title}</Link></Button>\n                                    {post.year != null ?\n                                        <div className=\"info_panel\">\n                                            <p>Год: {post.year}</p>\n                                            <p>Страна: {post.countries}</p>\n                                            <p>Жанры: {post.genres}</p>\n                                            <p>Продолжительность: {post.duration} мин.</p>\n                                            <br />\n                                            <p>{post.discription != null && post.discription}</p>\n                                            <p className=\"kino_poisk\">КиноПоиск: {post.kinopoisk_rating}</p>\n                                            <p className=\"imdb\">Imdb: {post.imdb_rating}</p>\n                                            <p className=\"quality\">{post.quality}</p>\n                                        </div>\n                                        :\n                                        <p style={{ color: \"white\" }}>Нет информации!</p>}\n                                </div>\n                            )\n                        }\n                    })}\n\n                    <Pagination\n                        className=\"pagination\"\n                        count={Math.ceil(this.props.Value / 5)}\n                        page={this.state.page}\n                        siblingCount={3}\n                        boundaryCount={2}\n                        onChange={(event, page) => {\n                            this.props.sear(this.props.type, page - 1, this.state.pageSize, this.props.search);\n                            window.scrollTo(0, 0);\n                            this.setState({ page: page });\n                        }} />\n\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default Films;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\Head.js",["97"],"import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport Header from './Header';\r\nimport HeaderMobile from './HeaderMobile';\r\nimport Login from './Login';\r\nimport Profile from './Profile';\r\n\r\nclass Head extends React.Component {\r\n\r\n    render() {\r\n        let profile;\r\n        if (localStorage.getItem(\"token\")) {\r\n            profile = <Profile />;\r\n        } else {\r\n            profile = <Login message={this.props.onMessage} />;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h3>Dark <span style={{ backgroundColor: \"#ffd700\", color: \"#262a2d\", padding: \"0 5px 3px 5px\", borderRadius: \"5px\" }}>Raven</span></h3>\r\n                    {profile}\r\n                </div>\r\n\r\n                <Header searth={this.props.Search} type={this.props.Type} pageSize={this.props.pageSize} BookMarks={this.props.BookMarks} RemoveSaveBookMark={this.props.RemoveSaveBookMark} message={this.props.onMessage} />\r\n                <HeaderMobile searth={this.props.Search} type={this.props.Type} pageSize={this.props.pageSize} BookMarks={this.props.BookMarks} RemoveSaveBookMark={this.props.RemoveSaveBookMark} message={this.props.onMessage} />\r\n\r\n                <Carousel style={{ height: \"400px\" }}>\r\n                    {this.props.SliderPost.map((items, key) =>\r\n                        <Carousel.Item key={key}>\r\n                            <div class=\"item\">\r\n                                <div className=\"carusel_item\">\r\n                                    <div className=\"carusel_background\" style={{ backgroundImage: \"url(\" + items.photo + \")\" }}></div>\r\n                                    <div className={\"carusel_info\"}><div><Link to={\"/video_player?id=\" + items.idvideo}><h2>{items.title}</h2></Link><p>{items.discr}</p></div><img src={items.photo} style={{ width: \"170px\" }} /></div>\r\n                                </div>\r\n                            </div>\r\n                        </Carousel.Item>\r\n                    )}\r\n                </Carousel>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default Head;","C:\\Users\\Dark_Raven\\Desktop\\darkraven\\src\\components\\HeaderMobile.js",["98","99","100","101"],"import React from 'react';\nimport { Card, Accordion, Form, Modal, Button, Dropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nclass HeaderMobile extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            show: false,\n        };\n    }\n\n    serath = (e) => {\n        this.props.searth(this.props.type, 0, this.props.pageSize, e.value);\n    }\n\n    render() {\n        return (\n            <div>\n                <Accordion defaultActiveKey=\"0\" className={\"nav_bar mobile-view\"}>\n                    <Card>\n                        <Accordion.Toggle as={Card.Header} eventKey=\"1\"><MenuIcon style={{color: \"#FFD700\"}}/></Accordion.Toggle>\n                        <Accordion.Collapse eventKey=\"1\">\n                            <Card.Body>\n                                <Link to=\"/\">Главная</Link>\n                                <a onClick={() => this.setState({ show: true })}>Избранное</a>\n                                <Link to=\"/top\">Рекомендации</Link>\n                                <Link to=\"/films\">Фильмы</Link>\n                                <Link to=\"/serials\">Сериалы</Link>\n                                <Link to=\"/doramy\">Дорамы</Link>\n                                <Link to=\"/anime\">Аниме</Link>\n                            </Card.Body>\n                        </Accordion.Collapse>\n                    </Card>\n                </Accordion>\n                <Modal\n                    show={this.state.show}\n                    onHide={() => this.setState({ show: false })}\n                    dialogClassName=\"modal-90w\"\n                    aria-labelledby=\"example-custom-modal-styling-title\"\n                >\n                    <Modal.Header closeButton style={{backgroundColor: \"#171a1f\", color: \"#FFD700\"}}>\n                        <Modal.Title id=\"example-custom-modal-styling-title\">Избранное</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body style={{backgroundColor: \"#171a1f\", color: \"#FFD700\"}}>\n                        {this.props.BookMarks.map((mark, key) =>\n                            <div className=\"book-mark\" key={\"index=\" + key}>\n                                <Link to={\"/video_player?id=\" + mark[2]}>{mark[1]}</Link>\n                                <Button\n                                    variant=\"danger\"\n                                    style={{\n                                        position: \"absolute\",\n                                        right: \"-50px\",\n                                        marginLeft: \"25px\",\n                                        padding: \"0 3px\"\n                                    }}\n                                    onClick={() => {\n                                        this.props.RemoveSaveBookMark(mark[0]);\n                                        this.props.message(\"Успешное удаление: '\" + mark[1] + \"'\");\n                                    }}>Удалить</Button>\n                            </div>\n                        )}\n                    </Modal.Body>\n                </Modal>\n            </div>\n            // <Navbar bg=\"none\" className={\"nav_bar mobile-view\"} expand=\"lg\" variant=\"none\">\n\n            //     <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            //     <Navbar.Collapse id=\"basic-navbar-nav\">\n            //         <Nav className=\"mr-auto\">\n            //             <Nav.Link href=\"/\">Главная</Nav.Link>\n            //             <NavDropdown title=\"Избранное\" id=\"basic-nav-dropdown\" style={{ backgroundColor: \"#0c1013\" }}>\n            //                 {this.props.BookMarks.map((mark, key) =>\n            //                     <NavDropdown.Item key={\"index=\" + key}>\n            //                         <Link to={\"/video_player/\" + mark[2]}>{mark[1]}</Link>\n            //                         <Button\n            //                             variant=\"danger\"\n            //                             style={{\n            //                                 position: \"absolute\",\n            //                                 right: \"-50px\",\n            //                                 marginLeft: \"25px\",\n            //                                 padding: \"0 3px\"\n            //                             }}\n            //                             onClick={() => {\n            //                                 this.props.RemoveSaveBookMark(mark[0]);\n            //                                 this.props.message(\"Успешное удаление: '\" + mark[1] + \"'\");\n            //                             }}>Удалить</Button>\n            //                     </NavDropdown.Item>\n            //                 )}\n\n            //             </NavDropdown>\n            //             <Nav.Link href=\"/top\">Рекомендации</Nav.Link>\n            //             <Nav.Link href=\"/films\">Фильмы</Nav.Link>\n            //             <Nav.Link href=\"/serials\">Сериалы</Nav.Link>\n            //             <Nav.Link href=\"/doramy\">Дорамы</Nav.Link>\n            //             <Nav.Link href=\"/anime\">Аниме</Nav.Link>\n            //         </Nav>\n\n            //         <Formik\n            //             onSubmit={this.serath}\n            //             initialValues={{\n            //                 value: '',\n            //             }}\n            //         >\n            //             {({\n            //                 handleSubmit,\n            //                 handleChange,\n            //                 handleBlur,\n            //                 values,\n            //                 touched,\n            //                 isValid,\n            //                 errors,\n            //             }) => (\n            //                 <Form inline onSubmit={handleSubmit}>\n            //                     <Form.Control\n            //                         type=\"text\"\n            //                         name=\"value\"\n            //                         value={values.value}\n            //                         onChange={handleChange}\n            //                         placeholder=\"Введите название...\"\n            //                         className=\"mr-sm-2\" />\n            //                     <Button type=\"submit\">Поиск</Button>\n            //                 </Form>\n            //             )}\n            //         </Formik>\n            //     </Navbar.Collapse>\n            // </Navbar>\n        );\n    }\n}\nexport default HeaderMobile;",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":154,"column":36,"nodeType":"108","messageId":"109","endLine":154,"endColumn":38},{"ruleId":"110","severity":1,"message":"111","line":159,"column":232,"nodeType":"112","endLine":159,"endColumn":258},{"ruleId":"113","severity":1,"message":"114","line":161,"column":11,"nodeType":"115","endLine":161,"endColumn":50},{"ruleId":"116","severity":1,"message":"117","line":12,"column":25,"nodeType":"115","endLine":12,"endColumn":61},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"123","line":43,"column":43,"nodeType":"124","messageId":"125","endLine":43,"endColumn":45},{"ruleId":"116","severity":1,"message":"117","line":57,"column":60,"nodeType":"115","endLine":57,"endColumn":100},{"ruleId":"116","severity":1,"message":"117","line":57,"column":103,"nodeType":"115","endLine":57,"endColumn":165},{"ruleId":"116","severity":1,"message":"117","line":35,"column":11,"nodeType":"115","endLine":35,"endColumn":111},{"ruleId":"116","severity":1,"message":"117","line":37,"column":11,"nodeType":"115","endLine":37,"endColumn":115},{"ruleId":"126","severity":1,"message":"127","line":53,"column":9,"nodeType":"115","endLine":53,"endColumn":124},{"ruleId":"118","severity":1,"message":"119","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"128","line":3,"column":22,"nodeType":"120","messageId":"121","endLine":3,"endColumn":28},{"ruleId":"118","severity":1,"message":"129","line":5,"column":5,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"122","severity":1,"message":"130","line":26,"column":44,"nodeType":"124","messageId":"131","endLine":26,"endColumn":46},{"ruleId":"116","severity":1,"message":"117","line":31,"column":37,"nodeType":"115","endLine":31,"endColumn":97},{"ruleId":"116","severity":1,"message":"117","line":32,"column":37,"nodeType":"115","endLine":32,"endColumn":99},{"ruleId":"118","severity":1,"message":"128","line":3,"column":22,"nodeType":"120","messageId":"121","endLine":3,"endColumn":28},{"ruleId":"118","severity":1,"message":"129","line":5,"column":5,"nodeType":"120","messageId":"121","endLine":5,"endColumn":13},{"ruleId":"132","severity":1,"message":"133","line":10,"column":5,"nodeType":"134","messageId":"135","endLine":12,"endColumn":6},{"ruleId":"116","severity":1,"message":"117","line":22,"column":29,"nodeType":"115","endLine":22,"endColumn":56},{"ruleId":"136","severity":1,"message":"137","line":125,"column":121,"nodeType":"115","endLine":125,"endColumn":178},{"ruleId":"136","severity":1,"message":"137","line":193,"column":102,"nodeType":"115","endLine":193,"endColumn":156},{"ruleId":"122","severity":1,"message":"123","line":45,"column":43,"nodeType":"124","messageId":"125","endLine":45,"endColumn":45},{"ruleId":"116","severity":1,"message":"117","line":58,"column":60,"nodeType":"115","endLine":58,"endColumn":100},{"ruleId":"116","severity":1,"message":"117","line":58,"column":103,"nodeType":"115","endLine":58,"endColumn":165},{"ruleId":"116","severity":1,"message":"117","line":34,"column":176,"nodeType":"115","endLine":34,"endColumn":228},{"ruleId":"118","severity":1,"message":"138","line":2,"column":27,"nodeType":"120","messageId":"121","endLine":2,"endColumn":31},{"ruleId":"118","severity":1,"message":"139","line":2,"column":48,"nodeType":"120","messageId":"121","endLine":2,"endColumn":56},{"ruleId":"118","severity":1,"message":"140","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":29,"column":33,"nodeType":"115","endLine":29,"endColumn":82},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react/jsx-pascal-case","Imported JSX component Left_Bar must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Router' is defined but never used.","'Redirect' is defined but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Form' is defined but never used.","'Dropdown' is defined but never used.","'Formik' is defined but never used.","no-global-assign","no-unsafe-negation"]